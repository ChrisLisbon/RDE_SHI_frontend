{"version":3,"sources":["shi_round.png","server_settings.js","Table.js","PlaceTableDialog.js","Map.js","InfoBox.js","MapControlBox.js","Main-left-menu.js","Header.js","request_functions.js","App.js","DiagramNew.js","SelectDiagramHeader.js","EventInfoText.js","ZeroPadding.js","EventObservationsTable.js","InfoPopover.js","DiagramCard.js","PanelBottom.js","EventMap.js","EventDocumentCards.js","EventCheckbox.js","EventNews.js","EventMediaCards.js","EventImageDialog.js","EventMediaMenu.js","EventCommonLinks.js","EventTabsDocMedia.js","EventDocumentsMenu.js","EventMediaButton.js","EventPhotosPaper.js","EventVideosPaper.js","EventTabsPhotoVideo.js","EventMediaDialog.js","EventApp.js","Authorization.js","AdminCommonLinksBlock.js","AdminMediaLinksBlock.js","AdminDamagedZonesBlock.js","AdminRasterDataBlock.js","AdminVectorDataBlock.js","AdminRemoteSensingDataBlock.js","AdminMultimediaRecordsDataBlock.js","NewEditMode.js","AdminPlacesTable.js","AdminPlacesBlock.js","AdminEventsTableForPlace.js","AdminEventDialog.js","AdminReasonBlock.js","AdminTypeBlock.js","AdminTypeReason.js","AdminStationBlock.js","AdminStations.js","db_constants.js","AdminHydroObs.js","AdminMeteoObs.js","AdminObservationsChoise.js","EditMode.js","AdminApp.js","StationsTableDownload.js","HydroObsTableDownload.js","MeteoObsTableDownload.js","DownloadFilesComponent.js","FullApp.js","index.js"],"names":["module","exports","API_settings","frontend_settings","NewTable","props","onRowClick","rowData","name_rus","event_id","detEventId","data","console","log","setEventData","window","open","getData","propsData","eventsList","events","map","push","id","getMuiTheme","createMuiTheme","overrides","MUIDataTableHeadCell","root","color","state","this","placeNameHeader","tableName","options","filterType","download","print","search","responsive","selectableRowsHeader","selectableRows","pagination","textLabels","body","noMatch","fixedHeader","theme","title","columns","name","label","filter","Component","AlertDialog","tableData","content","className","Dialog","onClose","dialogClose","clearEventTableData","maxWidth","DialogContent","DialogActions","Button","onClick","autoFocus","style","display","justifyContent","margin","CircularProgress","green","Typography","align","gutterBottom","require","parse","link","a","fetch","response","json","NewMap","handleZoom","zoomLvl","String","leafletElement","getZoom","setMiniMap","osm2","L","attribution","MiniMap","toggleDisplay","addTo","mousePosition","prefix","emptyString","returnRegionsBorders","regions_borders_data","regions_borders","GeoJSON","key","Math","random","fillColor","weight","getVectorsAsJson","undefined","vectorData","vectorDataGet","misc_vector_data","forEach","el","geojson_for_map","GetVectorAsJson","then","setState","prevState","lat","lng","zoom","dialogOpen","placeEvents","placeName","dialogContent","placesData","withLeaflet","polyRef","useRef","useEffect","polyline","current","leaflet","patterns","Polyline","ref","arrowHead","pixelSize","polygon","pathOptions","stroke","fill","fillOpacity","opacity","Map","bounds","onZoom","TileLayer","url","places","pointcoords","point_geom","toString","slice","split","placeId","polygon_geom","getBounds","CircleMarker","pane","center","parseFloat","setSelectedPlace","setZoomLvl","setListOfEventsForPlace","Tooltip","direction","offset","polygonCoords","isDialogOpen","useStyles","makeStyles","fontSize","box","InfoBox","classes","Card","CardContent","variant","component","CardActions","size","href","height","minHeight","MapControlBox","React","useState","checkedA","checkedB","checkedC","FormControlLabel","control","Checkbox","checked","regionsBordersActive","onChange","event","target","onRegionsBorders","value","icon","checkedIcon","MainMenu","MuiInputBase","MuiAutocomplete","inputRoot","padding","right","top","endAdornment","MuiOutlinedInput","input","PrivateNotchedOutline","MuiFormControl","MuiFormLabel","MuiInputLabel","outlined","transform","MuiSvgIcon","width","returnAutocList","Autocomplete","selectedPlace","noOptionsText","getOptionLabel","option","description_rus","autoHighlight","renderInput","params","TextField","fullWidth","flexGrow","background","Header","AppBar","position","Toolbar","ButtonBase","src","alt","returnGetDataButton","OldEventDataGet","place_id","TypesListGet","ReasonsListGet","CommonLinksListGet","MediaLinksListGet","StationListGet","type","DamagedZonesListGet","RasterDataListGet","VectorDataListGet","RemoteSensingDataListGet","MultimediaRecordsDataListGet","ObservationStationsTypesListGet","login","password","method","mode","cache","credentials","headers","btoa","redirect","referrer","form","postNewHydroObservation","postNewMeteoObservation","App","setWaitingDialogContent","getListOfEventsForPlace","placeDialogOpen","placesObj","returnMap","firstDataGetState","firstDataGet","Diagram","series","dict","Parameter","px","list","dangerValues","oneDict","y","borderColor","text","description","chart","parentHeightOffset","annotations","yaxis","grid","xaxis","lines","show","curve","dashArray","labels","listLables","markers","strokeWidth","strokeOpacity","radius","hover","sizeOffset","trim","maxHeight","hideOverlappingLabels","showDuplicates","offsetX","axisBorder","axisTicks","tooltip","enabled","shared","intersect","enabledOnSeries","formatter","toFixed","innerHeight","flexWrap","formControl","minWidth","SimpleSelect","stationType","valueType","handleChange","setValueType","setNewValueTypeAfterChangingStationType","FormControl","Select","MenuItem","EventInfoText","dataStart","dataEnd","area","cost","maxDepth","meanDepth","maxSpeed","meanSpeed","reason","Paper","overflow","MuiBox","MuiDialogContent","moment","format","EventObservationsTable","MUIDataTableBodyCell","backgroundColor","MUIDataTableToolbar","MUIDataTablePagination","toolbar","MuiTypography","h6","caption","body2","MuiMenuItem","MuiChip","MuiTooltip","pre_data","stationId","meteo_station_id","Boolean","newDate","observation_date","air_temperature","precipitations","hydro_gauge_id","water_level","water_discharge","getColumns","setCellProps","getHeader","observations","rowsPerPage","rowsPerPageOptions","typography","spacing","button","InfoPopover","anchorEl","setAnchorEl","IconButton","aria-describedby","currentTarget","Popover","anchorOrigin","vertical","horizontal","transformOrigin","TabPanel","children","index","other","role","hidden","aria-labelledby","Box","p","a11yProps","palette","paper","bar","bar2","barlabel","DiagramCard","clickedStationId","clickedStationType","eventData","event_start_date","event_end_date","observation_stations","JSON","danger_values","newValueType","sortedDict","hydro_observations","sort","b","date","firstParameter","secondParameter","meteo_observations","flag","setDrawerWidth","Tabs","newValue","indicatorColor","area_km","cost_rub","max_depth","mean_depth","max_speed","mean_speed","Tab","ThemeProvider","ZeroPadding","returnTable","menuButton","zIndex","menuButton2","menuButton1","hide","drawerPaper","border","drawerPaper1","drawerHeader","alignItems","PanelBottom","fullWidthOpen","useTheme","panelOpen","fullWidthW","placement","handleDrawerOpen","edge","clsx","Drawer","anchor","paperWidth","handleDrawerClose","EventMap","numDigits","Control","minimized","Measure","activeColor","completedColor","primaryLengthUnit","secondaryLengthUnit","thousandsSep","units","sqkmeters","factor","decimals","primaryAreaUnit","secondaryAreaUnit","addJsonToStateList","dic","vectorJson","newactiveStationsLayer","activeStationsLayer","lon","styles","type_id","leaflet_style","stationObj","e","setClickedStationId","activeDamagedZonesLayers","keys","damaged_zones","i","start_date","end_date","extent","geom","Popup","activeVectorLayers","activeRasterLayers","misc_raster_data","x_min","image_for_map_extent","y_min","x_max","y_max","image","image_for_map","ImageOverlay","activeRSLayers","remote_sensing_data","styles_get","types","geoJson","element","EventDocumentCards","newsHeader","newsBody","newsLink","EventCheckbox","categ","setCheckedLayers","EventNews","createDocumentCard","media_links","length","header","EventMediaCards","path","document","getElementById","setAttribute","error","CardMedia","EventImageDialog","clickedImageId","scroll","EventMediaMenu","setClickedImageIdType","clickedImageType","clPath","clTitle","createEventCard","fileType","multimedia_records","file","existing","existingV","returnDialog","EventCommonLinks","common_links","EventTabsDocMedia","setValue","aria-label","wrapped","EventDocumentsMenu","createDamagedZonesCheck","allCards","unshift","textAlign","createVectorCheck","createRasterCheck","createRemSensCheck","createStationsCheck","fab","borderRadius","extendedIcon","marginRight","EventMediaButton","float","Fab","EventPhotosPaper","setEmptyCardTrue","emptyCard","paddng","source","overflowX","overflowY","EventTabsPhotoVideo","dialogPaper","EventMediaDialog","EventApp","getMuiTheme2","clickedStationObj","setClickedStationIdAutoc","setIdEventData","firstEventDataGet","location","eventId_","damagedZonesList","vectorLayerList","rasterLayerList","rSLayerList","returnDocsMenu","returnEventMap","returnMediaMenu","returnDiagramCard","returnPanelBottom","returnEventMediaDialog","returnEventMediaButton","returnAutoComp","textfield","card","Authorization","loginValue","passwordValue","showPassword","elevation","accessDenied","returnErrorBox","noValidate","autoComplete","setLogin","InputLabel","Input","setPassword","InputAdornment","onMouseDown","preventDefault","getAccessData","textfield2","AdminCommonLinksBlock","name_eng","lang","description_eng","linkInfo","FormData","append","stringify","pushNewLink","postCommonLink","closeDialog","setUrl","setNameRus","setNameEng","setDescRus","setDescEng","setLang","startIcon","AdminMediaLinksBlock","news_date","info_agency","postMediaLink","setInfoAgency","utils","DateFnsUtils","disableToolbar","KeyboardButtonProps","damZonesTypes","JSONFileName","waitingDialog","pushNewDamagedZone","postDamagedZone","DamagedZonesTypesGet","setTypeId","typesList","alias_rus","returnMenuItemsTypes","autoOk","ampm","disableFuture","setCostRub","setArea","files","AdminRasterDataBlock","legend_file","image_date","ImageFileName","FileName","LegendFileName","ExtentFileName","rasterDataJson","formData","string","new_string","replace","returnParsedExtent","pushNewRasterData","postRasterData","set_name_rus","set_name_eng","set_description_rus","set_description_eng","set_image_for_map_extent","set_sourse","AdminVectorDataBlock","vector_date","GeojsonFileName","pushNewVectorData","vectorDataJson","postVectorData","AdminRemoteSensingDataBlock","sensor","pushNewRemoteSensingData","remoteSensingDataJson","postRemoteSensingData","set_sensor","AdminMultimediaRecordsDataBlock","types_list","record_localization","pushNewMultimediaRecordsData","multimediaRecordsDataJson","postMultimediaRecordsData","MultimediaRecordsTypesListGet","set_type","set_source","record_localization_str","coordList","pointWKT","set_record_localization","fullwidth","textfield3","textfieldLg","empStr","halfField","halfField2","mediumField","btn","btn2","NewEditMode","reason_id","raster_data","vector_data","multimedia_records_data","multimedia_records_data_list","remote_sensing_data_list","vector_data_list","raster_data_list","damaged_zones_list","stations_list","media_links_list","common_links_list","reasons_list","dialog_box_value","eventPushResponse","waitingDialogOpen","fieldsFilled","eventJson","st","sendEventData","postNewEventData","rewriteEventData","eventId","pl_id","event_info","dataType","openDialog","setNullChoise","encType","Divider","reasons","set_reason","returnMenuItemsReason","set_cost_rub","set_area_km","set_max_speed","set_mean_speed","set_max_depth","set_mean_depth","defaultValue","multiple","stations","setStationsList","returnStationsAutoc","setCommonLinks","returnCommonLinksAutoc","setMediaLinks","returnMediaLinksAutoc","DialogContentText","setDamagedZones","returnDamagedZonesAutoc","setRasterData","returnRasterDataAutoc","setVectorData","returnVectorDataAutoc","setRemoteSensingData","returnRemoteSensingDataAutoc","setMultimediaRecordsData","returnMultimediaRecordsDataAutoc","returnFilledFieldsError","endIcon","status","red","comment","returnServerResponse","table1","AdminPlacesTable","condition","setPlaceForOldEvent","setPlaceForEvent","setPlace","placesListGet","AdminPlacesBlock","point_geom_str","pushNewPlaceData","placeDataJson","postNewPlace","closeAddPlaceDialog","set_point_geom","AdminEventsTableForPlace","eventsData","eventName","setIdForOldEvent","setEventId","EventsForPlaceGet","AdminEventDialog","placeDialog","eventDialog","addPlaceDialog","AdminReasonBlock","descEng","descRus","nameEng","nameRus","reasonJson","setReason","addNewReason","leafletSt","typeJson","setType","setLeafletSt","addNewType","table2","AdminTypeReason","typesData","reasonsData","reasonState","typeState","alias_eng","postNewReason","postNewType","Table","TableHead","TableRow","TableCell","TableBody","event_reasons","returnReasonsTable","returnAddReason","event_types","returnTypesTable","returnAddType","AdminStationBlock","typeId","host","stationsJson","setId","setDangerValues","stationTypesList","setHost","setLat","setLon","setElevation","addNewStation","AdminStatons","stationData","stationTypesData","stationStateDialog","stationJson","postNewStation","s","finalList","obj","str","join","returnStringDV","returnStationTable","returnAddStation","station_types_id","AdminHydroObs","stationsList","serverPushResponse","setOpenDialog","hydroObsJson","setHydroHaugeId","returnStationAutoc","setWaterDischarge","setWaterLevel","addNewHyroObs","resposneText","AdminMeteooObs","setMeteoStationId","meteoObsJson","setAirTemperature","setPrecipitations","addNewMeteoObs","helpingText","AdminObservationsChoise","openDialogFileToServer","openMeteoDialog","CSVFile","CSVFileName","MeteoCSVFile","MeteoCSVFileName","responseLog","setLogInfo","closeFileToServerDialog","pushHydroCSVFileAndLog","returnAddCSVButton","pushMeteoCSVFileAndLog","returnAddMeteoCSVButton","returnDialogContent","EditMode","choise","setNewEventChoise","setOldEventChoise","AdminApp","getAccess","userData","accsessDataGetState","returnAuthorization","access","returnEditMode","StationsTableDownload","HydroObsTableDownload","MeteoObsTableDownload","DownloadFilesComponent","returnHydroTable","returnMeteoTable","returnMultimediaList","al","info","Link","returnMiscVectorDataList","returnMiscRasterDataList","returnRemoteSensingDataList","FullApp","exact","render"],"mappings":"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","file":"static/js/main.104c545f.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/shi_round.af04d055.png\";","var API_settings={\"host\":\"91.151.178.102\", \"port\": 20003}\n//var frontend_settings={\"host\": \"0.0.0.0\", \"port\":3000}\nvar frontend_settings={\"host\": \"91.151.178.102\", \"port\": 20002}\nexport {API_settings, frontend_settings}","import MUIDataTable from \"mui-datatables\";\nimport React, {Component} from 'react'\nimport { createMuiTheme, MuiThemeProvider } from '@material-ui/core/styles';\nimport {frontend_settings} from './server_settings.js'\n\nexport default class NewTable extends Component{\n  constructor(props){\n    super(props)\n    this.state = {\n      propsData: null\n    }\n  }\nonRowClick = (rowData: string[]) => {\n  var name_rus=rowData[0]\n  var event_id=this.detEventId(name_rus, this.props.data)\n  console.log(event_id)\n  this.props.setEventData(event_id,)\n  window.open('http://'+ frontend_settings.host+ ':'+frontend_settings.port+'/eventid/#'+event_id,'_blank');\n  \n}\ngetData=(propsData)=>{\n  if(propsData!=null){\n    var eventsList =[]\n    propsData.data.events.map((events) =>{\n       eventsList.push(events)            \n    })\n  \n  return eventsList\n  }\n  else {\n    \n    return []}\n  }\ndetEventId=(name_rus, propsData)=>{\n  var event_id=''\n  propsData.data.events.map((events) =>{\n      if (events.name_rus==name_rus){\n        event_id=events.id\n      }\n      \n            \n    })\n  return event_id\n}\ngetMuiTheme = () => createMuiTheme({\n    overrides: {\n\n        MUIDataTableHeadCell: {\n          root: {\n            color: \"#a6a6a6\",\n          }\n        },\n\n    }\n  })\nrender(){\n\n  const columns = [\n {\n  name: \"name_rus\",\n  label: \"Название\",\n  options: {\n   filter: false,\n\n  }\n },\n {\n  name: \"type\",\n  label: \"Тип\",\n  options: {\n   filter: true,\n\n  }\n },\n {\n  name: \"reason\",\n  label: \"Причина\",\n  options: {\n   filter: true,\n\n  }\n },\n {\n  name: \"cost_rub\",\n  label: \"Ущерб (руб)\",\n  options: {\n   filter: false,\n  \n  }\n },\n {\n  name: \"area_km\",\n  label: \"Площадь (км)\",\n  options: {\n   filter: false,\n  \n  }\n }, \n];\n\nconst data = this.getData(this.props.data)\n\nconst placeNameHeader='События, произошедшие в: '+this.props.tableName\nconst options = {\n  filterType: 'dropdown',\n  download: false,\n  print: false,\n  search: true,\n  responsive: 'scrollMaxHeight',\n  selectableRowsHeader: false,\n  selectableRows: 'none',\n  pagination:false,\n  onRowClick: this.onRowClick,\n  textLabels: {\n    body: {\n      noMatch: \"Совпадения не найдены\",\n    }},\n  fixedHeader: true\n};\n  return(\n    <MuiThemeProvider theme={this.getMuiTheme()}>\n        <MUIDataTable \n          title={placeNameHeader}\n          data={data}\n          columns={columns}\n          options={options}\n        />\n    </MuiThemeProvider>)\n}}","import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport NewTable from './Table.js'\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport Typography from '@material-ui/core/Typography';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport { green,red } from '@material-ui/core/colors';\n\n\nexport default function AlertDialog(props) {\n  const open=props.open;\n  const tableData = props.tableData;\n  const tableName=props.tableName;\n  const content=props.content;\n  \n  if (content=='table'){\n  return (\n\n    <div className='zeroWidth'>\n      \n      <Dialog\n        open={open}\n        onClose={()=>{props.dialogClose(); props.clearEventTableData()}}\n        maxWidth = {'lg'}\n      >\n        \n        <DialogContent>\n          <NewTable data={tableData} tableName={tableName} setEventData={(event_id)=>props.setEventData(event_id)}/>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={()=>{props.dialogClose(); props.clearEventTableData()}} color=\"primary\" autoFocus>\n            Закрыть\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n  }\n  if (content=='waiting'){\n    return (\n          <div className='zeroWidth'>\n      \n          <Dialog\n            open={open}\n            onClose={()=>{props.dialogClose(); props.clearEventTableData()}}\n            maxWidth = {'lg'}\n          >\n            \n            <DialogContent>\n              \n                    <div style={{display: 'flex', justifyContent:\"center\", margin: '30% 0 0'}}>\n                    <CircularProgress style={{color: green[500]}}/>\n                    </div>\n                    <Typography color=\"inherit\" align='center' gutterBottom>\n                      Загрузка данных...\n                    </Typography>\n\n            </DialogContent>\n            \n          </Dialog>\n        </div>\n\n\n    )\n  }\n}\n\n","import React, {Component, useRef, useEffect} from 'react';\nimport * as L from 'leaflet';\nimport { Map, TileLayer, Marker, Popup, Tooltip, GeoJSON, ImageOverlay, CircleMarker, Polyline, withLeaflet} from 'react-leaflet';\nimport MiniMap from 'leaflet-minimap';\nimport \"leaflet-mouse-position\";\n\nimport \"leaflet-polylinedecorator\"\n//<PolylineDecorator patterns={arrow} positions={polyline} weight=\"2\"/>\n\nimport AlertDialog from './PlaceTableDialog.js'\n\nimport {API_settings} from './server_settings.js'\nrequire('../node_modules/leaflet-minimap/dist/Control.MiniMap.min.css');\n\nvar parse = require('wellknown')\n\nasync function GetVectorAsJson(link){\n\tlet response = await fetch('http://'+link);\n        let data = await response.json()\n        return data\n}\n\nclass NewMap extends Component{\n\tconstructor(props){\n\t\tsuper(props)\n\t\t\n\t\tthis.state = {\n\t\tlat: 65, \n\t\tlng: 65,\n\t\tzoom: 4,\n\t\tdialogOpen: false,\n\t\tplaceEvents:null,\n\t\tplaceName: '',\n\t\tdialogContent:'waiting',\n\t\tvectorDataGet:false,\n\t\t\n\t\tregions_borders_data:null,\n\t\tsetMiniMap:false,\n\t}\n}\n\nhandleZoom = ()=>{\n\tvar zoomLvl=String(this.map && this.map.leafletElement.getZoom());\n\tthis.props.handleZoom(zoomLvl)\n\t\t\t\n\t\t\t\t\n}\n\nsetMiniMap = ()=>{\n\tvar map=this.map.leafletElement\n\tvar osm2 = new L.TileLayer(\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\", {attribution:'&amp;copy <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'});\n\tvar miniMap = new L.Control.MiniMap(osm2, { toggleDisplay: true }).addTo(map);\t\t\n\tL.control.mousePosition({prefix:\"ш., д.:\", emptyString: \" \"}).addTo(map);\n}\n\nreturnRegionsBorders=()=>{\n\tif (this.state.regions_borders_data!==null&&this.props.regions_borders==true){\n\t\treturn <GeoJSON  key = {Math.random()} data = {this.state.regions_borders_data} style={{fillColor:'red',\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tweight: 0.5,}}/>\n\t}\n}\ngetVectorsAsJson=()=>{\n\tif (this.props.vectorData!==undefined && this.props.vectorData!==null&&this.state.vectorDataGet==false){\n\t\tconsole.log(this.props.vectorData)\n\t\tconst array=this.props.vectorData.data.misc_vector_data\n\t\tarray.forEach((el)=>{\n\t\t\tconsole.log()\n\t\t\tif (el.id==2){\n\t\t\t\tconsole.log(el.geojson_for_map)\n\t\t\t\tGetVectorAsJson(el.geojson_for_map).then(data=>this.setState((prevState) => {\n\t\t\t\t\t\treturn {regions_borders_data: data}\n\t\t\t\t\n\t\t\t\t\t}))\n\t\t\t\t\n\t\t\t}\n\t\t})\n\t\tthis.setState((prevState) => {\n\t\t\t\t\t\treturn {vectorDataGet: true}\n\t\t\t\t\n\t\t\t\t\t})\n\t}\n}\n\t\trender(){\n\t\t\tif (this.map!==undefined && this.state.setMiniMap==false){\n\t\t\t\tthis.setMiniMap()\n\t\t\t\tthis.setState((prevState) => {\n\t\t\t\t\t\treturn {setMiniMap: true}\n\t\t\t\t\n\t\t\t\t\t})\n\t\t\t}\n\t\t\tthis.getVectorsAsJson()\n\t\t\tconst position = [this.state.lat, this.state.lng];\n\t\t\tconst placesData = this.props.placesData\t\n\t\t\tconst polyline=[[57, -19], [60, -12]];\n\t\t\tconst PolylineDecorator = withLeaflet(props => {\n  const polyRef = useRef();\n  useEffect(() => {\n    const polyline = polyRef.current.leafletElement; //get native Leaflet polyline\n    const { map } = polyRef.current.props.leaflet; //get native Leaflet map\n\n    L.polylineDecorator(polyline, {\n\n        patterns : props.patterns\n    }).addTo(map);\n  }, []);\n  return <Polyline ref={polyRef} {...props} />;\n});\n\t\t\tconst arrow = [\n    {\n      offset: \"55%\",\n      repeat: '0',\n      symbol: L.Symbol.arrowHead({\n        pixelSize: 10,\n        polygon: true,\n        pathOptions: { stroke: true, weight: 1, color: \"black\", fill: true, fillOpacity: 1 , opacity:1, }\n      })\n    }\n  ];\n\t\t\t\n\n\t\t\t\t\t\treturn(\n\t\t\t\t\t<div>\n\t\t\t\t\t\t\n\t\t\t\t\t\t<Map className='map'  bounds={this.props.bounds} onZoom={this.handleZoom} ref={(ref) => {this.map = ref}}>\n\t\t\t\t\t\t    \n\t\t\t\t\t\t    <TileLayer \n\t\t\t\t\t\t      attribution='&amp;copy <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\n          url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n\t\t\t\t\t\t    />\n\t\t\t\t\t\t{placesData.data.places.map((places) => {\n\t\t\t\t\t\t\tvar pointcoords=places.point_geom.toString().slice(6,-1).split(' ')\n\t\t\t\t\t\t\tvar placeId=places.id\n\t\t\t\t\t\t\tvar placeName=places.name_rus\n\t\t\t\t\t\t\tvar feature = L.geoJson(parse(places.polygon_geom.toString()))\n\t\t\t\t\t\t\tvar bounds=feature.getBounds()\t\t\t\t\t\t\t\n            \t\t\t\treturn \t<CircleMarker color='#6666ff'  pane='markerPane' center={[parseFloat(pointcoords[1]), parseFloat(pointcoords[0])]} onClick = {()=> {this.props.setSelectedPlace(bounds, places); this.props.setZoomLvl(); this.props.setListOfEventsForPlace(placeId,placeName)}}>\n            \t\t\t\t  <Tooltip direction=\"right\" offset={[-8, -2]} opacity={1}>\n    \t\t\t\t\t\t\t\t<span>{places.name_rus}</span>\n  \t\t\t\t\t\t\t  </Tooltip>\n            \t\t\t\t</CircleMarker>\n              \t\t\t\t\t\n              \t\t\t\t\t            \t    })\n              \t\t\t}\n\t\t\t\t   \t\t{placesData.data.places.map((places) => {\n\t\t\t\t\t\t\tvar polygonCoords=places.polygon_geom.toString()\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tif (this.props.zoomLvl>8){\n\t\t\t\t\t\t\t\treturn <GeoJSON  key = {Math.random()} data = {parse(polygonCoords)} fillColor='#ff9933' fillOpacity={0.3} color='#ff9933' weight={2}/>\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t})\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t}\n\t\t\t\t\t\t\n\t\t\t\t\t\t{this.returnRegionsBorders()}\n\t\t\t\t   \t\t</Map>\n\t\t\t\t   \t\t<AlertDialog content={this.props.dialogContent} open={this.props.isDialogOpen} dialogClose={()=>this.props.dialogClose()} \n\t\t\t\t   \t\t\t\t\t dialogOpen={()=>this.props.dialogOpen()}\n\t\t\t\t   \t\t \t\t\t tableData={this.props.placeEvents} tableName={this.props.placeName} clearEventTableData={()=>this.props.clearEventTableData()}\n\t\t\t\t   \t\t \t\t\t setEventData={(event_id)=>this.props.setEventData(event_id)}\n\t\t\t\t   \t\t/>\n\t\t\t\t   \t\t\n\t\t\t\t    </div>\n\t\t\t\t)\n\t\t}\n}\n\nexport default NewMap;","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\n\nconst useStyles = makeStyles({\n  \n\n  title: {\n    fontSize: 14,\n\n  },\n  box:{\n    \n    color: '#131E16',\n  }\n});\n\nexport default function InfoBox() {\n  const classes = useStyles();\n  \n  return (\n    \n    <Card className={classes.box}>\n      <CardContent>\n\n        <Typography variant=\"h5\" component=\"h2\" style={{fontSize: '2.5vh'}}>\n          Информационный блок\n        </Typography>\n\n        <Typography variant=\"body2\" component=\"p\" style={{fontSize: '1.5vh'}}>\n          Информация об организаторах \n        </Typography>\n        <Typography variant=\"body2\" component=\"p\" style={{fontSize: '1.5vh'}}>\n          Информация о проекте \n        </Typography>\n      </CardContent>\n      <CardActions>\n        <Button size=\"small\" href=\"#outlined-buttons\">{<span style={{fontSize: '1.5vh'}}>Подробнее</span>}</Button>\n      </CardActions>\n    </Card>\n    \n  );\n}","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport CheckBoxOutlineBlankIcon from '@material-ui/icons/CheckBoxOutlineBlank';\nimport CheckBoxIcon from '@material-ui/icons/CheckBox';\n\nconst useStyles = makeStyles(theme => ({\n  \n  box:{\n    height: '3vh',\n\n  },\n  margin: {\n    margin: '0 0 0 0',\n    \n    minHeight:0,\n    height: '4.5vh'\n  },\n\n}));\n\nexport default function MapControlBox(props) {\n  const classes = useStyles();\nconst [state, setState] = React.useState({\n    checkedA: false,\n    checkedB: false,\n    checkedC: false,\n  });\n\n  const handleChange = name => event => {\n    setState({ ...state, [name]: event.target.checked })\n    const a=event.target.checked\n    props.onRegionsBorders(a);\n  };\n\n  return (\n     <Card style={{height: '4.5vh'}}>\n    <div className={classes.box}>\n      <FormControlLabel className={classes.margin}\n        control={\n          <Checkbox\n            checked={props.regionsBordersActive}\n            onChange={handleChange('checkedA')}\n            value=\"checkedB\"\n            icon={<CheckBoxOutlineBlankIcon style={{ fontSize: '2.5vh', margin:'0'}} />}\n            checkedIcon={<CheckBoxIcon style={{ fontSize: '2.5vh', margin:'0' }} />}\n          />\n        }\n      label={<span style={{ fontSize: '1.8vh', margin: '0', height: '1.8vh' }}>Отобразить границы регионов</span>}\n      />\n      </div>\n      \n       </Card> \n     \n   \n  );\n}","import React, {Component} from 'react';\nimport { createMuiTheme, MuiThemeProvider } from '@material-ui/core/styles';\nimport InfoBox from'./InfoBox.js';\nimport MapControlBox from './MapControlBox.js'\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport TextField from '@material-ui/core/TextField';\nimport Card from '@material-ui/core/Card';\nimport * as L from 'leaflet';\nvar parse = require('wellknown')\n\nexport default class MainMenu extends Component{\n  constructor(props){\n    super(props)\n    this.state = {\n      \n    }\n  }\n\n  setSelectedPlace=(event,value)=>{\n    if (value==null){\n      var bounds=L.latLngBounds([[70, 50], [50,70]])\n      this.props.setSelectedPlace(bounds, null)\n    }\n    if (value!==null && value!==undefined){\n      var feature = L.geoJson(parse(value.polygon_geom.toString()))\n      var bounds=feature.getBounds()\n      console.log(value)\n      this.props.setSelectedPlace(bounds, value)\n      this.props.setZoomLvl()\n      this.props.setListOfEventsForPlace(value.id, value.name_rus)\n  }  \n        \n    }\n\ngetMuiTheme = () => createMuiTheme({\n    overrides: {\n\n        MuiInputBase: {\n          root: {\n            fontSize: '1.8vh',\n          }\n        },\n        MuiAutocomplete:{\n          inputRoot:{\n            '&[class*=\"MuiOutlinedInput-root\"]':{\n              padding:0,\n              height:'5vh',\n              '& $input': {\n                  padding: '0',\n                },\n              '& $endAdornment': {\n                  right: '1vh',\n                  top:'0.5vh'\n                },\n            },\n            endAdornment:{\n              top:0\n            }\n           \n          }\n        },\n        MuiOutlinedInput:{\n          input:{\n            padding:0\n          }\n        },\n        PrivateNotchedOutline:{\n          root:{\n              height: '5vh'\n            \n          }\n        },\n        \n        MuiFormControl:{\n          root:{            \n              height: '5vh'\n            \n          }\n        },\n        MuiFormLabel:{\n          root:{\n            fontSize:'1.8vh'\n          }\n        },\n        MuiInputLabel:{\n          outlined:{\n            transform:'translate(1vh, 1.6vh) scale(1)'\n          }\n        },\n        MuiSvgIcon:{\n          root:{\n            height:'3vh',\n            width:'3vh'\n          }\n        }\n\n    }\n  })\n\n  returnAutocList=()=>{\n    if (this.props.placesData!==null&&this.props.placesData!==undefined){\n      return <Card style={{padding:'1.3vh 0.5vw 0.5vh 0.5vw '}}>\n              <MuiThemeProvider theme={this.getMuiTheme()}>\n                <Autocomplete style={{height:'5vh'}}   \n                    value={this.props.selectedPlace}              \n                    noOptionsText='Нет совпадений'\n                    options={this.props.placesData.data.places}\n                    getOptionLabel={option => option.description_rus} \n                    autoHighlight={true}\n                    onChange={(event,value)=>{this.setSelectedPlace(event,value)}}\n                    renderInput={params => (\n                      <TextField {...params} label='Выберите место' variant=\"outlined\" fullWidth />\n                    )}\n                  />\n              </MuiThemeProvider>\n            </Card>\n    }\n  }\n    render(){\n      return(\n        <div className='left-menu'>\n          <InfoBox/>\n          <br/>\n          {this.returnAutocList()}\n          <br/>\n          <MapControlBox onRegionsBorders={(value)=>this.props.onRegionsBorders(value)} regionsBordersActive={this.props.regionsBordersActive}/>\n          \n        </div>\n        )\n    }\n}","import React, {Component} from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport ButtonBase from '@material-ui/core/ButtonBase';\n\nimport {frontend_settings} from './server_settings.js'\n\nconst useStyles = makeStyles({\n  root: {\n    flexGrow: 1,\n    background: '#1D8A6B',\n    color: '#ffffff',\n    height: '7vh',\n    padding: 0\n   \n  },\n  \n  title: {\n    flexGrow: 1,\n    fontSize: '2.5vh',\n    margin: '0 1vw '\n  },\n});\n\nexport default function Header(props) {\n  const classes = useStyles();\n\n  const adminWindowOpen=()=>{\n    window.open('http://'+ frontend_settings.host+ ':'+frontend_settings.port+'/admin','_blank');\n  }\n\n  const downloadWindowOpen=()=>{\n    window.open('http://'+ frontend_settings.host+ ':'+frontend_settings.port+'/download#'+props.event_id,'_blank');\n  }\n\n  const mainWindowOpen=()=>{\n    window.open('http://'+ frontend_settings.host+ ':'+frontend_settings.port, \"_self\");\n  }\n\n  const returnGetDataButton=(event_id)=>{\n    if(event_id!==undefined){\n      return <Button color=\"inherit\" onClick={()=>downloadWindowOpen()}>\n                      <span style={{ fontSize: '1.5vh' }}>Скачать данные</span>\n             </Button>\n    }\n  }\n\n  return (\n    <div>\n      <AppBar position=\"static\" className={classes.root}>\n        <Toolbar style={{height:'7vh', minHeight:0}}>\n\n        <ButtonBase onClick={()=>mainWindowOpen()}>\n        <img src={require(\"./shi_round.png\")} alt=\"logo\"  style={{height: '6vh', width: '6vh', margin: '0.5vh 0 '}}/>\n        </ButtonBase>\n\n          <div style={{flexGrow: 1}}>\n          <Typography  className={classes.title}>\n            Опасные гидрологические явления\n          </Typography>\n          <Typography  style={{fontSize: '1.5vh', flexGrow: 1, margin: '0 1.5vw ', padding: 0}}>\n            Государственный Гидрологический Институт\n          </Typography>\n          </div>\n          <Button color=\"inherit\" href='#'>\n                    <span style={{ fontSize: '1.5vh' }}>Руководство пользователя</span>\n          </Button>\n          {returnGetDataButton(props.event_id)}\n          <Button color=\"inherit\" onClick={()=>adminWindowOpen()}>\n                    <span style={{ fontSize: '1.5vh' }}>Административная панель</span>\n          </Button>\n          \n          \n        </Toolbar>\n      </AppBar>\n    </div>\n  );\n}","import {API_settings} from './server_settings.js'\n\n\nasync function OldEventDataGet(event_id)\n    {\n      \n        let response = await fetch('http://'+API_settings.host+':'+API_settings.port+'/api/events?event_id=['+ event_id+']');\n        let data = await response.json()\n        return data\n        \n      };\n\nasync function EventsForPlaceGet(place_id)\n    {\n      \n        let response = await fetch('http://'+API_settings.host+':'+API_settings.port+'/api/events?places_id=['+ place_id+']');\n        let data = await response.json()\n        return data\n        \n      };\n\nasync function placesListGet()\n    {\n      \n        let response = await fetch('http://'+API_settings.host+':'+API_settings.port+'/api/places');\n        let data = await response.json()\n        \n        return data\n        \n      }\n\nasync function TypesListGet()\n    {\n      \n        let response = await fetch('http://'+API_settings.host+':'+API_settings.port+'/api/events/types');\n        let data = await response.json()\n        \n        return data\n        \n      }\nasync function ReasonsListGet()\n    {\n      \n        let response = await fetch('http://'+API_settings.host+':'+API_settings.port+'/api/events/reasons');\n        let data = await response.json()\n        \n        return data\n        \n      }\n\nasync function CommonLinksListGet()\n    {\n      \n        let response = await fetch('http://'+API_settings.host+':'+API_settings.port+'/api/common_links');\n        let data = await response.json()\n        return data\n        \n      }\n\nasync function MediaLinksListGet()\n    {\n      \n        let response = await fetch('http://'+API_settings.host+':'+API_settings.port+'/api/media_links');\n        let data = await response.json()\n        \n        return data\n        \n      }\n\nasync function StationListGet(type){\n\tif (type==undefined)\n    {\n      \n        let response = await fetch('http://'+API_settings.host+':'+API_settings.port+'/api/observation_stations');\n        let data = await response.json()\n        \n        return data\n        \n      }\n    if (type!==undefined)\n    {\n      \tconsole.log('not und')\n        let response = await fetch('http://'+API_settings.host+':'+API_settings.port+'/api/observation_stations?type_id=['+type+']');\n        let data = await response.json()\n        \n        return data\n        \n      }\n    }\nasync function DamagedZonesListGet()\n    {\n      \n        let response = await fetch('http://'+API_settings.host+':'+API_settings.port+'/api/damaged_zones');\n        let data = await response.json()\n        \n        return data\n        \n      }\n\nasync function DamagedZonesTypesGet()\n    {\n      \n        let response = await fetch('http://'+API_settings.host+':'+API_settings.port+'/api/damaged_zones/types');\n        let data = await response.json()\n        \n        return data\n        \n      }\n\nasync function RasterDataListGet()\n    {\n      \n        let response = await fetch('http://'+API_settings.host+':'+API_settings.port+'/api/misc_raster_data');\n        let data = await response.json()\n        \n        return data\n        \n      }\n\nasync function VectorDataListGet(id){\n    if (id==undefined)\n    {\n      \n        let response = await fetch('http://'+API_settings.host+':'+API_settings.port+'/api/misc_vector_data');\n        let data = await response.json()\n        \n        return data\n        \n      }\n    if (id!==undefined)\n    {\n        let response = await fetch('http://'+API_settings.host+':'+API_settings.port+'/api/misc_vector_data?id=['+id+']');\n        let data = await response.json()\n        \n        return data\n        \n      }\n    }\nasync function RemoteSensingDataListGet()\n    {\n      \n        let response = await fetch('http://'+API_settings.host+':'+API_settings.port+'/api/remote_sensing_data');\n        let data = await response.json()\n        \n        return data\n        \n      }\n\nasync function MultimediaRecordsDataListGet()\n    {\n      \n        let response = await fetch('http://'+API_settings.host+':'+API_settings.port+'/api/multimedia_records');\n        let data = await response.json()\n        \n        return data\n        \n      }\n\nasync function MultimediaRecordsTypesListGet()\n    {\n      \n        let response = await fetch('http://'+API_settings.host+':'+API_settings.port+'/api/multimedia_records/types');\n        let data = await response.json()\n        \n        return data\n        \n      }\n\nasync function ObservationStationsTypesListGet()\n    {\n      \n        let response = await fetch('http://'+API_settings.host+':'+API_settings.port+'/api/observation_stations/types');\n        let data = await response.json()\n        console.log(data)\n        return data\n        \n        \n      }\n\nasync function getAccess(login, password)\n\t\t{\n\t\t\t\n\t\tlet response = await fetch('http://'+API_settings.host+':'+API_settings.port+'/api/authorization', {\n        method: 'POST', \n        mode: 'cors',\n        cache: 'no-cache',\n        credentials: 'same-origin',\n        headers: {\n            'Content-Type': 'application/json',\n            'Authorization': 'Basic ' + btoa(login+':'+password)\n\n        },\n        redirect: 'follow',\n        referrer: 'no-referrer',\n\n    });\n\t\t\t\tlet data = await response.json()\n\t\t\t\treturn data\n\t\t\t\t\n\t\t\t}\n\nasync function postNewEventData(form, login, password)\n    {\n        let response = await fetch('http://'+API_settings.host+':'+API_settings.port+'/api/events', {\n        method: 'POST',\n        mode: 'cors', \n        cache: 'no-cache',\n        credentials: 'same-origin',\n        headers: {\n            'Authorization': 'Basic ' + btoa(login+':'+password)\n        },\n        redirect: 'follow',\n        referrer: 'no-referrer',\n        body: form, \n    });\n        let data = await response.json()\n        return data\n        \n      }\n\nasync function rewriteEventData(form, login, password)\n    {\n        let response = await fetch('http://'+API_settings.host+':'+API_settings.port+'/api/events/overwrite', {\n        method: 'POST', \n        mode: 'cors', \n        cache: 'no-cache',\n        credentials: 'same-origin',\n        headers: {\n            'Authorization': 'Basic ' + btoa(login+':'+password)\n        },\n        redirect: 'follow',\n        referrer: 'no-referrer',\n        body: form,\n    });\n        let data = await response.json()\n        return data\n        \n      }\n\nasync function postCommonLink(form, login, password)\n    {\n        let response = await fetch('http://'+API_settings.host+':'+API_settings.port+'/api/common_links', {\n        method: 'POST',\n        mode: 'cors',\n        cache: 'no-cache',\n        credentials: 'same-origin',\n        headers: {\n            'Authorization': 'Basic ' + btoa(login+':'+password)\n        },\n        redirect: 'follow',\n        referrer: 'no-referrer',\n        body: form,\n    });\n        let data = await response.json()\n        return data\n        \n      }\n\nasync function postMediaLink(form, login, password)\n    {\n        let response = await fetch('http://'+API_settings.host+':'+API_settings.port+'/api/media_links', {\n        method: 'POST',\n        mode: 'cors',\n        cache: 'no-cache',\n        credentials: 'same-origin',\n        headers: {\n            'Authorization': 'Basic ' + btoa(login+':'+password)\n        },\n        redirect: 'follow',\n        referrer: 'no-referrer',\n        body: form,\n    });\n        let data = await response.json()\n        return data\n        \n      }\n\nasync function postDamagedZone(form, login, password)\n    {\n        let response = await fetch('http://'+API_settings.host+':'+API_settings.port+'/api/damaged_zones', {\n        method: 'POST',\n        mode: 'cors',\n        cache: 'no-cache', \n        credentials: 'same-origin',\n        headers: {\n        \t'Authorization': 'Basic ' + btoa(login+':'+password)\n        },\n        redirect: 'follow', \n        referrer: 'no-referrer',\n        body: form, \n    });\n        let data = await response.json()\n        return data\n        \n      }\n\nasync function postRasterData(form, login, password)\n    {\n        let response = await fetch('http://'+API_settings.host+':'+API_settings.port+'/api/misc_raster_data', {\n        method: 'POST',\n        mode: 'cors',\n        cache: 'no-cache', \n        credentials: 'same-origin',\n        headers: {\n        \t'Authorization': 'Basic ' + btoa(login+':'+password)\n        },\n        redirect: 'follow', \n        referrer: 'no-referrer',\n        body: form, \n    });\n        let data = await response.json()\n        return data\n        \n      }\n\nasync function postVectorData(form, login, password)\n    {\n        let response = await fetch('http://'+API_settings.host+':'+API_settings.port+'/api/misc_vector_data', {\n        method: 'POST',\n        mode: 'cors',\n        cache: 'no-cache', \n        credentials: 'same-origin',\n        headers: {\n        \t'Authorization': 'Basic ' + btoa(login+':'+password)\n        },\n        redirect: 'follow', \n        referrer: 'no-referrer',\n        body: form, \n    });\n        let data = await response.json()\n        return data\n        \n      }\n\nasync function postRemoteSensingData(form, login, password)\n    {\n        let response = await fetch('http://'+API_settings.host+':'+API_settings.port+'/api/remote_sensing_data', {\n        method: 'POST',\n        mode: 'cors',\n        cache: 'no-cache', \n        credentials: 'same-origin',\n        headers: {\n        \t'Authorization': 'Basic ' + btoa(login+':'+password)\n        },\n        redirect: 'follow', \n        referrer: 'no-referrer',\n        body: form, \n    });\n        let data = await response.json()\n        return data\n        \n      }\n\nasync function postMultimediaRecordsData(form, login, password)\n    {\n        let response = await fetch('http://'+API_settings.host+':'+API_settings.port+'/api/multimedia_records', {\n        method: 'POST',\n        mode: 'cors',\n        cache: 'no-cache', \n        credentials: 'same-origin',\n        headers: {\n        \t'Authorization': 'Basic ' + btoa(login+':'+password)\n        },\n        redirect: 'follow', \n        referrer: 'no-referrer',\n        body: form, \n    });\n        let data = await response.json()\n        return data\n        \n      }\n\nasync function postNewPlace(form, login, password)\n    {\n        let response = await fetch('http://'+API_settings.host+':'+API_settings.port+'/api/places', {\n        method: 'POST',\n        mode: 'cors',\n        cache: 'no-cache', \n        credentials: 'same-origin',\n        headers: {\n        \t'Authorization': 'Basic ' + btoa(login+':'+password)\n        },\n        redirect: 'follow', \n        referrer: 'no-referrer',\n        body: form, \n    });\n        let data = await response.json()\n        return data\n        \n      }\n\nasync function postNewReason(form, login, password)\n    {\n        let response = await fetch('http://'+API_settings.host+':'+API_settings.port+'/api/events/reasons', {\n        method: 'POST',\n        mode: 'cors',\n        cache: 'no-cache', \n        credentials: 'same-origin',\n        headers: {\n        \t'Authorization': 'Basic ' + btoa(login+':'+password)\n        },\n        redirect: 'follow', \n        referrer: 'no-referrer',\n        body: form, \n    });\n        let data = await response.json()\n        return data\n        \n      }\n\nasync function postNewType(form, login, password)\n    {\n        let response = await fetch('http://'+API_settings.host+':'+API_settings.port+'/api/events/types', {\n        method: 'POST',\n        mode: 'cors',\n        cache: 'no-cache', \n        credentials: 'same-origin',\n        headers: {\n        \t'Authorization': 'Basic ' + btoa(login+':'+password)\n        },\n        redirect: 'follow', \n        referrer: 'no-referrer',\n        body: form, \n    });\n        let data = await response.json()\n        return data\n        \n      }\n\nasync function postNewStation(form, login, password)\n    {\n        let response = await fetch('http://'+API_settings.host+':'+API_settings.port+'/api/observation_stations', {\n        method: 'POST',\n        mode: 'cors',\n        cache: 'no-cache', \n        credentials: 'same-origin',\n        headers: {\n        \t'Authorization': 'Basic ' + btoa(login+':'+password)\n        },\n        redirect: 'follow', \n        referrer: 'no-referrer',\n        body: form, \n    });\n        let data = await response.json()\n        return data\n        \n      }\n\nasync function postNewHydroObservation(form, login, password)\n    {\n        let response = await fetch('http://'+API_settings.host+':'+API_settings.port+'/api/hydro_observations', {\n        method: 'POST',\n        mode: 'cors',\n        cache: 'no-cache', \n        credentials: 'same-origin',\n        headers: {\n        \t'Authorization': 'Basic ' + btoa(login+':'+password)\n        },\n        redirect: 'follow', \n        referrer: 'no-referrer',\n        body: form, \n    });\n        let data = await response.json()\n        return data\n        \n      }\n\nasync function postNewMeteoObservation(form, login, password)\n    {\n        let response = await fetch('http://'+API_settings.host+':'+API_settings.port+'/api/meteo_observations', {\n        method: 'POST',\n        mode: 'cors',\n        cache: 'no-cache', \n        credentials: 'same-origin',\n        headers: {\n        \t'Authorization': 'Basic ' + btoa(login+':'+password)\n        },\n        redirect: 'follow', \n        referrer: 'no-referrer',\n        body: form, \n    });\n        let data = await response.json()\n        return data\n        \n      }\n\nexport {postMultimediaRecordsData, postRemoteSensingData, postVectorData, postRasterData,\n\t\tpostMediaLink, postCommonLink, rewriteEventData, postNewEventData, getAccess,\n\t\tpostNewPlace, postNewReason, postNewType, postNewStation, \n\t\tpostNewHydroObservation, postNewMeteoObservation,\n\t\tEventsForPlaceGet, MultimediaRecordsTypesListGet, placesListGet,\n\t\tObservationStationsTypesListGet,\n\t    MultimediaRecordsDataListGet, RemoteSensingDataListGet, VectorDataListGet, \n\t\tRasterDataListGet, DamagedZonesListGet, StationListGet, MediaLinksListGet,\n\t\tCommonLinksListGet, ReasonsListGet, TypesListGet, OldEventDataGet, postDamagedZone,\n\t\tDamagedZonesTypesGet}","import React, {Component} from 'react';\nimport NewMap from './Map.js'\nimport './App.css'\nimport MainMenu from './Main-left-menu.js'\nimport Header from './Header.js'\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport Typography from '@material-ui/core/Typography';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport { green,red } from '@material-ui/core/colors';\nimport * as L from 'leaflet';\n\n\nimport {API_settings} from './server_settings.js'\nimport {VectorDataListGet} from './request_functions.js'\nvar parse = require('wellknown')\n\nasync function firstDataGet(state)\n\t{\n\t\tif (state==false){\n\t\t\tlet response = await fetch('http://'+API_settings.host+':'+API_settings.port+'/api/places');\n\t\t\tlet data = await response.json()\n\t\t\treturn data\t\n\t\t\t\n\t\t}\n\t}\nasync function getListOfEventsForPlace(placeId)\n\t\t\t{\n\t\t\t\tlet response = await fetch('http://'+API_settings.host+':'+API_settings.port+'/api/events?places_id=['+placeId+']');\n\t\t\t\tlet data = await response.json()\n\t\t\t\treturn data\t\t\t\t\n\t\t\t}\n\nexport default class App extends Component{\n\tconstructor(props){\n\t\tsuper(props)\n\t\tthis.state = {\n\t\tplacesData: null,    \n\t\tvectorData:null,    \n\t\tfirstDataGetState: false,\n\n\t\tregionsBordersActive:false,\n\n\t\tbounds:L.latLngBounds([[70, 50], [50,70]]),\n\t\tselectedPlace:null,\n\t\tzoomLvl:0,\n\n\t\tplaceDialogOpen:false,\n\t\tdialogContent:'waiting',\n\t\tplaceEvents:null,\n\t\tplaceName: '',\n\t}}\n\n\tclearEventTableData=()=>{\n\t\tthis.setState((prevState) => {\n\t\t\t\t\t\treturn {placeEvents: null,\n\t\t\t\t\t\t\t\tplaceName: ''}\n\t\t\t\t\t\n\t\t\t\t\t\t})\n\t}\n\n\tsetListOfEventsForPlace=(placeId, placeName)=>{\n\t\tconsole.log(placeId)\n\t\tthis.setWaitingDialogContent()\n\t\tthis.dialogOpen()\n\t\tgetListOfEventsForPlace(placeId).then(data=>\n\n\t\t\t\t\t\t\tthis.setState((prevState) => {\n\t\t\t\t\t\t\treturn {placeEvents: data,\n\t\t\t\t\t\t\t\t\tplaceName: placeName,\n\t\t\t\t\t\t\t\t\tdialogContent:'table'}\n\t\t\t\t\t\n\t\t\t\t\t\t}))\n\t}\n\n\tsetWaitingDialogContent=()=>{\n\t\tthis.setState((prevState) => {\n\t\t\t\t\t\treturn {dialogContent:'waiting'}\n\t\t\t\t\n\t\t\t\t\t})\n\t}\n\n\tdialogOpen = ()=>{\n\t\tthis.setState((prevState) => {\n\t\t\t\t\t\treturn {placeDialogOpen:true}\n\t\t\t\n\t\t\t\t\t})\n\n\t}\n\n\tdialogClose = () =>{\n\t\tthis.setState((prevState) => {\n\t\t\t\t\t\treturn {placeDialogOpen:false}\n\t\t\t\t\n\t\t\t\t\t})\n\t}\n\n\tsetSelectedPlace=(bounds, placesObj)=>{   \n\t\t    \tconsole.log('set extent')\n\t\t        this.setState((prevState) => {\n\t\t          return {bounds: bounds,\n\t\t          \t\t  selectedPlace: placesObj}\n\t\t        \n\t\t          });\n\t\t        \n\n        \n    }\n    handleZoom=(zoomLvl)=>{\n    \tthis.setState((prevState) => {\n\t\t          return {zoomLvl: zoomLvl,\n\t\t\t\t\t\t  bounds:null}\n\t\t        \n\t\t          })\n    }\n\n    setZoomLvl=()=>{\n    \tconsole.log('set zoom')\n\t\tthis.setState((prevState) => {\n\t\t\t\t\t\treturn {zoomLvl:9}\n\t\t\t\t\n\t\t\t\t\t})\n\t}\n\n\tonRegionsBorders=(value)=>{\n\t\tthis.setState((prevState) => {\n\t\t\t\t\treturn {regionsBordersActive: value}\n\t\t\t\n\t\t\t\t})\n\t}\n\n\n\treturnMap=()=>{\n\t\tif (this.state.placesData==null){\n\t\t\treturn\t<Card style={{height: '93vh'}}>\n\t\t\t\t  <CardContent >\n                    <div style={{display: 'flex', justifyContent:\"center\", margin: '30% 0 0'}}>\n                    <CircularProgress style={{color: green[500]}}/>\n                    </div>\n                    <Typography color=\"inherit\" align='center' gutterBottom>\n                      Загрузка данных...\n                    </Typography>\n                  </CardContent>\n                </Card>\n\t\t}\n\t\telse {\n\t\t\treturn <NewMap bounds={this.state.bounds} setSelectedPlace={(bounds, placesObj)=>{this.setSelectedPlace(bounds, placesObj)}}\n\t\t\t\t\t\t\tzoomLvl={this.state.zoomLvl}\n\t\t\t\t\t\t\tsetZoomLvl={()=>this.setZoomLvl()}\n\t\t\t\t\t\t\thandleZoom={(zoomLvl)=>this.handleZoom(zoomLvl)}\n\t\t\t\t\t\t\tisDialogOpen={this.state.placeDialogOpen}\n\t\t\t\t\t\t\tdialogOpen={()=>{this.dialogOpen()}}\n\t\t\t\t\t\t\tdialogClose={()=>{this.dialogClose()}}\n\t\t\t\t\t\t\tdialogContent={this.state.dialogContent}\n\t\t\t\t\t\t\tsetWaitingDialogContent={()=>{this.setWaitingDialogContent()}}\n\t\t\t\t\t\t\tsetListOfEventsForPlace={(placeId, placeName)=>{this.setListOfEventsForPlace(placeId, placeName)}}\n\t\t\t\t\t\t\tplaceEvents={this.state.placeEvents}\n\t\t\t\t\t\t\tplaceName={this.state.placeName}\n\t\t\t\t\t\t\tclearEventTableData={()=>{this.clearEventTableData()}}\n\t\t\t\t\t\t\tregions_borders={this.state.regionsBordersActive} \n\t\t\t\t\t\t\tvectorData={this.state.vectorData} placesData={this.state.placesData} \n\t\t\t\t\t\t\tsetEventData={(event_id)=>this.props.setEventData(event_id)}/>\n\t\t}\n\t}\n\n\t\trender(){\t\t\t\n\n\t\tif (this.state.firstDataGetState==false){\t\n\t\tfirstDataGet(this.state.firstDataGetState).then(data=>\n\t\t\t\t\tthis.setState((prevState) => {\n\t\t\t\t\treturn {placesData: data,\n\t\t\t\t\t\t\tfirstDataGetState: true}\n\t\t\t\n\t\t\t\t}))\n\t\tVectorDataListGet(2).then(data=>\n\t\t\t\t\tthis.setState((prevState) => {\n\t\t\t\t\treturn {vectorData: data}\n\t\t\t\n\t\t\t\t}))\n\t\t\t}\n\t\t\treturn(\n\t\t\t\t<div>\n\t\t\t\t\t<Header/>\n\t\t\t\t\t<MainMenu setSelectedPlace={(bounds, placesObj)=>this.setSelectedPlace(bounds, placesObj)} \n\t\t\t\t\t\t\t  setZoomLvl={()=>this.setZoomLvl()}\n\t\t\t\t\t\t\t  selectedPlace={this.state.selectedPlace}\n\t\t\t\t\t\t\t  setListOfEventsForPlace={(placeId, placeName)=>{this.setListOfEventsForPlace(placeId, placeName)}}\n\t\t\t\t\t\t\t  placesData={this.state.placesData} onRegionsBorders={(value)=>this.onRegionsBorders(value)}\n\t\t\t\t\t\t\t  regionsBordersActive={this.state.regionsBordersActive}/>\n\t\t\t\t\t{this.returnMap()}\n\n\t\t\t\t</div>\n\t\t\t\t)\n\n\t\t}\n}","import React, {Component} from 'react';\nimport ReactApexChart from \"react-apexcharts\";\n\nexport default class Diagram extends React.Component {\n        constructor(props) {\n          super(props);\n\n          this.state = {           \n  \n          };\n        }\n        series=(dict)=>{\n        \tconst list=[{\n\t\t\t              name: dict.label,\n\t\t\t              type: 'area',\n\t\t\t              data: dict.Parameter\n\t\t\t            }]\n\t\t\t\n        return list\n      \t}\n        options=(dict, px)=> {\n          const list = []\n          console.log(dict.dangerValues)\n          if (dict.Parameter!==undefined){\n              \n              dict.dangerValues.forEach((el)=>{   \n                console.log(el)             \n                const oneDict={y: el.value,\n                                borderColor: 'red',\n                                label: {\n                                  borderColor: 'red',\n                                  style: {\n                                    color: 'black',\n                                    background: '#ffb3b3'\n                                  },\n                                  text: el.description\n                                }}\n                list.push(oneDict)\n                console.log(list)\n              })}\n\n        return {\n              chart: {\n                height:'100%',\n                parentHeightOffset: 0,\n                width:'95%',\n                type: 'line',\n\n              },\n\n              annotations: {\n                yaxis: list\n              },\n\n\n              grid: {\n              \txaxis: {\n\t\t\t\t        lines: {\n\t\t\t\t            show: true\n\t\t\t\t        }\n\t\t\t\t    },   \n\t\t\t\t    yaxis: {\n\t\t\t\t        lines: {\n\t\t\t\t            show: true\n\t\t\t\t        },\n\n\t\t\t\t    }, \n              },\n              stroke: {\n                curve: 'smooth',\n                width: 1,\n    \t\t\tdashArray: 0,\n              },\n              fill: {\n                type:'solid',\n                opacity: [0.35, 1],\n              },\n              labels: dict.listLables,\n              \n              markers: {\n                size: 0,\n                strokeWidth: 2,\n                strokeOpacity:0.5,\n                fillOpacity: 1,\n                radius: 2,\n                hover: {\n\t\t\t\t\t\t      sizeOffset: 3\n\t\t\t\t\t\t    },\n                },\n              yaxis: \n                {\n                  height:'100%',\n                  width:'5%',\n                  title: {\n                    text: dict.label,\n                    style: {\n\t\t\t\t                fontSize: '1.3vh',\n\t\t\t\t            },\n                  },\n                  labels: {\n\t\t\t\t        \t\n\t\t\t\t        \ttrim:true,\n\t\t\t\t        \tminHeight: undefined,\n          \t\t\t\t\tmaxHeight: undefined,\n\t\t\t\t            style: {\n\t\t\t\t                fontSize: '1.3vh',\n\t\t\t\t            },\n\t\t\t\t            hideOverlappingLabels: true,\n\t\t\t\t        \tshowDuplicates: false,\n\t\t\t\t       },\n                },\n              xaxis: {\twidth:'100%',\n\t\t\t\t        labels: {\n\t\t\t\t        \t\n\t\t\t\t        \toffsetX: 4,\n\t\t\t\t        \thideOverlappingLabels: true,\n\t\t\t\t        \tshowDuplicates: false,\n\t\t\t\t        \ttrim:true,\n\t\t\t\t        \tminHeight: undefined,\n          \t\t\t\t\tmaxHeight: undefined,\n\t\t\t\t            style: {\n\t\t\t\t                fontSize: px,\n\t\t\t\t            },\n\t\t\t\t            \n\t\t\t\t       },\n\t\t\t\t        axisBorder: { show: true },\n\t\t\t\t\t\taxisTicks: { show: false },\n\t\t\t\t\t\ttooltip: { enabled: false },\n\n\t\t\t\t   },\n              tooltip: {\n                shared: true,\n                intersect: false,\n                enabledOnSeries: [0],\n                y: {\n                  formatter: function (y) {\n                    if(typeof y !== \"undefined\") {\n                      return  y.toFixed(0);\n                    }\n                    return y;\n                  }\n                }\n              },\n\n            }\n        }\n        render() {\n        \tconst vh = window.innerHeight * 0.01;\n\t\t\tconst px=vh*1.3\n\n          return (\n            \n\n      <div style={{width:\"98%\", height:\"37.92vh\", margin:\"2vh 1% 0\", minHeight: 0}}>\n  <ReactApexChart options={this.options(this.props.data, px)} series={this.series(this.props.data)} type=\"line\"  height=\"100%\"/>\n</div>\n          );\n        }\n      }","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: 'flex',\n    flexWrap: 'wrap',\n  },\n  formControl: {\n    margin: '0 0 0 5%',\n    minWidth: 0,\n    height: '5.58vh',\n    minHeight: 0,\n\n  },\n\n}));\n\nexport default function SimpleSelect(props) {\n  const classes = useStyles();\n  const stationType=props.stationType;\n  const valueType=props.valueType\n  \n \n  const handleChange = event => {\n    const a= event.target.value\n    props.setValueType(a)\n\n  };\n\n  if (stationType!=null){\n  \t\tif (stationType=='Гидропост'){\n  \t\t\tif (valueType==null||valueType=='air_temperature'||valueType=='precipitations'){\n  \t\t\t\tprops.setNewValueTypeAfterChangingStationType()         \n   \n  \t\t\t}\n  \treturn (\n      <FormControl className={classes.formControl}>\n\n        <Select style={{height:'5.58vh'}}\n          value={valueType}\n          onChange={handleChange}\n          \n\t\t>\n\n          <MenuItem value={'water_discharge'}>{<span style={{ fontSize: '1.8vh' }}>Расход воды</span>}</MenuItem>\n          <MenuItem value={'water_level'}>{<span style={{ fontSize: '1.8vh' }}>Уровень воды</span>}</MenuItem>\n\n        </Select>\n        \n      </FormControl>\n    \n\t)\n\t}\n\tif (stationType=='Метеостанция'){\n\t\tif (valueType==null||valueType=='water_discharge'||valueType=='water_level'){\n  \t\t\t\tprops.setNewValueTypeAfterChangingStationType()\n\n  \t\t\t}\n\t  \treturn (\n\t      <FormControl className={classes.formControl}>\n\n\t        <Select style={{height:'5.58vh'}}\n\t          value={valueType}\n\t          onChange={handleChange}\n\t          \n\t\t\t>\n\n\t          <MenuItem value={'air_temperature'}>{<span style={{ fontSize: '1.8vh' }}>Температура воздуха</span>}</MenuItem>\n\t          <MenuItem value={'precipitations'}>{<span style={{ fontSize: '1.8vh' }}>Количество осадков</span>}</MenuItem>\n\n\t        </Select>\n\t        \n\t      </FormControl>\n\t    \n\t\t)\n\t\t}\n\t}\n\tif (stationType==null){\n\t\treturn <div></div>\n\t\t}\n  \n  \n\t}","import React from 'react';\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport Typography from '@material-ui/core/Typography';\nimport Paper from '@material-ui/core/Paper';\n\nexport default function EventInfoText(props) {\n\tconst name=props.name;\n\tconst dataStart=props.dataStart;\n\tconst dataEnd=props.dataEnd;\n\tconst description=props.description;\n  const area=props.area;\n  const cost=props.cost;\n  const maxDepth=props.maxDepth;\n  const meanDepth=props.meanDepth;\n  const maxSpeed=props.maxSpeed;\n  const meanSpeed=props.meanSpeed;\n  const reason=props.reason;\n  const margin=props.margin;\n  \n\n\nreturn (\n<Paper style={{height:'46.5vh',  margin:{margin}, overflow: 'auto', background:'transparent'}}>\n      \n          <CardContent style={{background: 'rgba(29, 138, 107, 0.8)', height: '5.58vh', padding: '0 0'}}>\n          <Typography variant=\"body1\" component=\"p\" align='center' style={{padding: '1vh', fontSize: '1.8vh'}}>\n            <b>Событие: {name}</b>\n          </Typography>\n        </CardContent>\n        <CardContent  style={{background: 'rgba(255, 255, 255, 0.8)', overflow: 'auto', height: '38.92vh', padding: '2vh 2vh 0 2vh'}}>\n        <Typography variant=\"body2\" component=\"p\" style={{fontSize: '1.5vh'}}>\n          <b><i>Начало события:</i></b> {dataStart}\n          <br/>\n          <b><i>Окончание события:</i></b> {dataEnd}\n        </Typography>\n\n         <Typography variant=\"body2\" component=\"p\" style={{fontSize: '1.5vh'}}>\n          <b><i>Описание события:</i></b>\n        </Typography>\n        <Typography variant=\"body2\" component=\"p\" style={{fontSize: '1.5vh'}}>\n          {description}\n        </Typography>\n\n        <Typography variant=\"body2\" component=\"p\" style={{fontSize: '1.5vh'}}>\n          <b><i>Затронутая площадь:</i></b>\n        </Typography>\n        <Typography variant=\"body2\" component=\"p\" style={{fontSize: '1.5vh'}}>\n          {area}\n        </Typography>\n\n        <Typography variant=\"body2\" component=\"p\" style={{fontSize: '1.5vh'}}>\n          <b><i>Ущерб в рублях:</i></b>\n        </Typography>\n        <Typography variant=\"body2\" component=\"p\" style={{fontSize: '1.5vh'}}>\n          {cost}\n        </Typography>\n\n        <Typography variant=\"body2\" component=\"p\" style={{fontSize: '1.5vh'}}>\n          <b><i>Максимальная глубина:</i></b>\n        </Typography>\n        <Typography variant=\"body2\" component=\"p\" style={{fontSize: '1.5vh'}}>\n          {maxDepth}\n        </Typography>\n\n        <Typography variant=\"body2\" component=\"p\" style={{fontSize: '1.5vh'}}>\n          <b><i>Средняя глубина:</i></b>\n        </Typography>\n        <Typography variant=\"body2\" component=\"p\" style={{fontSize: '1.5vh'}}>\n          {meanDepth}\n        </Typography>\n\n        <Typography variant=\"body2\" component=\"p\" style={{fontSize: '1.5vh'}}>\n          <b><i>Максимальная скорость:</i></b>\n        </Typography>\n        <Typography variant=\"body2\" component=\"p\" style={{fontSize: '1.5vh'}}>\n          {maxSpeed}\n        </Typography>\n\n        <Typography variant=\"body2\" component=\"p\" style={{fontSize: '1.5vh'}}>\n          <b><i>Средняя скорость:</i></b>\n        </Typography>\n        <Typography variant=\"body2\" component=\"p\" style={{fontSize: '1.5vh'}}>\n          {meanSpeed}\n        </Typography>\n        <Typography variant=\"body2\" component=\"p\" style={{fontSize: '1.5vh'}}>\n          <b><i>Причина:</i></b>\n        </Typography>\n        <Typography variant=\"body2\" component=\"p\" style={{fontSize: '1.5vh'}}>\n          {reason}\n        </Typography>\n\n      </CardContent>\n\n    </Paper>\n)\n}","import { createMuiTheme } from '@material-ui/core/styles';\r\n\r\n\r\nexport default createMuiTheme({\r\noverrides: {\r\n        MuiBox: {\r\n            root: {\r\n                padding: 0,\r\n                height: '100%',\r\n            },\r\n        },\r\n\r\n        MuiDialogContent: {\r\n            root: {\r\n                padding: 0,\r\n                \r\n            }\r\n        },\r\n    } \r\n});","import MUIDataTable from \"mui-datatables\";\nimport React, {Component} from 'react'\nimport { createMuiTheme, MuiThemeProvider } from '@material-ui/core/styles';\nvar moment = require('moment');\nmoment().format();\n\n\nexport default class EventObservationsTable extends Component{\n  constructor(props){\n    super(props)\n    this.state = {\n      propsData: null\n    }\n  }\n\n  getMuiTheme = () => createMuiTheme({\n    overrides: {\n\n        MUIDataTableHeadCell: {\n          root: {\n            color: \"#a6a6a6\",\n            fontSize: \"1.5vh\",\n            minWidth:0,\n            maxHeight:'7vh',\n          padding:'1vh 0 1vh 1vw'\n          }\n        },\n        MUIDataTableBodyCell: {\n        root: {\n          backgroundColor: \"#FFF\",\n          minWidth:0,\n          padding:'1vh 0 1vh 1vw'\n        }\n      },\n      MUIDataTableToolbar: {\n          root: {\n            height:'6vh',\n            minHeight:'0vh',\n            maxHeight:'7vh',\n            minWidth:'0px'\n          },\n        },\n      MUIDataTablePagination: {\n          root: {\n            \n            height:'5vh',\n            minHeight:'0vh',\n            minWidth:0,\n            padding:0,  \n            overflow:'hidden'\n          },\n          toolbar : {\n                height: '5vh',\n                minHeight: 0,\n                minWidth:0,\n                padding:0\n                \n            }\n        },\n\n\n      MuiTypography: {\n            h6: {\n                fontSize: '1.5vh',\n            }\n            , caption: {\n                fontSize: '1.5vh'\n            },\n            body2:{\n              fontSize:'1.5vh',\n              margin:0\n            }\n        },\n      MuiMenuItem: {\n            root: {\n                fontSize: '1.5vh'\n            }\n        }\n        , MuiChip: {\n            label: {\n                fontSize: '1.5vh'\n            }\n        }\n        , MuiInputLabel: {\n            root: {\n                fontSize: '1.5vh'\n            }\n        }\n        , MuiTooltip: {\n            tooltip: {\n                fontSize: '1.5vh'\n            }\n        }\n        , MuiInputBase: {\n            input: {\n                fontSize: '1.5vh',\n            }\n        }\n\n\n\n    }\n  })\n\n  getData=(pre_data, stationId, type)=>{\n    var data=pre_data.map((el)=>{\n      if (el.meteo_station_id == stationId){\n        return el\n      }\n      else{\n        return null\n      }\n    }).filter(Boolean)\n    console.log(data)\n    if (type=='meteo'){\n        const new_data=data.map((el)=>{\n          const newDate=moment(el.observation_date, 'DDMMYYYYTHHmmss').format('YYYY/MM/DD HH:mm')\n          const air_temperature=el.air_temperature\n          const id=el.id\n          const meteo_station_id=el.meteo_station_id\n          const precipitations=el.precipitations\n\n          return {'air_temperature': air_temperature, 'id':id, 'observation_date':newDate, 'meteo_station_id': meteo_station_id, 'precipitations':precipitations}\n        })\n        return new_data\n    }\n    if (type=='hydro'){\n        var data=pre_data.map((el)=>{\n        if (el.hydro_gauge_id == stationId){\n          return el\n        }\n        else{\n          return null\n        }\n      }).filter(Boolean)\n      const new_data=data.map((el)=>{\n          const newDate=moment(el.observation_date, 'DDMMYYYYTHHmmss').format('YYYY/MM/DD HH:mm')\n          const water_level=el.water_level\n          const id=el.id\n          const hydro_gauge_id=el.hydro_gauge_id\n          const water_discharge=el.water_discharge\n\n          return {'water_level': water_level, 'id':id, 'observation_date':newDate, 'hydro_gauge_id': hydro_gauge_id, 'water_discharge':water_discharge}\n        })\n        return new_data\n    }\n  }\n\n  getColumns=(type)=>{\n    if (type=='meteo'){\n\n      const columns = [\n                       {\n                      name: \"meteo_station_id\",\n                      label: \"ID метеостанции\",\n                      options: {\n                       filter: true,\n                       setCellProps: () => ({ style: { fontSize: \"1.5vh\" } })\n                      },\n\n                     },\n                     {\n                      name: \"observation_date\",\n                      label: \"Дата\",\n                      options: {\n                       filter: false,\n                       setCellProps: () => ({ style: { fontSize: \"1.5vh\" } })\n                      },\n                     },\n                     {\n                      name: \"air_temperature\",\n                      label: \"Температура воздуха, C\",\n                      options: {\n                       filter: false,\n                       setCellProps: () => ({ style: { fontSize: \"1.5vh\" } })\n                      },\n                     },\n                      {\n                      name: \"precipitations\",\n                      label: \"Количество осадков, мм\",\n                      options: {\n                       filter: false,\n                       setCellProps: () => ({ style: { fontSize: \"1.5vh\" } })\n                      },\n                     },\n                     \n                    ];\n                    return columns\n    }\n    if (type=='hydro'){\n      const columns = [\n                       {\n                      name: \"hydro_gauge_id\",\n                      label: \"ID метеостанции\",\n                      options: {\n                       filter: true,\n\n                      }\n                     },\n                     {\n                      name: \"observation_date\",\n                      label: \"Дата\",\n                      options: {\n                       filter: false,\n\n                      }\n                     },\n                     {\n                      name: \"water_discharge\",\n                      label: \"Расход воды (м)\",\n                      options: {\n                       filter: false,\n\n                      }\n                     },\n                      {\n                      name: \"water_level\",\n                      label: \"Уровень воды (м)\",\n                      options: {\n                       filter: false,\n\n                      }\n                     },\n                     \n                    ];\n                    return columns\n    }\n    \n  }\n\n  getHeader=(type)=>{\n    if (type=='meteo'){\n      return 'Наблюдения метеостанций'\n    }\n    if (type=='hydro'){\n      return 'Наблюдения гидропостов'\n    }\n  }\n\n  render(){\n\nconst columns=this.getColumns(this.props.type)  \n\n\n\nconst placeNameHeader=this.getHeader(this.props.type)\nconst options = {\n  filter:false,\n  download: true,\n  print: false,\n  search: true,\n  responsive: 'stacked',\n  selectableRowsHeader: false,\n  selectableRows: 'none',\n  pagination:true,\n  rowsPerPage:6,\n  rowsPerPageOptions:[],\n  textLabels: {\n    body: {\n      noMatch: \"Совпадения не найдены\",\n    }},\n  fixedHeader: true\n};\n  return(\n    <MuiThemeProvider theme={this.getMuiTheme()}>\n        <MUIDataTable \n          title={placeNameHeader}\n          data={this.getData(this.props.observations, this.props.stationId, this.props.type)}\n          columns={columns}\n          options={options}\n        />\n    </MuiThemeProvider>)\n}}","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Popover from '@material-ui/core/Popover';\nimport Typography from '@material-ui/core/Typography';\nimport HelpOutlineIcon from '@material-ui/icons/HelpOutline';\nimport IconButton from '@material-ui/core/IconButton';\nimport EventInfoText from './EventInfoText'\n\nconst useStyles = makeStyles(theme => ({\n  typography: {\n    padding: theme.spacing(2),\n  },\n  button:{    \n    margin: '0 2%'\n  },\n\n}));\n\nexport default function InfoPopover(props) {\n  const name=props.name;\n  const dataStart=props.dataStart;\n  const dataEnd=props.dataEnd;\n  const description=props.description;\n  const area=props.area;\n  const cost=props.cost;\n  const maxDepth=props.maxDepth;\n  const meanDepth=props.meanDepth;\n  const maxSpeed=props.maxSpeed;\n  const meanSpeed=props.meanSpeed;\n  const reason=props.reason;\n  const classes = useStyles();\n  const [anchorEl, setAnchorEl] = React.useState(null);\n\n  const handleClick = event => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n\n  const open = Boolean(anchorEl);\n  const id = open ? 'simple-popover' : undefined;\n\n  return (\n    <div style={{height:'5.58vh', width:'5.58vh'}}>\n    <IconButton  style={{height:'5.58vh', width:'5.58vh', padding:0}} aria-describedby={id}  onClick={handleClick}  className={classes.button} >\n            <HelpOutlineIcon style={{height:'3vh', width:'3vh', padding:0}}/>\n    </IconButton>\n      \n      <Popover\n        id={id}\n        open={open}\n        anchorEl={anchorEl}\n        onClose={handleClose}\n        anchorOrigin={{\n          vertical: 'bottom',\n          horizontal: 'center',\n        }}\n        transformOrigin={{\n          vertical: 'top',\n          horizontal: 'center',\n        }}\n      >\n        \n        <EventInfoText name={name}\n                         dataStart={dataStart}\n                         dataEnd={dataEnd}\n                         description={description}\n                         area={area}\n                         cost={cost}\n                         maxDepth={maxDepth}\n                         meanDepth={meanDepth}\n                         maxSpeed={maxSpeed}\n                         meanSpeed={meanSpeed}\n                         reason={reason}\n                         style={{margin: '0 0'}}/>\n      </Popover>\n    </div>\n  );\n}","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport Typography from '@material-ui/core/Typography';\nimport Box from '@material-ui/core/Box';\nimport Diagram from './DiagramNew.js'\nimport SimpleSelect from './SelectDiagramHeader.js'\nimport EventInfoText from './EventInfoText'\nimport ThemeProvider  from '@material-ui/styles/ThemeProvider';\nimport ZeroPadding from './ZeroPadding.js'\nimport EventObservationsTable from './EventObservationsTable.js'\n\nimport InfoPopover from './InfoPopover.js'\nvar moment = require('moment');\nmoment().format();\n\n\nfunction TabPanel(props) {\n  const { children, value, index, ...other } = props;\n\n  return (\n    <Typography \n      component=\"div\"\n      role=\"tabpanel\"\n      hidden={value !== index}\n      id={`simple-tabpanel-${index}`}\n      aria-labelledby={`simple-tab-${index}`}\n      {...other}\n    >\n      <Box p={3}>{children}</Box>\n    </Typography>\n  );\n}\n\nTabPanel.propTypes = {\n  children: PropTypes.node,\n  index: PropTypes.any.isRequired,\n  value: PropTypes.any.isRequired,\n};\n\nfunction a11yProps(index) {\n  return {\n    id: `simple-tab-${index}`,\n    'aria-controls': `simple-tabpanel-${index}`,\n  };\n}\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    flexGrow: 1,\n    backgroundColor: theme.palette.background.paper,  \n    \n    height: '46.5vh',\n\n\n  },\n  bar:{\n    backgroundColor:'#1D8A6B',\n    minHeight: 0,\n    height: '5.58vh',\n\n  },\n  bar2:{\n    backgroundColor:'#1D8A6B',\n    minHeight: 0,\n    height: '5.58vh',\n\n  },\n  barlabel:{\n    height:'5.58vh',\n    minHeight: 0,\n    width: '20%',\n    minWidth:'50px'\n  },\n   label:{\n    fontSize:'1.8vh',\n    height:'5.58vh',\n    minHeight: 0,\n    padding:'1.39vh 0 2.39vh'\n  }\n}));\n\nexport default function DiagramCard(props) {\n  const stationId = props.clickedStationId\n  const stationType = props.clickedStationType\n  const eventData = props.eventData\n  \n\n\n\n  const dataStart=moment(eventData.event_start_date, 'DDMMYYYYTHHmmss').format('DD.MM.YYYY')\n  const dataEnd=moment(eventData.event_end_date, 'DDMMYYYYTHHmmss').format('DD.MM.YYYY')\n\n  const dangerValues=eventData.observation_stations.map((el)=>{\n      if (el.id==stationId){\n          return JSON.parse(el.danger_values)\n      }\n      else{\n        return null\n      }\n  }).filter(Boolean)[0]\n\n\n  const classes = useStyles();\n  const [state, setState] = React.useState({\n    value: 1 ,    \n    newValueType: null\n\n  }\n    );\n    \n  const valueType = state.newValueType \n\n\n  const listLables = []\n  const firstParameter = []\n  const secondParameter = []\n  const data ={}\n\n\n  if (stationType == 'Гидропост'){  \n     const sortedDict=eventData.hydro_observations.map((hydro_observations)=>{\n        if (hydro_observations.hydro_gauge_id == stationId){\n          return {\"date\":moment(hydro_observations.observation_date, 'DDMMYYYYTHHmmss').format('DD.MM.YYYY HH:mm'),\n                  \"firstParameter\":parseFloat(hydro_observations.water_discharge),\n                  \"secondParameter\":parseFloat(hydro_observations.water_level)}\n        }\n        else{\n          return null\n        }\n    }).filter(Boolean).sort(function(a,b){\n            return moment(a.date, 'DD.MM.YYYY HH:mm') - moment(b.date, 'DD.MM.YYYY HH:mm');\n})\n    \n\n    const listLables=sortedDict.map((el)=>{\n      return el.date\n    })\n    const firstParameter=sortedDict.map((el)=>{\n      return el.firstParameter\n    })\n    const secondParameter=sortedDict.map((el)=>{\n      return el.secondParameter\n    })\n     \n      \n\n    if (valueType=='water_discharge'){\n\n    data.listLables=listLables\n    data.Parameter=firstParameter\n    data.label='Расход воды, ед.из'\n    data.dangerValues=dangerValues.water_discharge\n  }\n    if (valueType=='water_level'){\n\n    data.listLables=listLables\n    data.Parameter=secondParameter\n    data.label='Уровень воды, м'\n    data.dangerValues=dangerValues.water_level\n  }\n    if (valueType=='air_temperature'){\n\n    data.listLables=[1]\n    data.Parameter=[1]\n    data.dangerValues=[]\n  }\n    if (valueType=='precipitations'){\n\n    data.listLables=[1]\n    data.Parameter=[1]   \n    data.dangerValues=[]\n  }\n}   \n\n     \n    if (stationType == 'Метеостанция'){\n    \n    \nconst sortedDict=eventData.meteo_observations.map((meteo_observations)=>{\n\n        if (meteo_observations.meteo_station_id == stationId){\n          \n          return {\"date\":moment(meteo_observations.observation_date, 'DDMMYYYYTHHmmss').format('DD.MM.YYYY HH:mm'),\n                  \"firstParameter\":parseFloat(meteo_observations.air_temperature),\n                  \"secondParameter\":parseFloat(meteo_observations.precipitations)}\n        }\n        else{\n          return null\n        }\n    }).filter(Boolean).sort(function(a,b){\n            return moment(a.date, 'DD.MM.YYYY HH:mm') - moment(b.date, 'DD.MM.YYYY HH:mm');\n})\n\n    const listLables=sortedDict.map((el)=>{\n      console.log('sortedDict')\n      console.log(sortedDict)\n      return el.date\n    })\n    const firstParameter=sortedDict.map((el)=>{\n      return el.firstParameter\n    })\n    const secondParameter=sortedDict.map((el)=>{\n      return el.secondParameter\n    })\n\n     \n    if (valueType=='air_temperature'){        \n          \n          data.listLables=listLables\n          data.Parameter=firstParameter\n          data.label='Температура воздуха, С'\n          data.dangerValues=dangerValues.air_temperature\n  }\n    if (valueType=='precipitations'){\n          data.listLables=listLables\n          data.Parameter=secondParameter\n          data.label='Количество осадков, мм'\n          data.dangerValues=dangerValues.precipitations\n  }\n    if (valueType=='water_discharge'){\n\n \n    data.listLables=[1]\n    data.Parameter=[1]\n    data.dangerValues=[]\n\n  }\n    if (valueType=='water_level'){\n\n    data.listLables=[1]\n    data.Parameter=[1]\n    data.dangerValues=[]\n  }\n}\n  \n  const setNewValueTypeAfterChangingStationType=()=>{\n  if (stationType=='Гидропост'){\n        \n        if (valueType==null||valueType=='air_temperature'||valueType=='precipitations'){\n          \n          setState({...state, newValueType: 'water_discharge', });\n        }\n  }\n  if (stationType=='Метеостанция'){\n    \n    if (valueType==null||valueType=='water_discharge'||valueType=='water_level'){\n      \n          setState({...state, newValueType: 'air_temperature'});\n        }\n  }\n}\n  \n  const setValueType= (valueType)=>{  \n    setState({...state, newValueType: valueType});\n    \n  }\n  \n  const handleChangeTabs = (event, newValue) => {\n    setState({...state,value:newValue});\n  };\n  \n  const returnTable=(stationType)=>{\n    if (stationType=='Метеостанция'){\n                            return <EventObservationsTable observations={eventData.meteo_observations} stationId={stationId} type='meteo'/>  \n                            } \n        if (stationType=='Гидропост'){\n                            return <EventObservationsTable observations={eventData.hydro_observations} stationId={stationId} type='hydro'/>  \n                            } \n        \n  }\n\n  if (stationType!==null){\n        if (props.flag==false){\n      \n      {props.setDrawerWidth()}\n    }\n  \n    return (\n    <div className={classes.root}>\n      <AppBar className={classes.bar} position=\"static\">\n        \n          <Tabs className={classes.bar2} value={state.value} onChange={handleChangeTabs} indicatorColor=\"primary\">\n         <InfoPopover name={eventData.name_rus}\n                         dataStart={dataStart}\n                         dataEnd={dataEnd}\n                         description={eventData.description_rus}\n                         area={eventData.area_km}\n                         cost={eventData.cost_rub}\n                         maxDepth={eventData.max_depth}\n                         meanDepth={eventData.mean_depth}\n                         maxSpeed={eventData.max_speed}\n                         meanSpeed={eventData.mean_speed}\n                         reason={eventData.reason}/>\n          \n          <Tab className={classes.barlabel}label={<span style={{ fontSize: '1.5vh' }}>График</span>} {...a11yProps(1)} />\n          <Tab className={classes.barlabel}label={<span style={{ fontSize: '1.5vh' }}>Таблица</span>} {...a11yProps(2)} />\n          <Typography className={classes.label}  variant=\"body1\" component=\"p\">Выберите тип данных:</Typography>\n          <SimpleSelect stationType = {stationType}  setValueType={(valueType)=>setValueType(valueType)} valueType={valueType} \n          setNewValueTypeAfterChangingStationType={()=>setNewValueTypeAfterChangingStationType()}/>\n          \n        </Tabs>\n      </AppBar>\n\n      <ThemeProvider theme={ZeroPadding}>\n      <TabPanel  value={state.value} index={1}>\n        <Diagram data = {data}/>\n      </TabPanel>\n      <TabPanel  value={state.value} index={2}>  \n        {returnTable(stationType)}\n      </TabPanel>\n      </ThemeProvider>  \n\n    </div>\n  );\n  }\n  if (stationType==null ){\n\n    return(\n    <EventInfoText name={eventData.name_rus}\n                         dataStart={dataStart}\n                         dataEnd={dataEnd}\n                         description={eventData.description_rus}\n                         area={eventData.area_km}\n                         cost={eventData.cost_rub}\n                         maxDepth={eventData.max_depth}\n                         meanDepth={eventData.mean_depth}\n                         maxSpeed={eventData.max_speed}\n                         meanSpeed={eventData.mean_speed}\n                         reason={eventData.reason}\n                         margin='0 25%'\n                         width='100%'/>)\n  }\n}","import React from 'react';\r\nimport clsx from 'clsx';\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport List from '@material-ui/core/List';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport ArrowDropUpIcon from '@material-ui/icons/ArrowDropUp';\r\nimport ArrowDropDownIcon from '@material-ui/icons/ArrowDropDown';\r\nimport DiagramCard from './DiagramCard.js'\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\n\r\n\r\n\r\nconst useStyles =  makeStyles(theme => ({\r\n  root: {\r\n    display: 'flex',\r\n\r\n  },\r\n\r\n\r\n  menuButton: {\r\n     margin: '87vh 0 0 23vW',\r\n     position: 'relative',\r\n     zIndex: 10, \r\n     background: 'rgba(29, 138, 107, 0.5)',\r\n     height: '5.58vh',\r\n     width:'5.58vh',\r\n     minHeight:0,\r\n     minWidth:0,\r\n     padding: 0,\r\n\r\n  },\r\n  menuButton2: {\r\n     margin: '87vh 0 0 11vW',\r\n     position: 'relative',\r\n     zIndex: 10, \r\n     background: 'rgba(29, 138, 107, 0.5)',\r\n     height: '5.58vh',\r\n     width:'5.58vh',\r\n     minHeight:0,\r\n     minWidth:0,\r\n     padding: 0,\r\n\r\n  },\r\n  menuButton1: {\r\n      background: 'rgba(29, 138, 107, 0.5)',\r\n      height: '5.58vh',\r\n      width:'5.58vh',\r\n      minHeight:0,\r\n      minWidth:0,\r\n      padding: 0,\r\n\r\n  },\r\n  hide: {\r\n    display: 'none',\r\n  },\r\n\r\n  drawerPaper: {\r\n    width: '50%',\r\n    height: '52.08vh', \r\n    margin: '0 25% 0 25%',\r\n    background: 'transparent',\r\n    overflow: 'hidden',\r\n    border: 0\r\n  },\r\n    drawerPaper1: {\r\n    width: '25%',\r\n    height: '52.08vh', \r\n    margin: '0 25% 0 25%',\r\n    background: 'transparent',\r\n    border: 0\r\n  },\r\n  drawerHeader: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    height: '5.58vh', \r\n  },\r\n\r\n\r\n}));\r\n\r\nexport default function PanelBottom(props) {\r\n  const classes = useStyles();\r\n  const theme = useTheme();\r\n  const panelOpen = props.panelOpen\r\n\r\n  const [state, setState] = React.useState({\r\n    \r\n    fullWidthW: false,\r\n    flag:false\r\n  });\r\n\r\n\r\n\r\n  \r\n const paperWidth = (fullWidthOpen) => {\r\n    if (fullWidthOpen==true){\r\n      return classes.drawerPaper\r\n    }\r\n    if (fullWidthOpen==false){\r\n      return classes.drawerPaper1\r\n    }\r\n\r\n }\r\n const buttonMargin = (fullWidthOpen)=>{\r\n  if (fullWidthOpen==true){\r\n      return classes.menuButton\r\n    }\r\n    if (fullWidthOpen==false){\r\n      return classes.menuButton2\r\n    }\r\n }\r\n  const setDrawerWidth = () => event=>{\r\n    \r\n    setState({...state,fullWidthW: true, flag:true});\r\n  };\r\n\r\n  return (\r\n    <div >\r\n      \r\n\r\n        <Tooltip placement=\"top\" title=\"Показать\">\r\n          <IconButton\r\n            color=\"inherit\"\r\n            onClick={()=>props.handleDrawerOpen()}\r\n            edge=\"start\"\r\n            className={clsx(buttonMargin(state.fullWidthW), panelOpen && classes.hide)}\r\n          >\r\n            <ArrowDropUpIcon />\r\n          </IconButton>\r\n        </Tooltip>\r\n        \r\n      \r\n      <Drawer\r\n        \r\n        variant=\"persistent\"\r\n        anchor=\"bottom\"\r\n        open={panelOpen}\r\n        classes={{\r\n          paper: paperWidth(state.fullWidthW),\r\n        }}\r\n      >\r\n        <div className={classes.drawerHeader}>\r\n        <Tooltip placement=\"top\" title=\"Скрыть\">\r\n          <IconButton onClick={()=>props.handleDrawerClose()} className={classes.menuButton1}>\r\n            {theme.direction === 'ltr' ? <ArrowDropDownIcon /> : <ArrowDropUpIcon />}\r\n          </IconButton>\r\n          </Tooltip>\r\n        </div>\r\n        <DiagramCard eventData={props.eventData} clickedStationId={props.clickedStationId}\r\n        clickedStationType={props.clickedStationType} setDrawerWidth={setDrawerWidth()} flag={state.flag}/>\r\n      </Drawer>\r\n      \r\n          </div>\r\n  );\r\n}","import React, {Component} from 'react';\r\nimport L from 'leaflet';\r\nimport { Map, TileLayer, Marker, Popup, Tooltip, GeoJSON, ImageOverlay, CircleMarker, Polyline} from 'react-leaflet';\r\nimport PanelBottom from './PanelBottom.js'\r\nimport MiniMap from 'leaflet-minimap';\r\nimport \"leaflet-mouse-position\";\r\nimport \"leaflet-measure\"\r\n\r\nimport {ObservationStationsTypesListGet} from './request_functions.js'\r\n\r\nrequire('../node_modules/leaflet-measure/dist/leaflet-measure.css');\r\n\r\nvar moment = require('moment');\r\nmoment().format();\r\n\r\nvar parse = require('wellknown')\r\n\r\nasync function GetVectorAsJson(link){\r\n\tlet response = await fetch('http://'+link);\r\n        let data = await response.json()\r\n        return data\r\n}\r\nclass EventMap extends Component{\r\n\tconstructor(props){\r\n\t\tsuper(props)\r\n\t\t\r\n\t\tthis.state = {\r\n\t\tlat:  59.685614, \r\n\t\tlng: 33.292193,\r\n\t\tzoom: 8,\r\n\t\tvectorDataGet:false,\r\n\t\tvectorJson:{},\r\n\t\tstyles_get: false,\r\n\t\tstyles: null,\r\n\t\tsetMiniMap:false,\r\n\t}\r\n}\r\n\r\nsetMiniMap = ()=>{\r\n\tvar map=this.map.leafletElement\r\n\tL.control.mousePosition({prefix:\"ш., д.:\", emptyString: \" \", position:\"bottomright\", numDigits:4}).addTo(map);\r\n\tvar osm2 = new L.TileLayer(\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\", {attribution:'&amp;copy <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'});\r\n\tvar miniMap = new L.Control.MiniMap(osm2, { toggleDisplay: true, minimized:true }).addTo(map);\t\t\r\n\tvar measureControl = new L.Control.Measure({ position: 'bottomright', activeColor: 'red', completedColor:'red', primaryLengthUnit:'meters', secondaryLengthUnit: \"kilometers\", thousandsSep:' ', units:{sqkmeters: {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t                 \tfactor: 0.000001,\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t                 \tdisplay: 'Sq kilometers',\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t                 \tdecimals: 3}},\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t primaryAreaUnit:\"sqmeters\", \r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t secondaryAreaUnit:\"sqkmeters\"\r\n  });\r\n\tmeasureControl.addTo(map);\r\n}\r\n\r\naddJsonToStateList=(id, data)=>{\r\n\tvar dic=this.state.vectorJson\r\n\tdic[id]=data\r\n\tthis.setState((prevState) => {\r\n\t\t\t\t\treturn {vectorJson: dic}\r\n\t\t\t\r\n\t\t\t\t})\r\n}\r\n\r\nnewactiveStationsLayer=(eventData, activeStationsLayer)=>{\r\n\t\tif (activeStationsLayer==true){\r\n\t\t\tconsole.log(eventData)\r\n\t\t\t\r\n\t\t\tvar a=eventData.observation_stations.map((observation_stations) => {\r\n\t\t\t\t\t\t\t\tvar lat = observation_stations.lat\r\n\t\t\t\t\t\t\t\tvar lon = observation_stations.lon\r\n\t\t\t\t\t\t\t\tvar color = null\r\n\t\t\t\t\t\t\t\tvar opacity = null\r\n\r\n\t\t\t\t\t\t\t\tif (this.state.styles!==null){\r\n\t\t\t\t\t\t\t\tthis.state.styles.forEach((el)=>{\r\n\t\t\t\t\t\t\t\t\tif (el.id==observation_stations.type_id){\r\n\t\t\t\t\t\t\t\t\t\tconst style=JSON.parse(el.leaflet_style)\r\n\t\t\t\t\t\t\t\t\t\tcolor=style.color\r\n\t\t\t\t\t\t\t\t\t\topacity=style.opacity\r\n\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\tvar stationId = observation_stations.id\r\n\t\t\t\t\t\t\t\tvar stationType= observation_stations.type\r\n\t\t\t\t\t\t\t\tvar stationObj=observation_stations\r\n\t\t\t\t\t\t\t\treturn \t<CircleMarker pane='markerPane' center={[lat, lon]} color={color} opacity={opacity} onClick={ (e) => this.props.setClickedStationId(stationObj, stationId, stationType, e) }>\r\n\t \t\t\t\t\t\t\t\t\t\t\t<Tooltip direction=\"right\" offset={[-8, -2]} opacity={1}>\r\n\t    \t\t\t\t\t\t\t\t\t\t\t\t<span>{observation_stations.name_rus}</span>\r\n\t    \t\t\t\t\t\t\t\t\t\t\t\t<br/>\r\n\t    \t\t\t\t\t\t\t\t\t\t\t\t<span>{observation_stations.type}</span>\r\n\t    \t\t\t\t\t\t\t\t\t\t\t\t<br/>\r\n\t    \t\t\t\t\t\t\t\t\t\t\t\t<span>id={observation_stations.id}</span>\r\n\t  \t\t\t\t\t\t\t  \t\t\t\t</Tooltip>\r\n\t            \t\t\t\t\t\t</CircleMarker>            \t\t\r\n\t      \r\n\t     \t   \t    })\r\n\t       \treturn a\r\n\t}\r\n\telse{\t\t\r\n\t\treturn null\r\n\t}}\r\n\r\nactiveDamagedZonesLayers=(eventData, activeDamagedZonesLayers)=>{\r\n\t\r\n\t\r\n\tvar keys =[]\r\n\tfor (var key in activeDamagedZonesLayers){\r\n\t\t\r\n\t\tif (activeDamagedZonesLayers[key]==true){\r\n\t\t\tkeys.push(key)\r\n\t\t}\r\n\t}\t\r\n\r\n\tvar layers = eventData.damaged_zones.map((damaged_zones) =>{\r\n\t\tfor (var i in keys){\r\n\t\t\tif (keys[i]==damaged_zones.id){\r\n\t\t\t\tvar id=damaged_zones.id\r\n\t\t\t\tvar description_rus=damaged_zones.description_rus\r\n\t\t\t\tvar type=damaged_zones.type\r\n\t\t\t\tvar area=damaged_zones.area\r\n\t\t\t\tvar cost_rub=damaged_zones.cost_rub\r\n\t\t\t\t\r\n\t\t\t\tvar start_date=moment(damaged_zones.start_date, 'DDMMYYYYTHHmmss').format('DD.MM.YYYY HH:mm')\r\n\t\t\t\tvar end_date=moment(damaged_zones.end_date, 'DDMMYYYYTHHmmss').format('DD.MM.YYYY HH:mm')\r\n\r\n\t\t\t\tvar extent = parse(damaged_zones.geom)\r\n\t\t\t\tconst style=JSON.parse(damaged_zones.leaflet_style)\r\n\t\t\t\t\r\n\t\t\t\tconsole.log(extent)\r\n\t\t\t\treturn <GeoJSON  key = {id}  data = {extent} style={style}>\r\n\t\t\t\t\t\t\t<Popup maxWidth=\"500\">\r\n\t\t\t\t\t\t\t\t<b>Описание:</b> {description_rus}<br/> \r\n\t\t\t\t\t\t\t\t<b>Тип:</b> {type}<br/>\r\n\t\t\t\t\t\t\t\t<b>Площадь:</b> {area} км<br/>\r\n\t\t\t\t\t\t\t\t<b>Ущерб:</b> {cost_rub} рублей<br/>\r\n\t\t\t\t\t\t\t\t<b>Актуальность:</b> {start_date} - {end_date}<br/>\r\n\t\t\t\t\t\t\t</Popup>\r\n\t\t\t\t\t\t</GeoJSON>\r\n\t\t\t}\r\n\t\t}\r\n\t})\r\nreturn layers\r\n}\r\n\r\nactiveVectorLayers=(eventData, activeVectorLayers)=>{\r\n\t\r\n\t\r\n\tvar keys =[]\r\n\tfor (var key in activeVectorLayers){\r\n\t\t\r\n\t\tif (activeVectorLayers[key]==true){\r\n\t\t\tkeys.push(key)\r\n\t\t}\r\n\t}\r\n\t\r\n\r\n\tvar layers = eventData.misc_vector_data.map((misc_vector_data) =>{\r\n\t\tfor (var i in keys){\r\n\t\t\tif (keys[i]==misc_vector_data.id){\r\n\t\t\t\tvar id=misc_vector_data.id\r\n\t\t\t\tvar extent = this.state.vectorJson[id]\r\n\t\t\t\tconsole.log(extent)\r\n\t\t\t\treturn <GeoJSON  key = {Math.random()} data = {extent} />\r\n\t\t\t}\r\n\t\t}\r\n\t})\r\nreturn layers\r\n}\r\n\r\nactiveRasterLayers = (eventData, activeRasterLayers)=>{\r\n\tvar keys =[]\r\n\tfor (var key in activeRasterLayers){\r\n\t\t\r\n\t\tif (activeRasterLayers[key]==true){\r\n\t\t\tkeys.push(key)\r\n\t\t}\r\n\t}\r\n\tvar layers = eventData.misc_raster_data.map((misc_raster_data) =>{\r\n\t\tfor (var i in keys){\r\n\t\t\tif (keys[i]==misc_raster_data.id){\r\n\t\t\t\tvar x_min = JSON.parse(misc_raster_data.image_for_map_extent).x_min\r\n\t\t\t\tvar y_min = JSON.parse(misc_raster_data.image_for_map_extent).y_min\r\n\t\t\t\tvar x_max = JSON.parse(misc_raster_data.image_for_map_extent).x_max\r\n\t\t\t\tvar y_max = JSON.parse(misc_raster_data.image_for_map_extent).y_max\r\n\t\t\t\tvar image = 'http://'+misc_raster_data.image_for_map\r\n\t\t\t\treturn <ImageOverlay\r\n\t\t\t            bounds={[[x_min, y_min], [x_max, y_max]]}\r\n\t\t\t            url= {image}\r\n\t\t\t          />\r\n\t\t\t}\r\n\t\t}\r\n\t})\r\nreturn layers\r\n}\r\nactiveRSLayers = (eventData, activeRSLayers)=>{\r\n\tvar keys =[]\r\n\tfor (var key in activeRSLayers){\r\n\t\t\r\n\t\tif (activeRSLayers[key]==true){\r\n\t\t\tkeys.push(key)\r\n\t\t}\r\n\t}\r\n\tvar layers = eventData.remote_sensing_data.map((remote_sensing_data) =>{\r\n\t\tfor (var i in keys){\r\n\r\n\t\t\tif (keys[i]==remote_sensing_data.id){\r\n\t\t\t\tvar x_min = JSON.parse(remote_sensing_data.image_for_map_extent).x_min\r\n\t\t\t\tvar y_min = JSON.parse(remote_sensing_data.image_for_map_extent).y_min\r\n\t\t\t\tvar x_max = JSON.parse(remote_sensing_data.image_for_map_extent).x_max\r\n\t\t\t\tvar y_max = JSON.parse(remote_sensing_data.image_for_map_extent).y_max\r\n\t\t\t\tvar image = 'http://'+remote_sensing_data.image_for_map\r\n\t\t\t\t\r\n\t\t\t\treturn <ImageOverlay\r\n\t\t\t            bounds={[[x_min, y_min], [x_max, y_max]]}\r\n\t\t\t            url= {image}\r\n\t\t\t          />\r\n\t\t\t}\r\n\t\t}\r\n\t})\r\nreturn layers\r\n}\r\n\t\trender(){\r\n\t\t\tif (this.map!==undefined && this.state.setMiniMap==false){\r\n\t\t\t\tthis.setMiniMap()\r\n\t\t\t\tthis.setState((prevState) => {\r\n\t\t\t\t\t\treturn {setMiniMap: true}\r\n\t\t\t\t\r\n\t\t\t\t\t})\r\n\t\t\t}\r\n\t\t\tif (this.state.styles_get==false){\r\n\t\t\t\tObservationStationsTypesListGet().then(data=>{this.setState((prevState) => {\r\n\t\t\t\t\treturn {styles: data.data.types,\r\n\t\t\t\t\t\t\tstyles_get:true}\r\n\t\t\t\r\n\t\t\t\t})})\r\n\t\t\t}\r\n\r\n\t\t\t\r\n\t\t\tconst eventData=this.props.eventData\r\n\r\n\t\t\tvar feature = L.geoJson(parse(eventData.places[0].polygon_geom.toString()))\r\n\t\t\tvar bounds=feature.getBounds()\r\n\r\n\t\t\tconst activeDamagedZonesLayers=this.props.activeDamagedZonesLayers\r\n\t\t\tconst activeVectorLayers=this.props.activeVectorLayers\r\n\t\t\tconst activeRasterLayers=this.props.activeRasterLayers\r\n\t\t\tconst activeRSLayers=this.props.activeRSLayers\r\n\t\t\tconst activeStationsLayer=this.props.activeStationsLayer\r\n\t\t\tif (this.state.vectorDataGet==false){\r\n\t\t\t\teventData.misc_vector_data.forEach(element=>{\r\n\t\t\t\t\tconst link=element.geojson_for_map\r\n\t\t\t\t\tconst id=element.id\r\n\t\t\t\t\tGetVectorAsJson(link).then(data=>this.addJsonToStateList(id, data))\r\n\t\t\t\t\tthis.setState((prevState) => {return {vectorDataGet: true}})\r\n\t\t\t\t}) \r\n\t\t\t}\r\n\r\n\t\t\treturn(\r\n\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t<Map className='event-map'  center={this.props.center} zoom={13} bounds={bounds} ref={(ref) => {this.map = ref}}>\r\n\t\t\t\t\t\t    <TileLayer\r\n\t\t\t\t\t\t      attribution='&amp;copy <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\r\n          url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\r\n\t\t\t\t\t\t    />\r\n\r\n\t\t\t\t\t\t{this.newactiveStationsLayer(eventData, activeStationsLayer)}\r\n\t\t\t\t\t\t{this.activeDamagedZonesLayers(eventData, activeDamagedZonesLayers)}\r\n\t\t\t\t\t\t{this.activeVectorLayers(eventData, activeVectorLayers)}\r\n\t\t\t\t\t\t{this.activeRasterLayers(eventData, activeRasterLayers)}\r\n\t\t\t\t\t\t{this.activeRSLayers(eventData, activeRSLayers)}\r\n\t\t\t\t   \t\t</Map>\r\n\t\t\t\t    </div>\r\n\t\t\t\t)\r\n\t\t}\r\n}\r\nexport default EventMap;","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nconst useStyles = makeStyles({\r\n  \r\n\r\n  title: {\r\n    fontSize: 14,\r\n\r\n  },\r\n  box:{\r\n    background: '#ffffff',\r\n    color: '#131E16',\r\n    margin: 5\r\n  }\r\n});\r\n\r\nexport default function EventDocumentCards(props) {\r\n  const classes = useStyles();\r\n    \r\n    return (\r\n    <Card className={classes.box}>\r\n      <CardContent>\r\n\r\n        <Typography variant=\"body1\" style={{fontSize: '1.8vh'}} component=\"p\">\r\n          <b>{props.newsHeader}</b>\r\n        </Typography>\r\n        <Typography style={{fontSize: '1.8vh'}} component=\"p\">\r\n          {props.newsBody}\r\n        </Typography>\r\n      </CardContent>\r\n      <CardActions>\r\n        <Button size=\"small\" style={{fontSize: '1.4vh'}} href={props.newsLink} target=\"_blank\">Читать в источнике</Button>\r\n      </CardActions>\r\n    </Card>\r\n\r\n  );\r\n}  \r\n\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport CheckBoxOutlineBlankIcon from '@material-ui/icons/CheckBoxOutlineBlank';\r\nimport CheckBoxIcon from '@material-ui/icons/CheckBox';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  box: {\r\n    height: '3vh',\r\n    \r\n  },\r\n  margin: {\r\n    margin: '0 0 0 0',\r\n    fontSize: 11,\r\n    \r\n  },\r\n\r\n}));\r\n\r\nexport default function EventCheckbox(props) {\r\n  const classes = useStyles();\r\n  const name=props.name\r\n  const id = props.id\r\n  const categ=props.categ\r\n  const [state, setState] = React.useState({\r\n      'Станции наблюдения': true,\r\n      });\r\n  \r\n\r\n  const handleChange = (name, id) => event => {\r\n    setState({ ...state, [name]: event.target.checked });\r\n    props.setCheckedLayers(name,id, categ)\r\n  };\r\n  \r\n  return (\r\n    <div className={classes.box}>\r\n      <FormControlLabel className={classes.margin}\r\n        control={\r\n          <Checkbox\r\n            checked={state[name]}\r\n            onChange={handleChange(name, id, categ)}\r\n            value={name}\r\n            icon={<CheckBoxOutlineBlankIcon style={{ fontSize: '2.5vh' }} />}\r\n            checkedIcon={<CheckBoxIcon style={{ fontSize: '2.5vh' }} />}\r\n          />\r\n        }\r\n      label={<span style={{ fontSize: '1.8vh' }}>{props.name}</span>}\r\n      />\r\n      </div>\r\n      )\r\n    }","import React, {Component} from 'react';\r\nimport EventDocumentCards from './EventDocumentCards.js'\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport EventCheckbox from './EventCheckbox.js';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Card from '@material-ui/core/Card';\r\n\r\nexport default class EventNews extends Component{\r\n  constructor(props){\r\n    super(props)\r\n    this.state = {\r\n     \r\n    }\r\n  }\r\n  createDocumentCard=(eventData)=>{\r\n    if (eventData.media_links.length!==0){\r\n              var allCards=eventData.media_links.map((media_links) => {\r\n              var header = media_links.name_rus\r\n              var body = media_links.description_rus\r\n              var link = media_links.url\r\n              return <EventDocumentCards newsHeader={header} newsBody={body} newsLink={link}/>\r\n                \r\n            })\r\n            return allCards\r\n    }\r\n    else{\r\n      return <Card style={{background: '#ffffff',color: '#131E16', margin: 5, height: '20%'}} >      \r\n                <Typography variant=\"body1\" component=\"p\" style={{margin: '25% 0', fontSize: '1.8vh'}} align='center'>\r\n                Упоминания в новостях отсутствуют\r\n                </Typography>\r\n              </Card>\r\n    }\r\n }\r\n render(){\r\n      const eventData=this.props.eventData\r\n      return(\r\n      \r\n      <div style={{margin:'0'}}>\r\n          {this.createDocumentCard(eventData)}\r\n      </div>\r\n      \r\n         )\r\n       }\r\n     }","import React, {Component} from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\n\r\n\r\nexport default class EventMediaCards extends Component {\r\n  constructor(props){\r\n    super(props);\r\n  }\r\n  path='http://'+this.props.path\r\n  id=this.props.id\r\n  componentDidMount() {\r\n\r\n    try {\r\n      document.getElementById(this.id).setAttribute(\"allowfullscreen\", \"true\")\r\n      document.getElementById(this.id).setAttribute(\"src\", this.path)\r\n    } catch (error) {\r\n\r\n    }\r\n  }\r\n    render(){\r\n    return (\r\n    <Card style={{width: '29vw', minHeight: '29vh', margin: 0}}>\r\n      <CardContent style={{width: '28vw', minHeight: '28vh', margin: '0.5vh 0.5vw', padding: 0}}>\r\n\r\n        <CardMedia style={{width: '28vw', minHeight: '28vh', }} \r\n          id ={this.id}\r\n          \r\n          component={this.props.type}\r\n          alt={this.props.title}\r\n          \r\n        />\r\n        <Typography variant=\"body2\" align='center' component=\"p\">\r\n          <span style={{ fontSize: '1.5vh' }}>{this.props.title}</span>\r\n        </Typography>\r\n        \r\n      </CardContent>\r\n\r\n    </Card>\r\n\r\n  );}\r\n}  \r\n\r\n","import React from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport EventMediaCards from './EventMediaCards.js'\r\nimport ThemeProvider from '@material-ui/styles/ThemeProvider';\r\nimport ZeroPadding from './ZeroPadding';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nexport default function EventImageDialog(props) {\r\n  const open=props.open;\r\n  const eventData = props.eventData;\r\n  const title=props.title\r\n  const path='http://'+props.path\r\n  const type=props.type\r\n  const id=props.clickedImageId\r\n\r\n\r\n\r\n  return (\r\n\r\n    \r\n       \r\n      <Dialog\r\n        open={open}\r\n        onClose={()=>props.dialogClose()}\r\n        maxWidth = 'lg'\r\n        scroll = 'body'\r\n      >\r\n        <ThemeProvider theme={ZeroPadding}>\r\n        <DialogContent>\r\n          <Card >\r\n                  <CardContent >\r\n\r\n                    <CardMedia style={{width: '100%', height: '100%', }} \r\n                      \r\n                      image={path}\r\n                      component='img'\r\n                      alt={title}\r\n                      \r\n                    />\r\n                    <Typography variant=\"body2\" component=\"p\">\r\n                      {title}\r\n                    </Typography>\r\n                    \r\n                  </CardContent>\r\n           </Card>\r\n\r\n\r\n        </DialogContent>\r\n        </ThemeProvider>\r\n        <DialogActions>\r\n          <Button onClick={()=>{props.dialogClose();console.log(path)}} color=\"primary\" autoFocus>\r\n            Закрыть\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n\r\n    \r\n  );\r\n}","import React, {Component} from 'react';\nimport EventMediaCards from './EventMediaCards.js'\nimport { makeStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport EventImageDialog from './EventImageDialog.js';\nimport ButtonBase from '@material-ui/core/ButtonBase';\nimport Card from '@material-ui/core/Card';\nimport Typography from '@material-ui/core/Typography';\nimport CardContent from '@material-ui/core/CardContent';\n\nexport default class EventMediaMenu extends Component{\n  constructor(props){\n    super(props)\n    this.state = {\n      dialogOpen: false,\n      clickedImageId: null,\n      clickedImageType: null\n    }\n  }\n\n  dialogOpen = ()=>{\n  this.setState((prevState) => {\n          return {dialogOpen:true}\n      \n        })\n\n  }\n  dialogClose = () =>{\n    this.setState((prevState) => {\n            return {dialogOpen:false}\n        \n          })\n\n\n  }\n  setClickedImageIdType=(id, type, path, title)=>{\n    this.setState((prevState) => {\n            return {clickedImageId: id,\n                    clickedImageType: type,\n                    clPath:path,\n                    clTitle:title}\n        \n          })\n  }\n\n  createEventCard=(eventData, fileType)=>{\n              if (eventData.multimedia_records.length==0){\n                if (fileType=='photo'){\n                  return <Card style={{width: '29.5vw', height: '29.5vh', margin: '0.5vh 0.5vw'}}>\n                               <CardContent>    \n                                    <Typography align='center' style={{margin: '25% 0'}} variant=\"body1\" component=\"p\">\n                                      Фото отсутствуют\n                                    </Typography>        \n                                </CardContent>\n                            </Card>\n                }\n                if (fileType=='video'){\n                  return <Card style={{width: '29.5vw', height: '29.5vh', margin: '0.5vh 0.5vw'}}>\n                               <CardContent>    \n                                    <Typography align='center' style={{margin: '25% 0'}} variant=\"body1\" component=\"p\">\n                                      Видео отсутствуют\n                                    </Typography>        \n                                </CardContent>\n                            </Card>\n                }\n              }\n\n              else{\n              var allCards=eventData.multimedia_records.map((multimedia_records) => {\n                console.log(multimedia_records)\n              var title=multimedia_records.name_rus\n              var path=multimedia_records.file\n              \n                if (fileType=='photo'){\n                  var existing=false\n                  if (multimedia_records.type=='photo'){\n                    var existing=true;\n                    var type='img'\n                    var id = multimedia_records.id\n\n                    return <ButtonBase onClick = {()=>{this.dialogOpen(); this.setClickedImageIdType(id, type, path, title)}}>\n                           <EventMediaCards id={id} type={type} title={title} path = {path}  />\n                           </ButtonBase>\n\n                  }\n                  if (existing==false){\n                    return <Card style={{width: '29.5vw', height: '29.5vh', margin: '0.5vh 0.5vw'}}>\n                               <CardContent>    \n                                    <Typography align='center' style={{margin: '25% 0'}} variant=\"body1\" component=\"p\">\n                                      Фото отсутствуют\n                                    </Typography>        \n                                </CardContent>\n                            </Card>\n                  }\n                }                \n                if (fileType=='video'){\n                  var existingV=false\n                  if (multimedia_records.type=='video'){\n                    var existingV=true;\n                    var type='iframe'\n                    var id=multimedia_records.id\n                    return <ButtonBase style={{width: '30vw', padding:0, margin:0}} onClick = {()=>{this.dialogOpen(); this.setClickedImageIdType(id, type, path, title)}}>\n                           <EventMediaCards id={id} type={type} title={title} path = {path}/>\n                           </ButtonBase>\n                  }\n                  if (existingV==false){\n                    return <Card style={{width: '29.5vw', height: '29.5vh', margin: '0.5vh 0.5vw'}}>\n                               <CardContent>    \n                                    <Typography align='center' style={{margin: '25% 0'}} variant=\"body1\" component=\"p\">\n                                      Видео отсутствуют\n                                    </Typography>        \n                                </CardContent>\n                            </Card>\n                  }\n                }\n                \n              \n                \n            })\n            return allCards}\n }\n returnDialog=(state, eventData)=>{\n  if (state!=null){\n      return <EventImageDialog open={this.state.dialogOpen} dialogClose={()=>this.dialogClose()} dialogOpen={()=>this.dialogOpen()}\n                          eventData={eventData} clickedImageId={this.state.clickedImageId} type={this.state.clickedImageType}\n                          path={this.state.clPath} title={this.state.clTitle}/>\n  }\n\n }\n\n    render(){\n      const eventData=this.props.eventData\n      const fileType=this.props.fileType\n      return(\n        <div >\n        <Paper style={{maxHeight: '40vh', width: '30vw', padding: 0, margin:0,  overflow: 'auto', background: '#97C8B3'}}>\n          {this.createEventCard(eventData, fileType)}\n\n         </Paper>\n        \n         {this.returnDialog(this.state.clickedImageId, eventData)}\n\n        </div>  \n        \n        )\n    }\n}","import React, {Component} from 'react';\r\nimport EventDocumentCards from './EventDocumentCards.js'\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport EventCheckbox from './EventCheckbox.js';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Card from '@material-ui/core/Card';\r\n\r\nexport default class EventCommonLinks extends Component{\r\n  constructor(props){\r\n    super(props)\r\n    this.state = {\r\n     \r\n    }\r\n  }\r\n  createDocumentCard=(eventData)=>{\r\n      if (eventData.common_links.length!==0){\r\n              var allCards=eventData.common_links.map((common_links) => {\r\n              var header = common_links.name_rus\r\n              var body = common_links.description_rus\r\n              var link = common_links.url\r\n              return <EventDocumentCards newsHeader={header} newsBody={body} newsLink={link}/>\r\n                \r\n            })\r\n            return allCards\r\n      }\r\n      else{\r\n          return <Card style={{ margin: 5, height: '20%'}} >      \r\n                  <Typography variant=\"body1\" component=\"p\" style={{margin: '25% 0', fontSize: '1.8vh'}} align='center'>\r\n                  Вспомогательные ссылки отсутствуют\r\n                  </Typography>\r\n                </Card>\r\n      }\r\n }\r\n render(){\r\n      const eventData=this.props.eventData\r\n      return(\r\n      \r\n      <div style={{margin:'0'}}>\r\n          {this.createDocumentCard(eventData)}\r\n      </div>\r\n      \r\n         )\r\n       }\r\n     }","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Tab from '@material-ui/core/Tab';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Box from '@material-ui/core/Box';\r\nimport EventNews from './EventNews.js'\r\nimport EventMediaMenu from './EventMediaMenu.js'\r\nimport ThemeProvider  from '@material-ui/styles/ThemeProvider';\r\nimport ZeroPadding from './ZeroPadding.js'\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport EventCommonLinks from './EventCommonLinks'\r\n\r\nfunction TabPanel(props) {\r\n  const { children, value, index, ...other } = props;\r\n\r\n  return (\r\n    <Typography\r\n      component=\"div\"\r\n      role=\"tabpanel\"\r\n      hidden={value !== index}\r\n      id={`simple-tabpanel-${index}`}\r\n      aria-labelledby={`simple-tab-${index}`}\r\n      {...other}\r\n    >\r\n      <Box p={3}>{children}</Box>\r\n    </Typography>\r\n  );\r\n}\r\n\r\nTabPanel.propTypes = {\r\n  children: PropTypes.node,\r\n  index: PropTypes.any.isRequired,\r\n  value: PropTypes.any.isRequired,\r\n};\r\n\r\nfunction a11yProps(index) {\r\n  return {\r\n    id: `simple-tab-${index}`,\r\n    'aria-controls': `simple-tabpanel-${index}`,\r\n  };\r\n}\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    flexGrow: 1,\r\n    height: '50%',\r\n    width: '100%',\r\n    \r\n\r\n\r\n  },\r\n  bar:{\r\n    backgroundColor:'#1D8A6B',\r\n    minHeight: 0,\r\n    height: '5.58vh',\r\n    \r\n  },\r\n    bar2:{\r\n    backgroundColor:'#1D8A6B',\r\n    minHeight: 0,\r\n    height: '5.58vh',\r\n    \r\n  },\r\n  barlabel:{\r\n    margin: '0.5%',\r\n    height: '5.58vh',\r\n    minHeight: 0,\r\n    width: '49%',\r\n    minWidth:'20px'\r\n  },\r\nbox:{\r\n\tpadding: 0,\r\n\tmargin: 0,\r\n  height: '88%',\r\n  maxHeight: '88%',\r\n  overflow: 'auto',\r\n}\r\n\r\n}));\r\n  export default function EventTabsDocMedia(props) {\r\n\t  const eventData = props.eventData\r\n\t  const classes = useStyles();\r\n\t  const [value, setValue] = React.useState(0);\r\n\r\n\t  const handleChange = (event, newValue) => {\r\n\t    setValue(newValue);\r\n\t  };\r\n\r\n\t  return (\r\n    <div className={classes.root}>\r\n      <AppBar className={classes.bar} position=\"static\">                \r\n        <Tabs className={classes.bar2} value={value} onChange={handleChange} indicatorColor=\"primary\" aria-label=\"simple tabs example\">  \r\n          <Tab className={classes.barlabel}label={<span style={{ fontSize: '1.5vh' }}>Новости</span>} {...a11yProps(0)} />\r\n          <Tab className={classes.barlabel} wrapped label={<span style={{ fontSize: '1.5vh' }}>Вспомогательные ссылки</span>} {...a11yProps(1)} />\r\n\r\n                              \r\n        </Tabs>\r\n      </AppBar>\r\n      <ThemeProvider theme={ZeroPadding}>\r\n      <TabPanel  className={classes.box} value={value} index={0}>\r\n        \t<EventNews eventData = {eventData}/>\r\n      </TabPanel>\r\n      <TabPanel  className={classes.box} value={value} index={1}>\r\n      \t\t<EventCommonLinks eventData = {eventData} />\r\n      </TabPanel>\r\n\r\n      </ThemeProvider>\r\n    </div>\r\n  );\r\n  }","import React, {Component} from 'react';\r\nimport EventDocumentCards from './EventDocumentCards.js'\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport EventCheckbox from './EventCheckbox.js';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nimport EventTabsDocMedia from './EventTabsDocMedia.js'\r\n\r\nexport default class EventDocumentsMenu extends Component{\r\n  constructor(props){\r\n    super(props)\r\n    this.state = {\r\n     \r\n    }\r\n  }\r\n\r\n createDamagedZonesCheck=(eventData)=>{\r\n            var allCards=eventData.damaged_zones.map((damaged_zones) => {\r\n              var name = damaged_zones.description_rus\r\n              var id = damaged_zones.id\r\n              var categ='damaged_zones'\r\n              return <EventCheckbox name={name} id ={id} categ={categ} setCheckedLayers={(name, id, categ)=>this.props.setCheckedLayers(name, id, categ)}/>\r\n                \r\n            })\r\n            if (allCards.length!==0){\r\n              allCards.unshift(<Typography variant=\"body1\" component=\"p\" style={{margin: 'auto', color: \" #333333\", textAlign: 'center', fontSize:'1.8vh'}}><b>Поврежденные территории:</b></Typography>)\r\n            }\r\n            return allCards\r\n }\r\n\r\n createVectorCheck=(eventData)=>{\r\n            var allCards=eventData.misc_vector_data.map((misc_vector_data) => {\r\n              var name = misc_vector_data.name_rus\r\n              var id = misc_vector_data.id\r\n              var categ='misc_vector_data'\r\n              return <EventCheckbox name={name} id ={id} categ={categ} setCheckedLayers={(name, id, categ)=>this.props.setCheckedLayers(name, id, categ)}/>\r\n                \r\n            })\r\n            if (allCards.length!==0){\r\n              allCards.unshift(<Typography variant=\"body1\" component=\"p\" style={{margin: 'auto', color: \" #333333\", textAlign: 'center', fontSize:'1.8vh'}}><b>Векторные слои:</b></Typography>)\r\n            }\r\n            return allCards\r\n }\r\n createRasterCheck=(eventData)=>{\r\n\r\n            var allCards=eventData.misc_raster_data.map((misc_raster_data) => {\r\n              var name = misc_raster_data.name_rus\r\n              var id = misc_raster_data.id\r\n              var categ='misc_raster_data'\r\n              return <EventCheckbox name={name} id ={id} categ={categ} setCheckedLayers={(name, id, categ)=>this.props.setCheckedLayers(name, id, categ)}/>\r\n                \r\n            })\r\n            if (allCards.length!==0){\r\n              allCards.unshift(<Typography  variant=\"body1\" component=\"p\" style={{margin: 'auto', color: \" #333333\", textAlign: 'center', fontSize:'1.8vh'}}><b>Растровые слои:</b></Typography>)\r\n            }\r\n            return allCards\r\n }\r\ncreateRemSensCheck=(eventData)=>{\r\n\r\n            var allCards=eventData.remote_sensing_data.map((remote_sensing_data) => {\r\n              var name = remote_sensing_data.description_rus\r\n              var id = remote_sensing_data.id\r\n              var categ='remote_sensing_data'\r\n              return <EventCheckbox name={name} id ={id} categ={categ} setCheckedLayers={(name, id, categ)=>this.props.setCheckedLayers(name, id, categ)}/>\r\n                \r\n            })\r\n            if (allCards.length!==0){\r\n              allCards.unshift(<Typography  variant=\"body1\" component=\"p\" style={{margin: 'auto', color: \" #333333\", textAlign: 'center', fontSize:'1.8vh'}}><b>Изображения дистанционного зондирования:</b></Typography>)\r\n            }\r\n            return allCards\r\n } \r\ncreateStationsCheck=()=>{\r\n            var name='Станции наблюдения'\r\n            var id = 0\r\n            var categ='stations'\r\n            return <EventCheckbox name={name} id ={id} categ={categ} setCheckedLayers={(name, id, categ)=>this.props.setCheckedLayers(name, id, categ)}/>\r\n}\r\n\r\n    render(){\r\n      const eventData=this.props.eventData\r\n\r\n      return(\r\n        <div className='event-documents-menu'>\r\n        <Paper style={{height: '50%',  background: '#97C8B3'}}>\r\n          <Paper style={{maxHeight: '100%', height:'100%',  width:'100%', overflow: 'auto', background: '#ffffff'}}>\r\n          <br/>\r\n          <Typography  variant=\"body1\" component=\"p\" style={{margin: '1vh 0 0 0', color: \"#000000\", textAlign: 'center', fontSize:'1.8vh'}}><b>УПРАВЛЕНИЕ КАРТОЙ:</b></Typography>\r\n              {this.createStationsCheck(eventData)}\r\n          <br/>\r\n              {this.createDamagedZonesCheck(eventData)}\r\n          <br/>    \r\n              {this.createRemSensCheck(eventData)}\r\n          <br/>\r\n          \r\n              {this.createVectorCheck(eventData)}\r\n          <br/>\r\n          \r\n              {this.createRasterCheck(eventData)}\r\n\r\n\r\n          </Paper>\r\n         </Paper>\r\n        \r\n        <EventTabsDocMedia eventData={eventData}/>\r\n        \r\n          \r\n        </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Fab from '@material-ui/core/Fab';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport FavoriteIcon from '@material-ui/icons/Favorite';\r\nimport NavigationIcon from '@material-ui/icons/Navigation';\r\nimport PhotoLibraryIcon from '@material-ui/icons/PhotoLibrary';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  fab: {\r\n    margin: '1vw',\r\n    height: '6.8vh',\r\n    background: '#1D8A6B',\r\n    borderRadius: 35,\r\n    '&:hover': {\r\n      backgroundColor: '#97C8B3',\r\n      borderColor: '#97C8B3',\r\n      \r\n    },\r\n  },\r\n  extendedIcon: {\r\n    marginRight: theme.spacing(1),\r\n    height: '2.5vh',\r\n  },\r\n}));\r\n\r\nexport default function EventMediaButton(props) {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div style={{float: 'right'}}>\r\n\r\n      <Fab variant=\"extended\" className={classes.fab} onClick={()=>props.dialogOpen()}>\r\n        <PhotoLibraryIcon className={classes.extendedIcon} />        \r\n        <span style={{ fontSize: '1.5vh' }}>Медиафайлы</span>\r\n      </Fab>\r\n\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\n","import React, {Component} from 'react';\nimport EventMediaCards from './EventMediaCards.js'\nimport { makeStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport EventImageDialog from './EventImageDialog.js';\nimport ButtonBase from '@material-ui/core/ButtonBase';\nimport Card from '@material-ui/core/Card';\nimport Typography from '@material-ui/core/Typography';\nimport CardContent from '@material-ui/core/CardContent';\n\nexport default class EventPhotosPaper extends Component{\n  constructor(props){\n    super(props)\n    this.state = {\n      dialogOpen: false,\n      clickedImageId: null,\n      clickedImageType: null,\n      emptyCard:false,\n      \n    }\n  }\n\n  dialogOpen = ()=>{\n  this.setState((prevState) => {\n          return {dialogOpen:true}\n      \n        })\n\n  }\n  dialogClose = () =>{\n    this.setState((prevState) => {\n            return {dialogOpen:false}\n        \n          })\n\n\n  }\n  setClickedImageIdType=(id, type, path, title)=>{\n    this.setState((prevState) => {\n            return {clickedImageId: id,\n                    clickedImageType: type,\n                    clPath:path,\n                    clTitle:title}\n        \n          })\n  }\n\n  setEmptyCardTrue=()=>{\n    this.setState((prevState) => {\n            return {emptyCard:false}\n        \n          })\n  }\n  createEventCard=(eventData, fileType)=>{\n              if (eventData.multimedia_records.length==0){\n                \n                  return <Card style={{minWidth:0, width: '30vw', height: '30vh', margin: 0, padding:0}}>\n                               <CardContent style={{width: '30vw', height: '30vh', margin: 0, padding:0}}>    \n                                    <Typography style={{margin:'13.5vh', paddng:0}} align='center'  variant=\"body1\" component=\"p\">\n                                      {<span style={{ fontSize: '1.5vh' }}>Фото отсутствуют</span>}\n                                    </Typography>        \n                                </CardContent>\n                            </Card>\n                \n              }\n\n              else{\n                const allCards=[]\n                 eventData.multimedia_records.forEach((el)=>{\n                    if (el.type=='photo'){\n                      var type='img'\n                      var id = el.id\n                      var title=el.name_rus+' ('+el.source+')'\n                      var path=el.file\n                      allCards.push(<ButtonBase onClick = {()=>{this.dialogOpen(); this.setClickedImageIdType(id, type, path, title)}}>\n                                        <EventMediaCards id={id} type={type} title={title}  path = {path}  />\n                                    </ButtonBase>)\n                    }                \n              })\n              if (allCards.length==0){\n                  return <Card style={{minWidth:0, width: '30vw', height: '30vh', margin: 0, padding:0}}>\n                               <CardContent style={{width: '30vw', height: '30vh', margin: 0, padding:0}}>    \n                                    <Typography style={{margin:'13.5vh', paddng:0}} align='center'  variant=\"body1\" component=\"p\">\n                                      {<span style={{ fontSize: '1.5vh' }}>Фото отсутствуют</span>}\n                                    </Typography>        \n                                </CardContent>\n                            </Card>\n                }\n              else{\n                  return allCards\n              }\n            }\n\n\n\n\n\n\n\n              \n }\n returnDialog=(state, eventData)=>{\n  if (state!=null){\n      console.log(this.state.clPath)\n      return <EventImageDialog open={this.state.dialogOpen} dialogClose={()=>this.dialogClose()} dialogOpen={()=>this.dialogOpen()}\n                          eventData={eventData} clickedImageId={this.state.clickedImageId} type={this.state.clickedImageType}\n                          path={this.state.clPath} title={this.state.clTitle}/>\n  }\n\n }\n\n    render(){\n      const eventData=this.props.eventData\n      const fileType=this.props.fileType\n      return(\n        <div >\n        <Paper style={{maxHeight: '40vh', width: '30vw', padding: 0, margin:0,  overflowX: 'hidden', overflowY: 'auto', background: '#97C8B3'}}>\n          {this.createEventCard(eventData, fileType)}\n\n         </Paper>\n        \n         {this.returnDialog(this.state.clickedImageId, eventData)}\n\n        </div>  \n        \n        )\n    }\n}","import React, {Component} from 'react';\nimport EventMediaCards from './EventMediaCards.js'\nimport Paper from '@material-ui/core/Paper';\nimport Card from '@material-ui/core/Card';\nimport Typography from '@material-ui/core/Typography';\nimport CardContent from '@material-ui/core/CardContent';\n\nexport default class EventPhotosPaper extends Component{\n  constructor(props){\n    super(props)\n    this.state = {\n      emptyCard:false,\n      \n    }\n  }\n\n\n  setEmptyCardTrue=()=>{\n    this.setState((prevState) => {\n            return {emptyCard:false}\n        \n          })\n  }\n  createEventCard=(eventData)=>{\n              if (eventData.multimedia_records.length==0){\n                \n                  return <Card style={{minWidth:0, width: '30vw', height: '30vh', margin: 0, padding:0}}>\n                               <CardContent style={{width: '30vw', height: '30vh', margin: 0, padding:0}}>    \n                                    <Typography style={{margin:'13.5vh', paddng:0}} align='center'  variant=\"body1\" component=\"p\">\n                                      {<span style={{ fontSize: '1.5vh' }}>Видео отсутствуют</span>}\n                                    </Typography>        \n                                </CardContent>\n                            </Card>\n                \n              }\n\n              else{\n                const allCards=[]\n                 eventData.multimedia_records.forEach((el)=>{\n                    if (el.type=='video'){\n                      var type='iframe'\n                      var id = el.id\n                      var title=el.name_rus+' ('+el.source+')'\n                      var path=el.file\n                      allCards.push(<EventMediaCards id={id} type={type} title={title} path = {path}/>)\n                    }                \n              })\n              if (allCards.length==0){\n                  return <Card style={{minWidth:0, width: '30vw', height: '30vh', margin: 0, padding:0}}>\n                               <CardContent style={{width: '30vw', height: '30vh', margin: 0, padding:0}}>    \n                                    <Typography style={{margin:'13.5vh', paddng:0}} align='center'  variant=\"body1\" component=\"p\">\n                                      {<span style={{ fontSize: '1.5vh' }}>Видео отсутствуют</span>}\n                                    </Typography>        \n                                </CardContent>\n                            </Card>\n                }\n              else{\n                  return allCards\n              }\n            }\n\n\n\n\n\n\n\n              \n \n \n\n }\n\n    render(){\n      const eventData=this.props.eventData\n      \n      return(\n        <div >\n        <Paper style={{maxHeight: '40vh', width: '30vw', padding: 0, margin:0,  overflowX: 'hidden', overflowY: 'auto', background: '#97C8B3'}}>\n          {this.createEventCard(eventData)}\n\n         </Paper>\n        \n         \n\n        </div>  \n        \n        )\n    }\n}","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Tab from '@material-ui/core/Tab';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Box from '@material-ui/core/Box';\r\nimport EventNews from './EventNews.js'\r\nimport EventMediaMenu from './EventMediaMenu.js'\r\nimport ThemeProvider from '@material-ui/styles/ThemeProvider';\r\nimport ZeroPadding from './ZeroPadding';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport EventPhotosPaper from './EventPhotosPaper.js'\r\nimport EventVideosPaper from './EventVideosPaper.js'\r\n\r\nfunction TabPanel(props) {\r\n  const { children, value, index, ...other } = props;\r\n\r\n  return (\r\n    <Typography\r\n      component=\"div\"\r\n      role=\"tabpanel\"\r\n      hidden={value !== index}\r\n      id={`simple-tabpanel-${index}`}\r\n      aria-labelledby={`simple-tab-${index}`}\r\n      {...other}\r\n    >\r\n      <Box p={3}>{children}</Box>\r\n    </Typography>\r\n  );\r\n}\r\n\r\nTabPanel.propTypes = {\r\n  children: PropTypes.node,\r\n  index: PropTypes.any.isRequired,\r\n  value: PropTypes.any.isRequired,\r\n};\r\n\r\nfunction a11yProps(index) {\r\n  return {\r\n    id: `simple-tab-${index}`,\r\n    'aria-controls': `simple-tabpanel-${index}`,\r\n  };\r\n}\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    flexGrow: 1,\r\n    backgroundColor: theme.palette.background.paper,\r\n    width: '100%',\r\n    height: '100%'\r\n    \r\n\r\n\r\n  },\r\nbar:{\r\n    backgroundColor:'#1D8A6B',\r\n    minHeight: 0,\r\n    height: '5.58vh',\r\n    \r\n  },\r\n    bar2:{\r\n    backgroundColor:'#1D8A6B',\r\n    minHeight: 0,\r\n    height: '5.58vh',\r\n    \r\n  },\r\n  barlabel:{\r\n    margin: '0.5%',\r\n    height: '5.58vh',\r\n    minHeight: 0,\r\n    width: '49%',\r\n    minWidth:'20px'\r\n  },\r\nbox:{\r\n\tpadding: 0,\r\n\tmargin: 0,\r\n}\r\n\r\n}));\r\n  export default function EventTabsPhotoVideo(props) {\r\n\t  const eventData = props.eventData\r\n\t  const classes = useStyles();\r\n\t  const [value, setValue] = React.useState(0);\r\n\r\n\t  const handleChange = (event, newValue) => {\r\n\t    setValue(newValue);\r\n\t  };\r\n\r\n\t  return (\r\n    <div className={classes.root}>\r\n      <AppBar className={classes.bar} position=\"static\">                \r\n        <Tabs className={classes.bar2} value={value} onChange={handleChange} indicatorColor=\"primary\" aria-label=\"simple tabs example\">  \r\n\r\n          <Tab className={classes.barlabel}label={<span style={{ fontSize: '1.5vh' }}>Фотографии</span>} {...a11yProps(0)} />\r\n          <Tab className={classes.barlabel}label={<span style={{ fontSize: '1.5vh' }}>Видео</span>} {...a11yProps(1)} />\r\n                              \r\n        </Tabs>\r\n      </AppBar>\r\n      <ThemeProvider theme={ZeroPadding}>\r\n\r\n      <TabPanel  className={classes.box} value={value} index={0}>\r\n      \t\t<EventPhotosPaper eventData = {eventData} />\r\n      </TabPanel>\r\n      <TabPanel  className={classes.box} value={value} index={1}>\r\n      \t\t<EventVideosPaper eventData = {eventData} fileType='video'/>\r\n      </TabPanel>\r\n      </ThemeProvider>\r\n    </div>\r\n  );\r\n  }","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport EventMediaCards from './EventMediaCards.js'\r\nimport ThemeProvider from '@material-ui/styles/ThemeProvider';\r\nimport ZeroPadding from './ZeroPadding';\r\nimport EventTabsPhotoVideo from './EventTabsPhotoVideo.js'\r\n\r\n\r\nconst useStyles = makeStyles({\r\n  \r\ndialogPaper: {\r\n        minWidth: '30vw',\r\n        maxWidth: '30vw',\r\n        margin:0,\r\n        padding:0\r\n    },\r\n\r\n});\r\n\r\nexport default function EventMediaDialog(props) {\r\n  const classes = useStyles();\r\n  const open=props.open;\r\n\r\n\r\n  const type=props.type\r\n  return (\r\n\r\n    \r\n       \r\n      <Dialog classes={{ paper: classes.dialogPaper }}\r\n        open={open}\r\n        onClose={()=>props.dialogClose()}\r\n        \r\n        scroll = 'body'\r\n      >\r\n        <ThemeProvider theme={ZeroPadding}>\r\n        <DialogContent style={{width: \"100%\", margin: 0}}>\r\n          <EventTabsPhotoVideo eventData = {props.eventData}/>\r\n        </DialogContent>\r\n        </ThemeProvider>\r\n        <DialogActions style={{height: '3vh'}}>\r\n          <Button  onClick={()=>props.dialogClose()} color=\"primary\" autoFocus>\r\n            {<span style={{ fontSize: '1.5vh' }}>Закрыть</span>}\r\n          </Button>\r\n        </DialogActions>\r\n\r\n      </Dialog>\r\n\r\n    \r\n  );\r\n}","import React, {Component} from 'react';\r\nimport { createMuiTheme, MuiThemeProvider } from '@material-ui/core/styles';\r\nimport Header from './Header.js'\r\nimport EventMap from './EventMap.js'\r\nimport EventDocumentsMenu from './EventDocumentsMenu.js'\r\nimport DiagramCard from './DiagramCard.js'\r\nimport EventMediaMenu from './EventMediaMenu'\r\nimport PanelBottom from './PanelBottom.js'\r\nimport EventMediaButton from './EventMediaButton'\r\nimport EventMediaDialog from'./EventMediaDialog'\r\nimport Card from '@material-ui/core/Card';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport { green,red } from '@material-ui/core/colors';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\nimport TextField from '@material-ui/core/TextField';\r\n\r\nimport {API_settings} from './server_settings.js'\r\n\r\nasync function firstEventDataGet(event_id)\r\n\t\t{\r\n\t\t\t\r\n\t\t\t\tlet response = await fetch('http://'+API_settings.host+':'+API_settings.port+'/api/events?event_id=['+ event_id+']');\r\n\t\t\t\tlet data = await response.json()\r\n\t\t\t\treturn data\r\n\t\t\t\t\r\n\t\t\t}\r\n\t\t\r\nexport default class EventApp extends Component{\r\n\tconstructor(props){\r\n\t\tsuper(props)\r\n\r\n\t\tthis.state = {\r\n\t\t\tdialogOpen:false,\r\n\t\t\teventData: null, \r\n\t\t\tfirstDataGetState: false,\r\n\t\t\tclickedStationId: null,\r\n\t\t\tclickedStationType: null,\r\n\t\t\tactiveDamagedZonesLayers:{},\r\n\t\t\tactiveVectorLayers: {},\r\n\t\t\tactiveRasterLayers: {},\r\n\t\t\tactiveRSLayers: {},\r\n\t\t\tactiveStationsLayer: true,\r\n\t\t\tpanelOpen: true,\r\n\t\t\tclickedStationObj:null,\r\n\t\t\tcenter:[0,0]\r\n\t\t}\r\n\r\n\r\n\t}\r\n\r\n\r\ngetMuiTheme2 = () => createMuiTheme({\r\n    overrides: {\r\n\r\n        \r\n        MuiAutocomplete:{\r\n          inputRoot:{\r\n            '&[class*=\"MuiOutlinedInput-root\"]':{\r\n              padding:0,\r\n              height:'5vh',\r\n              '& $input': {\r\n                  padding: '0',\r\n                  fontSize: '1.8vh',\r\n                },\r\n              '& $endAdornment': {\r\n                  right: '1vh',\r\n                  top:'0.5vh'\r\n                },\r\n            },\r\n            endAdornment:{\r\n              top:0\r\n            }\r\n           \r\n          }\r\n        },\r\n        MuiOutlinedInput:{\r\n          input:{\r\n            padding:0\r\n          }\r\n        },\r\n        PrivateNotchedOutline:{\r\n          root:{\r\n              height: '5vh'\r\n            \r\n          }\r\n        },\r\n        \r\n        MuiFormControl:{\r\n          root:{            \r\n              height: '5vh'\r\n            \r\n          }\r\n        },\r\n        MuiFormLabel:{\r\n          root:{\r\n            fontSize:'1.8vh'\r\n          }\r\n        },\r\n        MuiInputLabel:{\r\n          outlined:{\r\n            transform:'translate(1vh, 1.6vh) scale(1)'\r\n          }\r\n        },\r\n        MuiSvgIcon:{\r\n          root:{\r\n            height:'3vh',\r\n            width:'3vh'\r\n          }\r\n        },\r\n        MuiInputBase: {\r\n          root: {\r\n            fontSize: '1.8vh',\r\n          },\r\n          input:{\r\n          \tfontSize: '1.8vh',\r\n          }\r\n        },\r\n\r\n    }\r\n  })\r\n\r\n\r\n\r\n\thandleDrawerOpen = () => {\r\n    this.setState((prevState) => {\r\n\t\t          return {panelOpen:true}\r\n\r\n  });}\r\n\r\n  handleDrawerClose = () => {\r\n   this.setState((prevState) => {\r\n\t\t          return {panelOpen:false}\r\n   });}\r\n\r\n\tdialogOpen = ()=>{\r\n\t\t  this.setState((prevState) => {\r\n\t\t          return {dialogOpen:true}\r\n      \r\n        })\r\n\r\n  }\r\n  dialogClose = () =>{\r\n    this.setState((prevState) => {\r\n            return {dialogOpen:false}\r\n        \r\n          })\r\n\r\n\r\n  }\r\n\tsetClickedStationId=(stationObj, id,type, e)=>{\r\n\t\tconsole.log(id)\r\n\t\tconsole.log(type)\r\n\t\tconsole.log(stationObj)\r\n\t\tthis.setState((prevState) => {\r\n\t\t\t\t\treturn {clickedStationObj:stationObj,\r\n\t\t\t\t\t\t\tcenter:[stationObj.lat-0.015, stationObj.lon],\r\n\t\t\t\t\t\t\tclickedStationId: id, \r\n\t\t\t\t\t\t\tclickedStationType: type,\r\n\t\t\t\t\t\t\tpanelOpen: true}})\r\n\t\t\t\t\t\t\t\r\n\t}\r\n\r\n\tsetClickedStationIdAutoc=(event, value)=>{\r\n\t\tif (value!==null){\r\n\t\t\tconst stationObj=value\r\n\t\t\tconst id=value.id\r\n\t\t\tconst type=value.type\r\n\t\t\tthis.setClickedStationId(stationObj, id,type, event)\r\n\t\t}\r\n\t\t\r\n\t}\r\n\r\n\tsetIdEventData=(state)=>{\r\n\t\tif (state==false){\r\n\t\t\tvar path= window.location.href\r\n\t\t\tvar event_id=path.split('#')[1]\r\n\t\t\tfirstEventDataGet(event_id).then(data=>\r\n\t\t\t\t\t\tthis.setState((prevState) => {\r\n\t\t\t\t\t\treturn {eventData: data.data.events[0],\r\n\t\t\t\t\t\t\t\teventId_:data.data.events[0].id,\r\n\t\t\t\t\t\t\t    firstDataGetState: true}\r\n\t\t\t\t\r\n\t\t\t\t\t}))\r\n\t\t\t\r\n\t\t}\r\n\t}\r\n\r\n\tsetCheckedLayers=(name, id, categ)=>{\r\n\t\tconsole.log('name = '+name);\r\n\t\tvar damagedZonesList=this.state.activeDamagedZonesLayers\r\n\t\tvar vectorLayerList= this.state.activeVectorLayers;\t\r\n\t\tvar rasterLayerList= this.state.activeRasterLayers;\r\n\t\tvar rSLayerList= this.state.activeRSLayers;\r\n\t\tif(categ=='damaged_zones'){\r\n\t\t\tif(this.state.activeDamagedZonesLayers[id]==undefined||this.state.activeDamagedZonesLayers[id]==false){\r\n\t\t\t\tdamagedZonesList[id]=true;\r\n\t\t\t\t\r\n\t\t\t\tthis.setState((prevState) => {\r\n\t\t\t\t\t\treturn {activeDamagedZonesLayers: damagedZonesList}\r\n\t\t\t\t\r\n\t\t\t\t\t});\t\t\t\t\r\n\t\t\t}\t\r\n\t\t\t\r\n\t\t\telse{\r\n\t\t\t\tdamagedZonesList[id]=false\r\n\t\t\t\tthis.setState((prevState) => {\r\n\t\t\t\t\t\treturn {activeDamagedZonesLayers: damagedZonesList}\r\n\t\t\t\t\r\n\t\t\t\t\t});\t\t\t\r\n\t\t\t}\r\n\t\t}\r\n\t\tif(categ=='misc_vector_data'){\r\n\t\t\tif(this.state.activeVectorLayers[id]==undefined||this.state.activeVectorLayers[id]==false){\r\n\t\t\t\tvectorLayerList[id]=true;\r\n\t\t\t\t\r\n\t\t\t\tthis.setState((prevState) => {\r\n\t\t\t\t\t\treturn {activeVectorLayers: vectorLayerList}\r\n\t\t\t\t\r\n\t\t\t\t\t});\t\t\t\t\r\n\t\t\t}\t\r\n\t\t\t\r\n\t\t\telse{\r\n\t\t\t\tvectorLayerList[id]=false\r\n\t\t\t\tthis.setState((prevState) => {\r\n\t\t\t\t\t\treturn {activeVectorLayers: vectorLayerList}\r\n\t\t\t\t\r\n\t\t\t\t\t});\t\t\t\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (categ=='misc_raster_data'){\r\n\t\t\tif(this.state.activeRasterLayers[id]==undefined||this.state.activeRasterLayers[id]==false){\r\n\t\t\t\trasterLayerList[id]=true;\r\n\t\t\t\t\r\n\t\t\t\tthis.setState((prevState) => {\r\n\t\t\t\t\t\treturn {activeRasterLayers: rasterLayerList}\r\n\t\t\t\t\r\n\t\t\t\t\t});\t\t\t\t\r\n\t\t\t}\t\r\n\t\t\t\r\n\t\t\telse{\r\n\t\t\t\trasterLayerList[id]=false\r\n\t\t\t\tthis.setState((prevState) => {\r\n\t\t\t\t\t\treturn {activeRasterLayers: rasterLayerList}\r\n\t\t\t\t\r\n\t\t\t\t\t});\t\t\t\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (categ=='remote_sensing_data'){\r\n\t\t\tif(this.state.activeRSLayers[id]==undefined||this.state.activeRSLayers[id]==false){\r\n\t\t\t\trSLayerList[id]=true;\r\n\t\t\t\t\r\n\t\t\t\tthis.setState((prevState) => {\r\n\t\t\t\t\t\treturn {activeRSLayers: rSLayerList}\r\n\t\t\t\t\r\n\t\t\t\t\t});\t\t\t\t\r\n\t\t\t}\t\r\n\t\t\t\r\n\t\t\telse{\r\n\t\t\t\trSLayerList[id]=false\r\n\t\t\t\tthis.setState((prevState) => {\r\n\t\t\t\t\t\treturn {activeRSLayers: rSLayerList}\r\n\t\t\t\t\r\n\t\t\t\t\t});\t\t\t\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (categ=='stations'){\r\n\t\t\tif(this.state.activeStationsLayer==false){\r\n\t\t\t\t\r\n\t\t\t\tthis.setState((prevState) => {\r\n\t\t\t\t\t\treturn {activeStationsLayer: true}\r\n\t\t\t\t\r\n\t\t\t\t\t});\t\t\t\t\r\n\t\t\t}\t\r\n\t\t\t\r\n\t\t\tif(this.state.activeStationsLayer==true){\r\n\t\t\t\t\r\n\t\t\t\tthis.setState((prevState) => {\r\n\t\t\t\t\t\treturn {activeStationsLayer: false}\r\n\t\t\t\t\r\n\t\t\t\t\t});\t\t\t\r\n\t\t\t}\r\n\t\t}\t\t\r\n\t\t\r\n\t}\r\n\r\n\r\n\treturnDocsMenu=(state)=>{\r\n\t\t\tif (state==true){\r\n\t\t\t\treturn <EventDocumentsMenu eventData={this.state.eventData} setCheckedLayers={(name, id, categ)=>this.setCheckedLayers(name, id, categ)}/>\r\n\t\t\t}\r\n\t}\r\n\treturnEventMap=(state)=>{\r\n\t\t\tif (state==true){\r\n\t\t\t\treturn <EventMap eventData={this.state.eventData}  setClickedStationId={(stationObj, id, type, e)=>this.setClickedStationId(stationObj, id,type, e)}\r\n\t\t\t\tcenter={this.state.center}\r\n\t\t\t\tactiveDamagedZonesLayers={this.state.activeDamagedZonesLayers}\r\n\t\t\t\tactiveVectorLayers={this.state.activeVectorLayers}\r\n\t\t\t\tactiveRasterLayers={this.state.activeRasterLayers}\r\n\t\t\t\tactiveRSLayers={this.state.activeRSLayers}\r\n\t\t\t\tactiveStationsLayer={this.state.activeStationsLayer}/>\r\n\t\t\t}\r\n\t\t\telse{\r\n\t\t\t\treturn <Card style={{height: '93vh'}}>\r\n\t\t\t\t  <CardContent >\r\n                    <div style={{display: 'flex', justifyContent:\"center\", margin: '30% 0 0'}}>\r\n                    <CircularProgress style={{color: green[500]}}/>\r\n                    </div>\r\n                    <Typography color=\"inherit\" align='center' gutterBottom>\r\n                      Загрузка данных...\r\n                    </Typography>\r\n                  </CardContent>\r\n                </Card>\r\n\t\t\t}\r\n\t}\r\n\treturnMediaMenu=(state)=>{\r\n\t\t\tif (state==true){\r\n\t\t\t\treturn <EventMediaMenu eventData={this.state.eventData}/>\r\n\t\t\t}\r\n\t}\r\n\treturnDiagramCard=(state)=>{\r\n\t\t\tif (state==true){\r\n\t\t\t\treturn <DiagramCard eventData={this.state.eventData} clickedStationId={this.state.clickedStationId}\r\n\t\t\t\tclickedStationType={this.state.clickedStationType}/>\r\n\t\t\t}\r\n\t}\r\n\treturnPanelBottom=(state)=>{\r\n\t\t\tif (state==true){\r\n\t\t\t\t\treturn <PanelBottom eventData={this.state.eventData} clickedStationId={this.state.clickedStationId}\r\n\t\t\t\tclickedStationType={this.state.clickedStationType} panelOpen={this.state.panelOpen}\r\n\t\t\t\thandleDrawerOpen={()=>this.handleDrawerOpen()} handleDrawerClose={()=>this.handleDrawerClose()}/>\r\n\t\t\t\t}\r\n\t}\r\n\r\n\treturnEventMediaDialog=(state)=>{\r\n\t\t\tif (state==true){\r\n\t\t\t\t\treturn <EventMediaDialog open={this.state.dialogOpen} dialogClose={()=>this.dialogClose()} eventData={this.state.eventData}/>\r\n\t\t\t\t}\r\n\t}\r\n\treturnEventMediaButton=(state)=>{\r\n\t\t\tif (state==true){\r\n\t\t\t\t\treturn <EventMediaButton dialogOpen={()=>this.dialogOpen()} />\r\n\t\t\t\t}\r\n\t}\r\n\r\n\treturnAutoComp=(state)=>{\r\n\t\t\tif (state==true){\r\n\t\t\t\t\treturn <div style={{display:'inline-block', float:'right', width:'17vw', margin: '1vw '}}>\r\n\t\t\t\t\t\t\t<Card style={{padding:'1.3vh 0.5vw 0.5vh 0.5vw ', position: \"relative\", zIndex:2000}}>\r\n\t\t\t\t\t\t\t\t<MuiThemeProvider theme={this.getMuiTheme2()}>\r\n\t\t\t\t                <Autocomplete style={{height:'5vh'}}\r\n\t\t\t\t                    value={this.state.clickedStationObj}             \r\n\t\t\t\t                    noOptionsText='Нет совпадений'\r\n\t\t\t\t                    options={this.state.eventData.observation_stations}\r\n\t\t\t\t                    getOptionLabel={option => option.id+' - '+option.name_rus} \r\n\t\t\t\t                    autoHighlight={true}\r\n\t\t\t\t                    onChange={(event, value)=>{this.setClickedStationIdAutoc(event, value)}}\r\n\t\t\t\t                    renderInput={params => (\r\n\t\t\t\t                      <TextField {...params} label='Выберите станцию' variant=\"outlined\"  />\r\n\t\t\t\t                    )}\r\n\t\t\t\t                  />  \r\n\t\t\t\t                  </MuiThemeProvider>                \r\n\t\t\t\t              </Card>\r\n\t\t\t\t             </div>\r\n\t\t\t\t}\r\n\t}\r\n\r\n\t\trender(){\r\n\t\t\tif (this.state.eventData!==null){\r\n\t\t\t\tdocument.title = this.state.eventData.name_rus;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tif (this.state.firstDataGetState==false){\r\n\t\t\t\tthis.setIdEventData(this.state.firstDataGetState)\r\n\t\t\t}\r\n\r\n\r\n\t\t\treturn(\r\n\t\t\t\t<div>\r\n\t\t\t\t<Header event_id={this.state.eventId_}/>\r\n\t\t\t\t\r\n\t\t\t\t{this.returnDocsMenu(this.state.firstDataGetState)}\t\t\t\r\n\r\n\t\t\t\t{this.returnEventMap(this.state.firstDataGetState)}\r\n\r\n\t\t\t\t{this.returnEventMediaButton(this.state.firstDataGetState)}\r\n\t\t\t\t{this.returnAutoComp(this.state.firstDataGetState)}\t\t \r\n\t\t\t\t\t\t\t\r\n\t\t\t\t{this.returnPanelBottom(this.state.firstDataGetState)}\t\t\r\n\t\t\t\t\r\n\t\t\t\t\r\n\t\t\t\t{this.returnEventMediaDialog(this.state.firstDataGetState)}\r\n\t\t\t\t</div>\r\n\t\t\t\t)\r\n\t\t}\r\n}","import React, {Component} from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport CardContent from '@material-ui/core/CardContent';\nimport TextField from '@material-ui/core/TextField';\nimport Visibility from '@material-ui/icons/Visibility';\nimport VisibilityOff from '@material-ui/icons/VisibilityOff';\nimport FormControl from '@material-ui/core/FormControl';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport IconButton from '@material-ui/core/IconButton';\nimport Input from '@material-ui/core/Input';\nimport InputAdornment from '@material-ui/core/InputAdornment';\n\nconst useStyles = makeStyles({\n  root: {\n    flexGrow: 1,\n    background: '#1D8A6B',\n    color: '#ffffff',\n    height: '10vh'\n   \n  },\n  textfield:{\n    width: '80%', \n    margin: '0 10%',\n\n  },\n\n  card: {\n    width: '28%',\n    margin: '30vh 36%'\n  },\n});\n\nexport default function Authorization(props) {\n  const classes = useStyles();\n  const [state, setState] = React.useState({\n      loginValue: null,\n      passwordValue: null,\n      showPassword: false,\n      });\n  const setLogin=(event)=>{\n      setState({ ...state, 'loginValue': event.target.value });\n  }\n  const setPassword=(event)=>{\n      setState({ ...state, 'passwordValue': event.target.value });\n  }\n  const returnErrorBox=()=>{\n    if (props.accessDenied==true){\n      return <Typography  color=\"secondary\" align='center' gutterBottom>Неверное имя пользователя или пароль</Typography>\n    }\n  }\n  const handleClickShowPassword = () => {\n    setState({ ...state, showPassword: !state.showPassword });\n  };\n\n  const handleMouseDownPassword = event => {\n    event.preventDefault();\n  };\n\n  return (\n    <Card elevation={7} className={classes.card}>\n      <CardContent>\n        {returnErrorBox()}\n        <Typography  color=\"inherit\" align='center' gutterBottom>\n          Авторизация\n        </Typography>\n\n\n\n      <form noValidate autoComplete=\"off\" >\n            <TextField className={classes.textfield} id=\"login\" label=\"Login\" value={state.loginValue} onChange={(event)=>setLogin(event)} autoFocus/>\n\n\n\n        <FormControl className={classes.textfield}>\n          <InputLabel>Password</InputLabel>\n          <Input\n            id=\"password\"\n            type={state.showPassword ? 'text' : 'password'}\n            value={state.passwordValue}\n            onChange={(event)=>setPassword(event)}\n            endAdornment={\n              <InputAdornment position=\"end\">\n                <IconButton\n                  aria-label=\"toggle password visibility\"\n                  onClick={handleClickShowPassword}\n                  onMouseDown={handleMouseDownPassword}\n                >\n                  {state.showPassword ? <Visibility /> : <VisibilityOff />}\n                </IconButton>\n              </InputAdornment>\n            }\n          />\n          </FormControl>\n\n\n      <CardActions style={{justifyContent: 'center'}}>\n        <Button  size=\"small\" color=\"secondary\" variant=\"outlined\" onClick={()=>props.getAccessData(state.loginValue, state.passwordValue)}>Войти</Button>\n      </CardActions>\n\n      </form>\n\n\n\n      </CardContent>\n\n    </Card>\n  );\n}","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport { green } from '@material-ui/core/colors';\r\nimport Button from '@material-ui/core/Button';\r\nimport SendIcon from '@material-ui/icons/Send';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nimport {postCommonLink} from './request_functions.js'\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  box: {\r\n\r\n    width: '100%',\r\n    \r\n  },\r\n  margin: {\r\n    margin: '0 0 0 0',\r\n    fontSize: 11,\r\n    \r\n  },\r\n  textfield: {\r\n    width: '100%'\r\n    \r\n  },\r\n  textfield2: {\r\n    width: '100%', \r\n    height: '5vh',\r\n  },\r\n\r\n}));\r\n\r\n\r\n\r\n\r\n\r\nexport default function AdminCommonLinksBlock(props) {\r\n  const classes = useStyles();\r\n  \r\n  const [state, setState] = React.useState({\r\n      \r\n      url: '',\r\n      name_rus: '',\r\n      name_eng:'',\r\n      lang: '',\r\n      description_rus:'',\r\n      description_eng:'',\r\n      \r\n      \r\n      });\r\n\r\n\r\n  const linkInfo =[{      \r\n      url: state.url,\r\n      name_rus: state.name_rus,\r\n      name_eng: state.name_eng,\r\n      lang: state.lang,\r\n      description_rus:state.description_rus,\r\n      description_eng: state.description_eng,\r\n  }]\r\n  const form=new FormData;\r\n  form.append('common_links', JSON.stringify(linkInfo))\r\n  \r\n  const setUrl=(event)=>{\r\n      setState({ ...state, url: event.target.value,\r\n                          });\r\n    \r\n  }\r\n  const setNameRus=(event)=>{\r\n      setState({ ...state, name_rus: event.target.value,\r\n                           });\r\n     \r\n  }\r\n  const setNameEng=(event)=>{\r\n      setState({ ...state, name_eng: event.target.value,\r\n                            });\r\n      \r\n  }\r\n  const setDescRus=(event)=>{\r\n      setState({ ...state, description_rus: event.target.value,\r\n                            });\r\n      \r\n  }\r\n  const setDescEng=(event)=>{\r\n      setState({ ...state, description_eng: event.target.value,\r\n                             });\r\n      \r\n  }\r\n  const setLang=(event)=>{\r\n      setState({ ...state, lang: event.target.value,\r\n                             });   \r\n      \r\n  }\r\n  const pushNewLink=()=>{\r\n    if(linkInfo[0].url!==''&&linkInfo[0].name_rus!==''&&linkInfo[0].name_eng!==''&&linkInfo[0].description_rus!==''&&linkInfo[0].description_eng!==''&&linkInfo[0].lang!==''){\r\n      postCommonLink(form, props.login, props.password).then(data=>\r\n        props.closeDialog('common_links_list')\r\n        )\r\n      }\r\n}\r\n  return (\r\n    <div className={classes.box}>     \r\n      \r\n      <TextField className={classes.textfield} value={state.url} onChange={(event)=>setUrl(event)} id=\"url\" label=\"URL\"/>\r\n      <TextField className={classes.textfield} value={state.name_rus} onChange={(event)=>setNameRus(event)} id=\"name_rus\" label=\"Название (рус.)\"/>\r\n      <TextField className={classes.textfield} value={state.name_eng} onChange={(event)=>setNameEng(event)} id=\"name_eng\" label=\"Название (англ.)\"/>\r\n      <TextField className={classes.textfield} value={state.description_rus} onChange={(event)=>setDescRus(event)}id=\"description_rus\" label=\"Описание (рус.)\"/>\r\n      <TextField className={classes.textfield} value={state.description_eng} onChange={(event)=>setDescEng(event)} id=\"description_eng\" label=\"Описание (англ)\"/>\r\n      <TextField className={classes.textfield} value={state.lang} onChange={(event)=>setLang(event)} id=\"lang\" label=\"Язык\"/>\r\n      <div className={classes.textfield2}></div>\r\n      <Button variant=\"contained\" color=\"primary\" size=\"small\" startIcon={<SendIcon />} style={{float: 'right'}}\r\n                            onClick={()=>pushNewLink()}>Добавить</Button>     \r\n    </div>\r\n      )\r\n    }","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport SendIcon from '@material-ui/icons/Send';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport {\r\n  MuiPickersUtilsProvider,\r\n  KeyboardTimePicker,\r\n  KeyboardDatePicker,\r\n} from '@material-ui/pickers';\r\nimport MomentUtils from '@date-io/moment';\r\nimport DateFnsUtils from '@date-io/date-fns';\r\nimport LuxonUtils from '@date-io/luxon';\r\n\r\nimport {postMediaLink} from './request_functions.js'\r\nvar moment = require('moment');\r\nmoment().format();\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  box: {\r\n\r\n    width: '100%',\r\n    \r\n  },\r\n  margin: {\r\n    margin: '0 0 0 0',\r\n    fontSize: 11,\r\n    \r\n  },\r\n  textfield: {\r\n    width: '100%'\r\n    \r\n  },\r\n  textfield2: {\r\n    width: '100%', \r\n    height: '5vh',\r\n  },\r\n\r\n}));\r\n\r\n\r\nexport default function AdminMediaLinksBlock(props) {\r\n  const classes = useStyles();\r\n  \r\n  const [state, setState] = React.useState({\r\n      \r\n      url: '',\r\n      news_date:null,\r\n      info_agency:'',\r\n      name_rus: '',\r\n      name_eng:'',\r\n      lang: '',\r\n      description_rus:'',\r\n      description_eng:'',\r\n      checked: false,\r\n      \r\n      });\r\n\r\n  const linkInfo =()=>{\r\n    var a=null\r\n      if (state.news_date!==null){\r\n          a=[{  \r\n            info_agency: state.info_agency,          \r\n            url: state.url,\r\n            news_date: moment(state.news_date).format(\"DDMMYYYYTHHmmss\"),\r\n            name_rus: state.name_rus,\r\n            name_eng: state.name_eng,\r\n            lang: state.lang,\r\n            description_rus:state.description_rus,\r\n            description_eng: state.description_eng,\r\n          }]\r\n      }\r\n      return a\r\n      }\r\n\r\n  const form=new FormData();\r\n  form.append('media_links', JSON.stringify(linkInfo()))\r\n\r\n  const setUrl=(event)=>{\r\n      setState({ ...state, url: event.target.value,\r\n                           });\r\n\r\n  }\r\n  const setNewsDate=(event)=>{\r\n      setState({ ...state, news_date: event.target.value});\r\n\r\n  }\r\n  const setInfoAgency=(event)=>{\r\n      setState({ ...state, info_agency: event.target.value});\r\n\r\n  }\r\n  const setNameRus=(event)=>{\r\n      setState({ ...state, name_rus: event.target.value,\r\n                            });\r\n\r\n  }\r\n  const setNameEng=(event)=>{\r\n      setState({ ...state, name_eng: event.target.value,\r\n                            });\r\n\r\n  }\r\n  const setDescRus=(event)=>{\r\n      setState({ ...state, description_rus: event.target.value,\r\n                            });\r\n\r\n  }\r\n  const setDescEng=(event)=>{\r\n      setState({ ...state, description_eng: event.target.value,\r\n                            });\r\n\r\n  }\r\n  const setLang=(event)=>{\r\n      setState({ ...state, lang: event.target.value,\r\n                             });   \r\n\r\n  }\r\n  const handleStartDateChange = date => {\r\n    setState({...state, news_date: date});\r\n  };\r\n\r\n const pushNewLink=()=>{\r\n  if (linkInfo()[0].info_agency!==''&&linkInfo()[0].news_date!==null&&linkInfo()[0].url!==''&& linkInfo()[0].name_rus!==''&&linkInfo()[0].name_eng!==''&&linkInfo()[0].description_rus!==''&&linkInfo()[0].description_eng!==''&&linkInfo()[0].lang!==''){\r\n    postMediaLink(form, props.login, props.password).then(data=>{console.log(data);\r\n        props.closeDialog('media_links_list')}\r\n        )\r\n }\r\n}\r\n  \r\n\r\n  return (\r\n    <div className={classes.box}>  \r\n\r\n      <TextField className={classes.textfield} value={state.url} onChange={(event)=>setUrl(event)} id=\"url\" label=\"URL\"/>\r\n      <TextField className={classes.textfield} value={state.info_agency} onChange={(event)=>setInfoAgency(event)} id=\"info_agency\" label=\"Издательство\"/>\r\n      <MuiPickersUtilsProvider utils={DateFnsUtils} >\r\n              <div className={classes.textfield}>\r\n              <KeyboardDatePicker\r\n                disableToolbar\r\n                variant=\"inline\"\r\n                format=\"MM/dd/yyyy\"\r\n                margin=\"normal\"\r\n                id=\"news_date\"\r\n                label=\"Дата новости\"\r\n                value={state.news_date}\r\n                onChange={handleStartDateChange}\r\n                KeyboardButtonProps={{\r\n                  'aria-label': 'change date',\r\n                }}\r\n              /></div>\r\n              </MuiPickersUtilsProvider>\r\n      <TextField className={classes.textfield} value={state.name_rus} onChange={(event)=>setNameRus(event)} id=\"name_rus\" label=\"Название (рус.)\"/>\r\n      <TextField className={classes.textfield} value={state.name_eng} onChange={(event)=>setNameEng(event)} id=\"name_eng\" label=\"Название (англ.)\"/>\r\n      <TextField className={classes.textfield} value={state.description_rus} onChange={(event)=>setDescRus(event)}id=\"description_rus\" label=\"Описание (рус.)\"/>\r\n      <TextField className={classes.textfield} value={state.description_eng} onChange={(event)=>setDescEng(event)} id=\"description_eng\" label=\"Описание (англ)\"/>\r\n      <TextField className={classes.textfield} value={state.lang} onChange={(event)=>setLang(event)} id=\"lang\" label=\"Язык\"/>\r\n      <div className={classes.textfield2}></div>\r\n      <Button variant=\"contained\" color=\"primary\" size=\"small\" startIcon={<SendIcon />} style={{float: 'right'}}\r\n                            onClick={()=>pushNewLink()}>Добавить</Button>\r\n\r\n            \r\n    </div>\r\n      )\r\n    }","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport {\r\n  MuiPickersUtilsProvider,\r\n  KeyboardTimePicker,\r\n  KeyboardDatePicker,\r\n} from '@material-ui/pickers';\r\nimport MomentUtils from '@date-io/moment';\r\nimport DateFnsUtils from '@date-io/date-fns';\r\nimport LuxonUtils from '@date-io/luxon';\r\nimport Select from '@material-ui/core/Select';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Button from '@material-ui/core/Button';\r\nimport SendIcon from '@material-ui/icons/Send';\r\nimport { KeyboardDateTimePicker } from \"@material-ui/pickers\";\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport { green,red } from '@material-ui/core/colors';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\n\r\nimport {postDamagedZone, DamagedZonesTypesGet} from './request_functions.js'\r\nvar moment = require('moment');\r\nmoment().format();\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  box: {\r\n\r\n    width: '100%',\r\n    \r\n  },\r\n  margin: {\r\n    margin: '0 0 0 0',\r\n    fontSize: 11,\r\n    \r\n  },\r\n  textfield: {\r\n    width: '100%'\r\n    \r\n  },\r\n  textfield2: {\r\n    width: '100%', \r\n    height: '5vh',\r\n  },\r\n\r\n}));\r\n\r\n\r\nexport default function AdminCommonLinksBlock(props) {\r\n  const classes = useStyles();\r\n  \r\n  const [state, setState] = React.useState({\r\n      firstDataGet: false,\r\n      damZonesTypes: null,\r\n\r\n      type_id: '',\r\n      type:'',\r\n      description_rus:'',\r\n      description_eng:'',\r\n      cost_rub:'',\r\n      start_date:null,\r\n      end_date:null,\r\n      area:'',\r\n      geom:'',\r\n      \r\n      \r\n      JSONFileName:' ',\r\n      waitingDialog: false,\r\n            \r\n      });\r\n\r\n\r\n  const form = new FormData();\r\n  form.append('type_id', state.type_id)\r\n  form.append('type', state.type)\r\n  form.append('cost_rub', state.cost_rub)\r\n  form.append('start_date', moment(state.start_date).format(\"DDMMYYYYTHHmmss\"))\r\n  form.append('end_date', moment(state.end_date).format(\"DDMMYYYYTHHmmss\"))\r\n  form.append('description_rus', state.description_rus)\r\n  form.append('description_eng', state.description_eng)\r\n  form.append('area', state.area)\r\n  form.append('geom', state.geom)\r\n  \r\n\r\n\r\n    const returnMenuItemsTypes = () =>{\r\n            const list = []           \r\n            if (state.damZonesTypes!==null){\r\n              const typesList = state.damZonesTypes.data.types              \r\n            for (let i=0; i<typesList.length; i++){\r\n                  list.push(<MenuItem key={i} value={typesList[i]}>{typesList[i].alias_rus}</MenuItem>)            \r\n          }}\r\n          return list\r\n  }\r\n\r\n  const setJSONFile=(file)=>{\r\n    if (file!==undefined){\r\n        if (state.JSONFileName!==undefined){\r\n        setState({ ...state, JSONFileName: file.name,\r\n                               geom: file});\r\n      }\r\n\r\n        }}\r\n\r\n      \r\n\r\n\r\n  const setTypeId=(event)=>{\r\n      setState({ ...state, type_id: event.target.value.id,\r\n                           type:event.target.value.type});\r\n}\r\n  const setCostRub=(event)=>{\r\n      setState({ ...state, cost_rub: event.target.value});\r\n\r\n  }\r\n  const setStartDate=(event)=>{\r\n      setState({ ...state, start_date: event.target.value});\r\n\r\n  }\r\n  const setEndDate=(event)=>{\r\n      setState({ ...state, end_date: event.target.value});\r\n\r\n  }\r\n  const setDescRus=(event)=>{\r\n      setState({ ...state, description_rus: event.target.value});\r\n\r\n  }\r\n  const setDescEng=(event)=>{\r\n      setState({ ...state, description_eng: event.target.value});\r\n\r\n  }\r\n  const setArea=(event)=>{\r\n      setState({ ...state, area: event.target.value});   \r\n\r\n  }\r\n\r\n  const handleStartDateChange = date => {\r\n    setState({...state, start_date: date});\r\n  };\r\n  const handleEndDateChange = date => {\r\n    setState({...state, end_date: date});\r\n  };\r\n\r\n  const openWaitingDialog=()=>{\r\n    setState({...state, waitingDialog: true});\r\n  }\r\n  const closeWaitingDialog=()=>{\r\n    setState({...state, waitingDialog: false});\r\n  }\r\nconst pushNewDamagedZone=()=>{\r\n  if(state.type_id!==''&&state.type!==''&&state.description_rus!==''&&state.description_eng!==''&&state.cost_rub!==''&&state.start_date!==null&&state.end_date!==null&&state.area!==''&&state.geom!==''){\r\n    openWaitingDialog()\r\n    postDamagedZone(form, props.login, props.password).then(data=>{closeWaitingDialog();\r\n        props.closeDialog('damaged_zones_list')})\r\n  }\r\n}\r\n  \r\nif (state.firstDataGet==false){\r\n        if (state.damZonesTypes == null){\r\n        DamagedZonesTypesGet().then(data=>setState({ ...state, damZonesTypes: data}))    \r\n      }\r\n      setState({ ...state, firstDataGet: true})\r\n      \r\n    }\r\n\r\n\r\n  return (\r\n    <div className={classes.box}>\r\n      \r\n      <FormControl className={classes.textfield}>\r\n            <InputLabel >Тип поврежденной территории</InputLabel>\r\n            <Select                \r\n                onChange={(event)=>setTypeId(event)}\r\n              >\r\n              {returnMenuItemsTypes()}\r\n              </Select>\r\n      </FormControl >\r\n      \r\n                <MuiPickersUtilsProvider utils={DateFnsUtils} >\r\n                <div className={classes.textfield}>\r\n                    <KeyboardDateTimePicker\r\n                  autoOk\r\n                  ampm={false}\r\n                  disableFuture\r\n                  value={state.start_date}\r\n                  onChange={handleStartDateChange}\r\n                  label=\"Дата и время начала\"\r\n                  format=\"yyyy/MM/dd HH:mm\"\r\n                />\r\n                 </div>\r\n                        \r\n          </MuiPickersUtilsProvider>          \r\n          <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n              <div className={classes.textfield}>\r\n                    <KeyboardDateTimePicker\r\n                  autoOk\r\n                  ampm={false}\r\n                  disableFuture\r\n                  value={state.end_date}\r\n                  onChange={handleEndDateChange}\r\n                  label=\"Дата и время окончания\"\r\n                  format=\"yyyy/MM/dd HH:mm\"\r\n                />\r\n                 </div>\r\n              \r\n              </MuiPickersUtilsProvider>  \r\n              <TextField className={classes.textfield} value={state.cost_rub} onChange={(event)=>setCostRub(event)} type=\"number\" id=\"cost_rub\" label=\"Ущерб (руб)\"/>\r\n              <TextField className={classes.textfield} value={state.description_rus} onChange={(event)=>setDescRus(event)} id=\"description_rus\" label=\"Описание (рус)\"/>\r\n              <TextField className={classes.textfield} value={state.description_eng} onChange={(event)=>setDescEng(event)} id=\"description_eng\" label=\"Описание (англ)\"/>\r\n              <TextField className={classes.textfield} value={state.area} onChange={(event)=>setArea(event)} type=\"number\" id=\"area\" label=\"Площадь (км)\"/>\r\n              \r\n              <Button\r\n                      variant=\"outlined\"\r\n                      component=\"label\"\r\n                      size=\"small\"\r\n                      style={{ width: \"30%\", margin:'1% 0 0 0'  }}\r\n                    >\r\n                    Выберите файл\r\n                    <input type=\"file\" style={{ display: \"none\" }} onChange={(e)=>setJSONFile(e.target.files[0])}/>\r\n                   </Button> \r\n                   <TextField style={{ width: \"68%\", margin: '0 0 0 2%'}} value={state.JSONFileName} label=\"Геометрия .geojson\"/> \r\n\r\n              <Button variant=\"contained\" color=\"primary\" size=\"small\" startIcon={<SendIcon />} style={{float: 'right'}}\r\n                                    onClick={()=>pushNewDamagedZone()}>Добавить</Button>\r\n\r\n\r\n      <Dialog\r\n        open={state.waitingDialog}\r\n        maxWidth = 'lg'\r\n        scroll = 'body'\r\n      >\r\n      <DialogContent>\r\n        <div style={{display: 'flex', justifyContent:\"center\", margin: '30% 0 0'}}>\r\n          <CircularProgress style={{color: green[500]}}/>\r\n        </div>\r\n        <Typography variant=\"body2\" component=\"p\">\r\n          Сохранение...\r\n        </Typography>\r\n      </DialogContent>\r\n      </Dialog>     \r\n    </div>\r\n  )\r\n}","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport {\r\n  MuiPickersUtilsProvider,\r\n  KeyboardTimePicker,\r\n  KeyboardDatePicker,\r\n} from '@material-ui/pickers';\r\nimport MomentUtils from '@date-io/moment';\r\nimport DateFnsUtils from '@date-io/date-fns';\r\nimport LuxonUtils from '@date-io/luxon';\r\nimport Select from '@material-ui/core/Select';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Button from '@material-ui/core/Button';\r\nimport SendIcon from '@material-ui/icons/Send';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport { green,red } from '@material-ui/core/colors';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\n\r\nimport {postRasterData} from './request_functions.js'\r\nvar moment = require('moment');\r\nmoment().format();\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  box: {\r\n\r\n    width: '100%',\r\n    \r\n  },\r\n  margin: {\r\n    margin: '0 0 0 0',\r\n    fontSize: 11,\r\n    \r\n  },\r\n  textfield: {\r\n    width: '100%'\r\n    \r\n  },\r\n  textfield2: {\r\n    width: '100%', \r\n    height: '5vh',\r\n  },\r\n\r\n}));\r\n\r\n\r\n\r\nexport default function AdminRasterDataBlock(props) {\r\n  const classes = useStyles();\r\n  \r\n  const [state, setState] = React.useState({\r\n      name_rus:'',\r\n      name_eng:'',\r\n      description_rus:'',\r\n      description_eng:'',\r\n      image_for_map:'',\r\n      image_for_map_extent:'{\"Широта min\": 0,\"Широта max\": 0,\"Долгота min\": 0 ,\"Долгота max\": 0}',\r\n      file:'',\r\n      legend_file:'',\r\n      source:'',\r\n      image_date:null,\r\n      extent:'',\r\n      \r\n      ImageFileName:' ',\r\n      FileName:' ',\r\n      LegendFileName:' ',\r\n      ExtentFileName:' ',  \r\n\r\n      waitingDialog: false,          \r\n      });\r\n\r\n  const returnParsedExtent=(string)=>{\r\n    console.log(string)\r\n    var new_string=string.replace(/Широта /g, 'x_')\r\n    var new_string=new_string.replace(/Долгота /g, 'y_')\r\n    console.log(new_string)\r\n    return new_string\r\n  }\r\n\r\n  const rasterDataJson=()=>{\r\n    const formData = new FormData();\r\n    formData.append('name_rus', state.name_rus);\r\n    formData.append('name_eng', state.name_eng);\r\n    formData.append('description_rus', state.description_rus);\r\n    formData.append('description_eng', state.description_eng);\r\n    formData.append('image_for_map', state.image_for_map);\r\n    formData.append('image_for_map_extent', JSON.stringify(JSON.parse(returnParsedExtent(state.image_for_map_extent))));\r\n    formData.append('file', state.file);\r\n    formData.append('legend_file', state.legend_file);\r\n    formData.append('source', state.source);\r\n    formData.append('image_date', moment(state.image_date).format(\"DDMMYYYYTHHmmss\"));\r\n    formData.append('extent', state.extent);\r\n    return formData\r\n  }\r\n  \r\n  const set_name_rus=(event)=>{\r\n      setState({ ...state, name_rus: event.target.value});\r\n\r\n}\r\n  const set_name_eng=(event)=>{\r\n      setState({ ...state, name_eng: event.target.value});\r\n\r\n}\r\n  const set_description_rus=(event)=>{\r\n      setState({ ...state, description_rus: event.target.value});\r\n\r\n}\r\n  const set_description_eng=(event)=>{\r\n      setState({ ...state, description_eng: event.target.value});\r\n\r\n}\r\n\r\n  const set_sourse=(event)=>{\r\n      setState({ ...state, source: event.target.value});\r\n\r\n}\r\n  const set_image_for_map_extent=(event)=>{\r\n      setState({ ...state, image_for_map_extent: event.target.value});\r\n\r\n}\r\n\r\n  const handleDateChange = date => {\r\n    setState({...state, image_date: date});\r\n  };\r\n\r\n  const set_extent=(file)=>{\r\n    setState({...state, extent: file,\r\n                        ExtentFileName:file.name});\r\n  }\r\n  const set_image_for_map=(file)=>{\r\n    setState({...state, image_for_map: file,\r\n                        ImageFileName: file.name});\r\n  }\r\n  const set_file=(file)=>{\r\n    setState({...state, file: file,\r\n                        FileName:file.name});\r\n  }\r\n  const set_legend_file=(file)=>{\r\n    setState({...state, legend_file: file,\r\n                        LegendFileName:file.name});\r\n  }\r\n  const openWaitingDialog=()=>{\r\n    setState({...state, waitingDialog: true});\r\n  }\r\n  const closeWaitingDialog=()=>{\r\n    setState({...state, waitingDialog: false});\r\n  }\r\n\r\nconst pushNewRasterData=()=>{\r\n  \r\n  const form=rasterDataJson()\r\n  if(state.name_rus!==''&&state.name_eng!==''&&state.description_rus!==''&&state.description_eng!==''&&state.image_for_map!==''&&state.image_for_map_extent!==''&&state.file!==''&&state.legend_file!==''&&state.source!==''&&state.image_date!==null&&state.extent!==''){\r\n    openWaitingDialog()\r\n    console.log(rasterDataJson)\r\n    postRasterData(form, props.login, props.password).then(data=>{closeWaitingDialog();\r\n        props.closeDialog('raster_data_list')})\r\n  }\r\n}\r\n  \r\n\r\n\r\n\r\n  return (\r\n    <div className={classes.box}>\r\n      <TextField className={classes.textfield} value={state.name_rus} onChange={(event)=>set_name_rus(event)}  id=\"name_rus\" label=\"Название (рус)\"/>\r\n      <TextField className={classes.textfield} value={state.name_eng} onChange={(event)=>set_name_eng(event)}  id=\"name_eng\" label=\"Название (англ)\"/>\r\n      <TextField className={classes.textfield} value={state.description_rus} onChange={(event)=>set_description_rus(event)}  id=\"description_rus\" label=\"Описание (рус)\"/>\r\n      <TextField className={classes.textfield} value={state.description_eng} onChange={(event)=>set_description_eng(event)}  id=\"description_eng\" label=\"Описание (англ)\"/>\r\n            <MuiPickersUtilsProvider utils={DateFnsUtils} >\r\n              <div className={classes.textfield}>\r\n              <KeyboardDatePicker\r\n                disableToolbar\r\n                variant=\"inline\"\r\n                format=\"MM/dd/yyyy\"\r\n                margin=\"normal\"\r\n                id=\"Date\"\r\n                label=\"Дата\"\r\n                value={state.image_date}\r\n                onChange={handleDateChange}\r\n                KeyboardButtonProps={{\r\n                  'aria-label': 'change date',\r\n                }}\r\n              />\r\n              </div>          \r\n            </MuiPickersUtilsProvider>          \r\n\r\n             \r\n\r\n      <Button\r\n                      variant=\"outlined\"\r\n                      component=\"label\"\r\n                      size=\"small\"\r\n                      style={{ width: \"30%\", margin:'1% 0 0 0'  }}\r\n                    >\r\n                    Выберите файл\r\n                    <input type=\"file\" style={{ display: \"none\" }} onChange={(e)=>set_image_for_map(e.target.files[0])}/>\r\n                   </Button> \r\n                   <TextField style={{ width: \"68%\", margin: '0 0 0 2%'}} value={state.ImageFileName} label=\"Изображение для наложения на карту\"/> \r\n      \r\n\r\n      <TextField className={classes.textfield} value={state.image_for_map_extent} onChange={(event)=>set_image_for_map_extent(event)}  id=\"image_for_map_extent\" label=\"Охват изображения\"/>\r\n\r\n      \r\n      <Button\r\n                      variant=\"outlined\"\r\n                      component=\"label\"\r\n                      size=\"small\"\r\n                      style={{ width: \"30%\", margin:'1% 0 0 0'  }}\r\n                    >\r\n                    Выберите файл\r\n                    <input type=\"file\" style={{ display: \"none\" }} onChange={(e)=>set_file(e.target.files[0])}/>\r\n                   </Button> \r\n                   <TextField style={{ width: \"68%\", margin: '0 0 0 2%'}} value={state.FileName} label=\"Исходный файл\"/>\r\n\r\n     <Button\r\n                      variant=\"outlined\"\r\n                      component=\"label\"\r\n                      size=\"small\"\r\n                      style={{ width: \"30%\", margin:'1% 0 0 0'  }}\r\n                    >\r\n                    Выберите файл\r\n                    <input type=\"file\" style={{ display: \"none\" }} onChange={(e)=>set_legend_file(e.target.files[0])}/>\r\n                   </Button> \r\n                   <TextField style={{ width: \"68%\", margin: '0 0 0 2%'}} value={state.LegendFileName} label=\"Файл с легендой\"/>\r\n\r\n      <TextField className={classes.textfield} value={state.source} onChange={(event)=>set_sourse(event)}  id=\"source\" label=\"Источник\"/>              \r\n\r\n              <Button\r\n                      variant=\"outlined\"\r\n                      component=\"label\"\r\n                      size=\"small\"\r\n                      style={{ width: \"30%\", margin:'1% 0 0 0'  }}\r\n                    >\r\n                    Выберите файл\r\n                    <input type=\"file\" style={{ display: \"none\" }} onChange={(e)=>set_extent(e.target.files[0])}/>\r\n                   </Button> \r\n                   <TextField style={{ width: \"68%\", margin: '0 0 0 2%'}} value={state.ExtentFileName} label=\"Охват изображения .geojson\"/> \r\n\r\n              <Button variant=\"contained\" color=\"primary\" size=\"small\" startIcon={<SendIcon />} style={{float: 'right'}}\r\n                                    onClick={()=>pushNewRasterData()}>Добавить</Button>\r\n\r\n      <Dialog\r\n        open={state.waitingDialog}\r\n        maxWidth = 'lg'\r\n        scroll = 'body'\r\n      >\r\n      <DialogContent>\r\n        <div style={{display: 'flex', justifyContent:\"center\", margin: '30% 0 0'}}>\r\n          <CircularProgress style={{color: green[500]}}/>\r\n        </div>\r\n        <Typography variant=\"body2\" component=\"p\">\r\n          Сохранение...\r\n        </Typography>\r\n      </DialogContent>\r\n      </Dialog>\r\n            \r\n    </div>\r\n  )\r\n}","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport {\r\n  MuiPickersUtilsProvider,\r\n  KeyboardTimePicker,\r\n  KeyboardDatePicker,\r\n} from '@material-ui/pickers';\r\nimport MomentUtils from '@date-io/moment';\r\nimport DateFnsUtils from '@date-io/date-fns';\r\nimport LuxonUtils from '@date-io/luxon';\r\nimport Select from '@material-ui/core/Select';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Button from '@material-ui/core/Button';\r\nimport SendIcon from '@material-ui/icons/Send';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport { green,red } from '@material-ui/core/colors';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\n\r\nimport {postVectorData} from './request_functions.js'\r\nvar moment = require('moment');\r\nmoment().format();\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  box: {\r\n\r\n    width: '100%',\r\n    \r\n  },\r\n  margin: {\r\n    margin: '0 0 0 0',\r\n    fontSize: 11,\r\n    \r\n  },\r\n  textfield: {\r\n    width: '100%'\r\n    \r\n  },\r\n  textfield2: {\r\n    width: '100%', \r\n    height: '5vh',\r\n  },\r\n\r\n}));\r\n\r\n\r\n\r\nexport default function AdminVectorDataBlock(props) {\r\n  const classes = useStyles();\r\n  \r\n  const [state, setState] = React.useState({\r\n      name_rus:'',\r\n      name_eng:'',\r\n      description_rus:'',\r\n      description_eng:'',      \r\n      file:'',\r\n      source:'',\r\n      vector_date:null,\r\n      extent:'',\r\n      geojson_for_map:'',\r\n      \r\n      FileName:' ',\r\n      ExtentFileName:' ',\r\n      GeojsonFileName:' ',            \r\n      });\r\n\r\n\r\n  const vectorDataJson=()=>{\r\n    const formData = new FormData();\r\n    formData.append('name_rus', state.name_rus);\r\n    formData.append('name_eng', state.name_eng);\r\n    formData.append('description_rus', state.description_rus);\r\n    formData.append('description_eng', state.description_eng);\r\n    formData.append('file', state.file);\r\n    formData.append('source', state.source);\r\n    formData.append('vector_date', moment(state.vector_date).format(\"DDMMYYYYTHHmmss\"));\r\n    formData.append('geojson_for_map', state.geojson_for_map);\r\n    formData.append('extent', state.extent);\r\n    return formData\r\n  }\r\n  \r\n  const set_name_rus=(event)=>{\r\n      setState({ ...state, name_rus: event.target.value});\r\n\r\n}\r\n  const set_name_eng=(event)=>{\r\n      setState({ ...state, name_eng: event.target.value});\r\n\r\n}\r\n  const set_description_rus=(event)=>{\r\n      setState({ ...state, description_rus: event.target.value});\r\n\r\n}\r\n  const set_description_eng=(event)=>{\r\n      setState({ ...state, description_eng: event.target.value});\r\n\r\n}\r\n\r\n  const set_sourse=(event)=>{\r\n      setState({ ...state, source: event.target.value});\r\n\r\n}\r\n\r\n  const handleDateChange = date => {\r\n    setState({...state, vector_date: date});\r\n  };\r\n\r\n  const set_extent=(file)=>{\r\n    setState({...state, extent: file,\r\n                        ExtentFileName:file.name});\r\n  }\r\n  const set_image_for_map=(file)=>{\r\n    setState({...state, image_for_map: file,\r\n                        ImageFileName: file.name});\r\n  }\r\n  const set_file=(file)=>{\r\n    setState({...state, file: file,\r\n                        FileName:file.name});\r\n  }\r\n  const set_geojson_for_map=(file)=>{\r\n    setState({...state, geojson_for_map: file,\r\n                        GeojsonFileName:file.name});\r\n  }\r\n\r\n  const openWaitingDialog=()=>{\r\n    setState({...state, waitingDialog: true});\r\n  }\r\n  const closeWaitingDialog=()=>{\r\n    setState({...state, waitingDialog: false});\r\n  }\r\nconst pushNewVectorData=()=>{\r\n  \r\n  const form=vectorDataJson()\r\n  if(state.name_rus!==''&&state.name_eng!==''&&state.description_rus!==''&&state.description_eng!==''&&state.file!==''&&state.geojson_for_map!==''&&state.source!==''&&state.vector_date!==null&&state.extent!==''){\r\n    openWaitingDialog()\r\n    postVectorData(form, props.login, props.password).then(data=>{console.log(data);closeWaitingDialog();\r\n        props.closeDialog('vector_data_list')})\r\n  }\r\n}\r\n  \r\n\r\n\r\n\r\n  return (\r\n    <div className={classes.box}>\r\n      <TextField className={classes.textfield} value={state.name_rus} onChange={(event)=>set_name_rus(event)}  id=\"name_rus\" label=\"Название (рус)\"/>\r\n      <TextField className={classes.textfield} value={state.name_eng} onChange={(event)=>set_name_eng(event)}  id=\"name_eng\" label=\"Название (англ)\"/>\r\n      <TextField className={classes.textfield} value={state.description_rus} onChange={(event)=>set_description_rus(event)}  id=\"description_rus\" label=\"Описание (рус)\"/>\r\n      <TextField className={classes.textfield} value={state.description_eng} onChange={(event)=>set_description_eng(event)}  id=\"description_eng\" label=\"Описание (англ)\"/>\r\n            <MuiPickersUtilsProvider utils={DateFnsUtils} >\r\n              <div className={classes.textfield}>\r\n              <KeyboardDatePicker\r\n                disableToolbar\r\n                variant=\"inline\"\r\n                format=\"MM/dd/yyyy\"\r\n                margin=\"normal\"\r\n                id=\"Date\"\r\n                label=\"Дата\"\r\n                value={state.vector_date}\r\n                onChange={handleDateChange}\r\n                KeyboardButtonProps={{\r\n                  'aria-label': 'change date',\r\n                }}\r\n              />\r\n              </div>          \r\n            </MuiPickersUtilsProvider>          \r\n\r\n      \r\n      <Button\r\n                      variant=\"outlined\"\r\n                      component=\"label\"\r\n                      size=\"small\"\r\n                      style={{ width: \"30%\", margin:'1% 0 0 0'  }}\r\n                    >\r\n                    Выберите файл\r\n                    <input type=\"file\" style={{ display: \"none\" }} onChange={(e)=>set_file(e.target.files[0])}/>\r\n                   </Button> \r\n                   <TextField style={{ width: \"68%\", margin: '0 0 0 2%'}} value={state.FileName} label=\"Исходный файл\"/>\r\n\r\n     <Button\r\n                      variant=\"outlined\"\r\n                      component=\"label\"\r\n                      size=\"small\"\r\n                      style={{ width: \"30%\", margin:'1% 0 0 0'  }}\r\n                    >\r\n                    Выберите файл\r\n                    <input type=\"file\" style={{ display: \"none\" }} onChange={(e)=>set_geojson_for_map(e.target.files[0])}/>\r\n                   </Button> \r\n                   <TextField style={{ width: \"68%\", margin: '0 0 0 2%'}} value={state.GeojsonFileName} label=\"Файл .geojson для наложения на карту\"/>\r\n\r\n      <TextField className={classes.textfield} value={state.source} onChange={(event)=>set_sourse(event)}  id=\"source\" label=\"Источник\"/>              \r\n\r\n              <Button\r\n                      variant=\"outlined\"\r\n                      component=\"label\"\r\n                      size=\"small\"\r\n                      style={{ width: \"30%\", margin:'1% 0 0 0'  }}\r\n                    >\r\n                    Выберите файл\r\n                    <input type=\"file\" style={{ display: \"none\" }} onChange={(e)=>set_extent(e.target.files[0])}/>\r\n                   </Button> \r\n                   <TextField style={{ width: \"68%\", margin: '0 0 0 2%'}} value={state.ExtentFileName} label=\"Охват изображения .geojson\"/> \r\n\r\n              <Button variant=\"contained\" color=\"primary\" size=\"small\" startIcon={<SendIcon />} style={{float: 'right'}}\r\n                                    onClick={()=>pushNewVectorData()}>Добавить</Button>\r\n\r\n\r\n      <Dialog\r\n        open={state.waitingDialog}\r\n        maxWidth = 'lg'\r\n        scroll = 'body'\r\n      >\r\n      <DialogContent>\r\n        <div style={{display: 'flex', justifyContent:\"center\", margin: '30% 0 0'}}>\r\n          <CircularProgress style={{color: green[500]}}/>\r\n        </div>\r\n        <Typography variant=\"body2\" component=\"p\">\r\n          Сохранение...\r\n        </Typography>\r\n      </DialogContent>\r\n      </Dialog>\r\n\r\n    </div>\r\n  )\r\n}","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport {\r\n  MuiPickersUtilsProvider,\r\n  KeyboardTimePicker,\r\n  KeyboardDatePicker,\r\n} from '@material-ui/pickers';\r\nimport MomentUtils from '@date-io/moment';\r\nimport DateFnsUtils from '@date-io/date-fns';\r\nimport LuxonUtils from '@date-io/luxon';\r\nimport Select from '@material-ui/core/Select';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Button from '@material-ui/core/Button';\r\nimport SendIcon from '@material-ui/icons/Send';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport { green,red } from '@material-ui/core/colors';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport { KeyboardDateTimePicker } from \"@material-ui/pickers\";\r\n\r\nimport {postRemoteSensingData} from './request_functions.js'\r\nvar moment = require('moment');\r\nmoment().format();\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  box: {\r\n\r\n    width: '100%',\r\n    \r\n  },\r\n  margin: {\r\n    margin: '0 0 0 0',\r\n    fontSize: 11,\r\n    \r\n  },\r\n  textfield: {\r\n    width: '100%'\r\n    \r\n  },\r\n  textfield2: {\r\n    width: '100%', \r\n    height: '5vh',\r\n  },\r\n\r\n}));\r\n\r\n\r\n\r\nasync function pushRemoteSensingData(form)\r\n    {   console.log(form)\r\n        let response = await fetch('http://localhost:4444/new_remote_sensing_data_push', {\r\n        method: 'POST', // *GET, POST, PUT, DELETE, etc.\r\n        mode: 'cors', // no-cors, cors, *same-origin\r\n        cache: 'no-cache', // *default, no-cache, reload, force-cache, only-if-cached\r\n        credentials: 'same-origin', // include, *same-origin, omit\r\n        \r\n        redirect: 'follow', // manual, *follow, error\r\n        referrer: 'no-referrer', // no-referrer, *client\r\n        body: form, // тип данных в body должен соответвовать значению заголовка \"Content-Type\"\r\n    });\r\n        let data = await response.json()\r\n        return data\r\n        \r\n      }\r\n\r\nexport default function AdminRemoteSensingDataBlock(props) {\r\n  const classes = useStyles();\r\n  \r\n  const [state, setState] = React.useState({\r\n\r\n      description_rus:'',\r\n      description_eng:'',\r\n      image_for_map:'',\r\n      image_for_map_extent:'{\"Широта min\": 0,\"Широта max\": 0,\"Долгота min\": 0 ,\"Долгота max\": 0}',\r\n      file:'',\r\n      image_date:null,\r\n      sensor: '',\r\n      source:'',\r\n      extent:'',\r\n      \r\n      ImageFileName:' ',\r\n      FileName:' ',\r\n      ExtentFileName:' ',\r\n      waitingDialog: false,           \r\n      });\r\n\r\n  const returnParsedExtent=(string)=>{\r\n    var new_string=string.replace(/Широта /g, 'x_')\r\n    var new_string=new_string.replace(/Долгота /g, 'y_')\r\n    return new_string\r\n  }\r\n\r\n  const remoteSensingDataJson=()=>{\r\n    const formData = new FormData();\r\n    formData.append('description_rus', state.description_rus);\r\n    formData.append('description_eng', state.description_eng);\r\n    formData.append('image_for_map', state.image_for_map);\r\n    formData.append('image_for_map_extent', JSON.stringify(JSON.parse(returnParsedExtent(state.image_for_map_extent))));\r\n    formData.append('file', state.file);\r\n    formData.append('source', state.source);\r\n    formData.append('image_date', moment(state.image_date).format(\"DDMMYYYYTHHmmss\"));\r\n    formData.append('sensor', state.sensor);\r\n    formData.append('extent', state.extent);\r\n    return formData\r\n  }\r\n  \r\n\r\n  const set_description_rus=(event)=>{\r\n      setState({ ...state, description_rus: event.target.value});\r\n\r\n}\r\n  const set_description_eng=(event)=>{\r\n      setState({ ...state, description_eng: event.target.value});\r\n\r\n}\r\n\r\n  const set_sourse=(event)=>{\r\n      setState({ ...state, source: event.target.value});\r\n\r\n}\r\n  const set_sensor=(event)=>{\r\n      setState({ ...state, sensor: event.target.value});\r\n\r\n}\r\n  const set_image_for_map_extent=(event)=>{\r\n      setState({ ...state, image_for_map_extent: event.target.value});\r\n\r\n}\r\n\r\n  const handleDateChange = date => {\r\n    setState({...state, image_date: date});\r\n  };\r\n\r\n\r\n  const set_image_for_map=(file)=>{\r\n    setState({...state, image_for_map: file,\r\n                        ImageFileName: file.name});\r\n  }\r\n  const set_file=(file)=>{\r\n    setState({...state, file: file,\r\n                        FileName:file.name});\r\n  }\r\n\r\n  const set_extent=(file)=>{\r\n    setState({...state, extent: file,\r\n                        ExtentFileName:file.name});\r\n  }\r\n  const openWaitingDialog=()=>{\r\n    setState({...state, waitingDialog: true});\r\n  }\r\n  const closeWaitingDialog=()=>{\r\n    setState({...state, waitingDialog: false});\r\n  }\r\nconst pushNewRemoteSensingData=()=>{\r\n  \r\n  const form=remoteSensingDataJson()\r\n  if(state.description_rus!==''&&state.description_eng!==''&&state.image_for_map!==''&&state.image_for_map_extent!==''&&state.file!==''&&state.sensor!==''&&state.source!==''&&state.image_date!==null){\r\n    openWaitingDialog()\r\n    postRemoteSensingData(form, props.login, props.password).then(data=>{closeWaitingDialog();\r\n        props.closeDialog('remote_sensing_data_list')})\r\n  }\r\n}\r\n  \r\n\r\n\r\n\r\n  return (\r\n    <div className={classes.box}>\r\n      <TextField className={classes.textfield} value={state.description_rus} onChange={(event)=>set_description_rus(event)}  id=\"description_rus\" label=\"Описание (рус)\"/>\r\n      <TextField className={classes.textfield} value={state.description_eng} onChange={(event)=>set_description_eng(event)}  id=\"description_eng\" label=\"Описание (англ)\"/>\r\n            <MuiPickersUtilsProvider utils={DateFnsUtils} >\r\n               \r\n              <div className={classes.textfield}>\r\n                    <KeyboardDateTimePicker\r\n                  autoOk\r\n                  ampm={false}\r\n                  disableFuture\r\n                  value={state.image_date}\r\n                  onChange={handleDateChange}\r\n                  label=\"Дата и время\"\r\n                  format=\"yyyy/MM/dd HH:mm\"\r\n                />\r\n                 </div>        \r\n            </MuiPickersUtilsProvider>          \r\n\r\n             \r\n\r\n      <Button\r\n                      variant=\"outlined\"\r\n                      component=\"label\"\r\n                      size=\"small\"\r\n                      style={{ width: \"30%\", margin:'1% 0 0 0'  }}\r\n                    >\r\n                    Выберите файл\r\n                    <input type=\"file\" style={{ display: \"none\" }} onChange={(e)=>set_image_for_map(e.target.files[0])}/>\r\n                   </Button> \r\n                   <TextField style={{ width: \"68%\", margin: '0 0 0 2%'}} value={state.ImageFileName} label=\"Изображение для наложения на карту\"/> \r\n      \r\n\r\n      <TextField className={classes.textfield} value={state.image_for_map_extent} onChange={(event)=>set_image_for_map_extent(event)}  id=\"image_for_map_extent\" label=\"Охват изображения\"/>\r\n\r\n      \r\n      <Button\r\n                      variant=\"outlined\"\r\n                      component=\"label\"\r\n                      size=\"small\"\r\n                      style={{ width: \"30%\", margin:'1% 0 0 0'  }}\r\n                    >\r\n                    Выберите файл\r\n                    <input type=\"file\" style={{ display: \"none\" }} onChange={(e)=>set_file(e.target.files[0])}/>\r\n                   </Button> \r\n                   <TextField style={{ width: \"68%\", margin: '0 0 0 2%'}} value={state.FileName} label=\"Исходный файл\"/>\r\n\r\n\r\n      <TextField className={classes.textfield} value={state.sensor} onChange={(event)=>set_sensor(event)}  id=\"sensor\" label=\"Название сенсора\"/>\r\n      <TextField className={classes.textfield} value={state.source} onChange={(event)=>set_sourse(event)}  id=\"source\" label=\"Источник\"/>              \r\n      <Button\r\n                      variant=\"outlined\"\r\n                      component=\"label\"\r\n                      size=\"small\"\r\n                      style={{ width: \"30%\", margin:'1% 0 0 0'  }}\r\n                    >\r\n                    Выберите файл\r\n                    <input type=\"file\" style={{ display: \"none\" }} onChange={(e)=>set_extent(e.target.files[0])}/>\r\n                   </Button> \r\n                   <TextField style={{ width: \"68%\", margin: '0 0 0 2%'}} value={state.ExtentFileName} label=\"Охват изображения .geojson\"/> \r\n              <Button variant=\"contained\" color=\"primary\" size=\"small\" startIcon={<SendIcon />} style={{float: 'right'}}\r\n                                    onClick={()=>pushNewRemoteSensingData()}>Добавить</Button>\r\n\r\n\r\n      <Dialog\r\n        open={state.waitingDialog}\r\n        maxWidth = 'lg'\r\n        scroll = 'body'\r\n      >\r\n      <DialogContent>\r\n        <div style={{display: 'flex', justifyContent:\"center\", margin: '30% 0 0'}}>\r\n          <CircularProgress style={{color: green[500]}}/>\r\n        </div>\r\n        <Typography variant=\"body2\" component=\"p\">\r\n          Сохранение...\r\n        </Typography>\r\n      </DialogContent>\r\n      </Dialog>      \r\n    </div>\r\n  )\r\n}","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport {\r\n  MuiPickersUtilsProvider,\r\n  KeyboardTimePicker,\r\n  KeyboardDatePicker,\r\n} from '@material-ui/pickers';\r\nimport MomentUtils from '@date-io/moment';\r\nimport DateFnsUtils from '@date-io/date-fns';\r\nimport LuxonUtils from '@date-io/luxon';\r\nimport Select from '@material-ui/core/Select';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Button from '@material-ui/core/Button';\r\nimport SendIcon from '@material-ui/icons/Send';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport { green,red } from '@material-ui/core/colors';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\n\r\nimport {postMultimediaRecordsData, MultimediaRecordsTypesListGet} from './request_functions.js'\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  box: {\r\n\r\n    width: '100%',\r\n    \r\n  },\r\n  margin: {\r\n    margin: '0 0 0 0',\r\n    fontSize: 11,\r\n    \r\n  },\r\n  textfield: {\r\n    width: '100%'\r\n    \r\n  },\r\n  textfield2: {\r\n    width: '100%', \r\n    height: '5vh',\r\n  },\r\n\r\n}));\r\n\r\n\r\nexport default function AdminMultimediaRecordsDataBlock(props) {\r\n  const classes = useStyles();\r\n  \r\n  const [state, setState] = React.useState({\r\n      firstDataGet:false,\r\n      types_list: null,\r\n\r\n      name_rus:'',\r\n      name_eng:'',\r\n      description_rus:'',\r\n      description_eng:'',\r\n      source:'',\r\n      file:'',\r\n      type:'',\r\n      type_id:'',\r\n      record_localization:'',\r\n\r\n      FileName:' ',\r\n         \r\n      });\r\n\r\n\r\n  const multimediaRecordsDataJson=()=>{\r\n    const formData = new FormData();\r\n    formData.append('name_rus', state.name_rus);\r\n    formData.append('name_eng', state.name_eng);\r\n    formData.append('description_rus', state.description_rus);\r\n    formData.append('description_eng', state.description_eng);\r\n    formData.append('file', state.file);\r\n    formData.append('source', state.source);\r\n    formData.append('type', state.type);\r\n    formData.append('type_id', state.type_id);\r\n    formData.append('record_localization', state.record_localization);\r\n    return formData\r\n  }\r\n  \r\n  const set_name_rus=(event)=>{\r\n      setState({ ...state, name_rus: event.target.value});\r\n\r\n}\r\n  const set_name_eng=(event)=>{\r\n      setState({ ...state, name_eng: event.target.value});\r\n\r\n}\r\n  const set_description_rus=(event)=>{\r\n      setState({ ...state, description_rus: event.target.value});\r\n\r\n}\r\n  const set_description_eng=(event)=>{\r\n      setState({ ...state, description_eng: event.target.value});\r\n\r\n}\r\n\r\n  const set_source=(event)=>{\r\n      setState({ ...state, source: event.target.value});\r\n\r\n}\r\n  const set_type=(event)=>{\r\n      const id=event.target.value\r\n      state.types_list.data.types.forEach(element=>{\r\n        if (id==element.id){\r\n          const type=element.type\r\n          setState({ ...state, type_id: event.target.value,\r\n                           type: type});\r\n        }}\r\n      )\r\n\r\n}\r\n  const set_record_localization=(event)=>{\r\n      const string=event.target.value;\r\n      setState({ ...state, record_localization_str: string});\r\n      const coordList=string.split(',')\r\n      if (coordList[0]!==undefined &&coordList[1]!==undefined&&coordList[0]!=='' &&coordList[1]!==''){      \r\n      const pointWKT='POINT('+coordList[1]+' '+coordList[0]+')'\r\n      setState({ ...state, record_localization: pointWKT,\r\n                           record_localization_str: string })\r\n      }\r\n      if (coordList[0]==undefined||coordList[1]==undefined||coordList[0]==''||coordList[1]==''){\r\n        setState({ ...state, record_localization: '',\r\n                             record_localization_str: string })\r\n      }                     \r\n\r\n}\r\n\r\n\r\n  const set_file=(file)=>{\r\n    setState({...state, file: file,\r\n                        FileName:file.name});\r\n  }\r\n\r\n\r\n  const openWaitingDialog=()=>{\r\n    setState({...state, waitingDialog: true});\r\n  }\r\n  const closeWaitingDialog=()=>{\r\n    setState({...state, waitingDialog: false});\r\n  }\r\nconst pushNewMultimediaRecordsData=()=>{\r\n  \r\n  const form=multimediaRecordsDataJson()\r\n  if(state.name_rus!==''&&state.name_eng!==''&&state.description_rus!==''&&state.description_eng!==''&&state.file!==''&&state.source!==''&&state.type!==''&&state.type_id!==''&&state.record_localization!==''){\r\n    openWaitingDialog()\r\n    postMultimediaRecordsData(form, props.login, props.password).then(data=>{closeWaitingDialog();\r\n        props.closeDialog('multimedia_records_data_list')})\r\n  }\r\n}\r\n  \r\n  const returnMenuItemsTypes = () =>{\r\n    const list = []\r\n    if (state.types_list!=null){\r\n      const types_list= state.types_list.data.types      \r\n      for (let i=0; i<types_list.length; i++){\r\n              list.push(<MenuItem key={i} value={types_list[i].id}>{types_list[i].alias_rus}</MenuItem>)\r\n      \r\n      }\r\n  }\r\n    return list\r\n  }\r\n\r\nif (state.firstDataGet==false){\r\n  MultimediaRecordsTypesListGet().then(data=>setState({...state, types_list: data,\r\n                                                                 firstDataGet:true}))\r\n}\r\n\r\n\r\n  return (\r\n    <div className={classes.box}>\r\n      <TextField className={classes.textfield} value={state.name_rus} onChange={(event)=>set_name_rus(event)}  id=\"name_rus\" label=\"Название (рус)\"/>\r\n      <TextField className={classes.textfield} value={state.name_eng} onChange={(event)=>set_name_eng(event)}  id=\"name_eng\" label=\"Название (англ)\"/>\r\n      <TextField className={classes.textfield} value={state.description_rus} onChange={(event)=>set_description_rus(event)}  id=\"description_rus\" label=\"Описание (рус)\"/>\r\n      <TextField className={classes.textfield} value={state.description_eng} onChange={(event)=>set_description_eng(event)}  id=\"description_eng\" label=\"Описание (англ)\"/>\r\n\r\n      <div className={classes.textfield}>\r\n          <InputLabel>Тип файла</InputLabel>\r\n            <Select \r\n              style={{width:'100%'}}\r\n              value={state.type_id}\r\n              onChange={(event)=>set_type(event)}>\r\n              {returnMenuItemsTypes()}\r\n            </Select> \r\n          </div>\r\n      \r\n      <TextField className={classes.textfield} value={state.source} onChange={(event)=>set_source(event)}  id=\"source\" label=\"Источник\"/>\r\n      <TextField className={classes.textfield} value={state.record_localization_str} onChange={(event)=>set_record_localization(event)}  id=\"record_localization\" label=\"Координаты (широта, долгота - разделитель - ,)\"/>\r\n      \r\n      <Button\r\n                      variant=\"outlined\"\r\n                      component=\"label\"\r\n                      size=\"small\"\r\n                      style={{ width: \"30%\", margin:'1% 0 0 0'  }}\r\n                    >\r\n                    Выберите файл\r\n                    <input type=\"file\" style={{ display: \"none\" }} onChange={(e)=>set_file(e.target.files[0])}/>\r\n                   </Button> \r\n                   <TextField style={{ width: \"68%\", margin: '0 0 0 2%'}} value={state.FileName} label=\"Файл\"/>\r\n           \r\n\r\n\r\n              <Button variant=\"contained\" color=\"primary\" size=\"small\" startIcon={<SendIcon />} style={{float: 'right'}}\r\n                                    onClick={()=>pushNewMultimediaRecordsData()}>Добавить</Button>\r\n\r\n\r\n  <Dialog\r\n        open={state.waitingDialog}\r\n        maxWidth = 'lg'\r\n        scroll = 'body'\r\n      >\r\n      <DialogContent>\r\n        <div style={{display: 'flex', justifyContent:\"center\", margin: '30% 0 0'}}>\r\n          <CircularProgress style={{color: green[500]}}/>\r\n        </div>\r\n        <Typography variant=\"body2\" component=\"p\">\r\n          Сохранение...\r\n        </Typography>\r\n      </DialogContent>\r\n      </Dialog>          \r\n    </div>\r\n  )\r\n}","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport MomentUtils from '@date-io/moment';\r\nimport DateFnsUtils from '@date-io/date-fns';\r\nimport LuxonUtils from '@date-io/luxon';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport {\r\n  MuiPickersUtilsProvider,\r\n  KeyboardTimePicker,\r\n  KeyboardDatePicker,\r\n} from '@material-ui/pickers';\r\nimport AdminCommonLinksBlock from './AdminCommonLinksBlock.js'\r\nimport AdminMediaLinksBlock from './AdminMediaLinksBlock.js'\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport SendIcon from '@material-ui/icons/Send';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport AdminDamagedZonesBlock from './AdminDamagedZonesBlock.js'\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\nimport Select from '@material-ui/core/Select';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport AdminRasterDataBlock from './AdminRasterDataBlock.js'\r\nimport AdminVectorDataBlock from './AdminVectorDataBlock.js'\r\nimport AdminRemoteSensingDataBlock from './AdminRemoteSensingDataBlock.js'\r\nimport AdminMultimediaRecordsDataBlock from './AdminMultimediaRecordsDataBlock.js'\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport CloudUploadIcon from '@material-ui/icons/CloudUpload';\r\nimport CloudDoneIcon from '@material-ui/icons/CloudDone';\r\nimport CancelIcon from '@material-ui/icons/Cancel';\r\nimport { green,red } from '@material-ui/core/colors';\r\nimport { KeyboardDateTimePicker } from \"@material-ui/pickers\";\r\n\r\nimport {API_settings} from './server_settings.js'\r\nimport {rewriteEventData, postNewEventData, TypesListGet, ReasonsListGet, CommonLinksListGet, MediaLinksListGet, StationListGet, DamagedZonesListGet, RasterDataListGet, VectorDataListGet, RemoteSensingDataListGet, MultimediaRecordsDataListGet, OldEventDataGet} from './request_functions.js'\r\n\r\n\r\nvar moment = require('moment');\r\nmoment().format();\r\n\r\nconst useStyles = makeStyles(theme => ({\r\nfullwidth:{\r\n  width: '100%',\r\n  display: 'flex',\r\n  justifyContent:\"center\",\r\n},\r\ntextfield:{\r\n    width: '30%', \r\n    margin: '3vh 1% 0',\r\n\r\n  },\r\ntextfield2:{\r\n    width: '30%', \r\n    margin: '3vh 1% 0',\r\n    display: 'inline-block',\r\n},\r\ntextfield3:{\r\n    width: '45%', \r\n    margin: '3vh 1% 0',\r\n    display: 'inline-block',\r\n},\r\ntextfieldLg:{\r\n    width: '62%', \r\n    margin: '3vh 1% 0',\r\n\r\n  },\r\n  empStr:{\r\n    width: '100%', \r\n    height: '5vh',\r\n\r\n  },\r\n\r\n  halfField:{\r\n    width: '48%',\r\n    margin: '0 1%',\r\n    float: 'left',\r\n  },\r\n  halfField2:{\r\n    width: '45%',\r\n    margin: '0 1%',\r\n    float: 'right',\r\n  },\r\n  mediumField:{\r\n    width:'60%',\r\n    margin: '0 1%',\r\n    float: 'left,'\r\n  },\r\n\r\n  root: {\r\n    margin: '3vh 2%',\r\n    padding: '1%',\r\n    height: '90vh',\r\n    maxHeight: '90vh',\r\n    overflow: 'auto',\r\n  },\r\n  btn: {\r\n    background: '#1D8A6B',\r\n    float: 'left',\r\n  },\r\n  btn2: {\r\n    background: '#ff333d',\r\n    float: 'left',\r\n  },\r\n}\r\n));\r\n\r\n\r\n\r\nexport default function NewEditMode(props) {\r\n\r\n  \r\n  const classes = useStyles();\r\n  const [state, setState] = React.useState({\r\n      place_id: props.placeId,\r\n      type_id: '',\r\n      type:'',\r\n      reason_id: '',\r\n      reason: '',\r\n      name_rus: '',\r\n      description_rus: '',\r\n      name_eng: '',\r\n      description_eng: '',\r\n      cost_rub: '',\r\n      area_km: '',\r\n      max_depth: '',\r\n      mean_depth: '',\r\n      max_speed: '',\r\n      mean_speed: '',\r\n      event_start_date: null,\r\n      event_end_date: null,\r\n      common_links:[],\r\n      media_links:[],\r\n      observation_stations:[],\r\n      damaged_zones:[],\r\n      raster_data:[],\r\n      vector_data:[],\r\n      remote_sensing_data:[],\r\n      multimedia_records_data:[],\r\n\r\n      multimedia_records_data_list:null,\r\n      remote_sensing_data_list:null,\r\n      vector_data_list:null,\r\n      raster_data_list:null,\r\n      damaged_zones_list:null,\r\n      stations_list:null,\r\n      media_links_list: null,\r\n      common_links_list: null,\r\n      types_list: null,\r\n      reasons_list:null,\r\n      firstDataGet:false,\r\n\r\n      dialog_box_value:null,\r\n      eventPushResponse:null,\r\n      waitingDialogOpen:false,\r\n      fieldsFilled:true,\r\n\r\n      });\r\n\r\n    const eventJson = new FormData();\r\n    eventJson.append('event_id', state.event_id)\r\n    eventJson.append('place_id', state.place_id)\r\n    eventJson.append('type_id', state.type_id)\r\n    eventJson.append('type',state.type)\r\n    eventJson.append('reason_id', state.reason_id)\r\n    eventJson.append('reason', state.reason)\r\n    eventJson.append('name_rus', state.name_rus)\r\n    eventJson.append('name_rus', state.name_rus)\r\n    eventJson.append('description_rus', state.description_rus)\r\n    eventJson.append('name_eng', state.name_eng)\r\n    eventJson.append('description_eng', state.description_eng)\r\n    eventJson.append('cost_rub', state.cost_rub)\r\n    eventJson.append('area_km', state.area_km)\r\n    eventJson.append('max_depth', state.max_depth)\r\n    eventJson.append('mean_depth', state.mean_depth)\r\n    eventJson.append('max_speed', state.max_speed)\r\n    eventJson.append('mean_speed', state.mean_speed)\r\n    eventJson.append('event_start_date', moment(state.event_start_date).format(\"DDMMYYYYTHHmmss\"))\r\n    eventJson.append('event_end_date', moment(state.event_end_date).format(\"DDMMYYYYTHHmmss\"))\r\n    eventJson.append('common_links',JSON.stringify(state.common_links.map((st)=>{return st.id})))\r\n    eventJson.append('media_links',JSON.stringify(state.media_links.map((st)=>{return st.id})))\r\n    eventJson.append('observation_stations', JSON.stringify(state.observation_stations.map((st)=>{return st.id})))\r\n    eventJson.append('damaged_zones',JSON.stringify(state.damaged_zones.map((st)=>{return st.id})))\r\n    eventJson.append('misc_raster_data',JSON.stringify(state.raster_data.map((st)=>{return st.id})))\r\n    eventJson.append('misc_vector_data',JSON.stringify(state.vector_data.map((st)=>{return st.id})))\r\n    eventJson.append('remote_sensing_data',JSON.stringify(state.remote_sensing_data.map((st)=>{return st.id})))\r\n    eventJson.append('multimedia_records',JSON.stringify(state.multimedia_records_data.map((st)=>{return st.id})))\r\n\r\n    const sendEventData=()=>{\r\n      if(state.place_id!==undefined&&state.type_id!==''&&state.type!==''&&state.reason_id!==''&&state.reason!==''&&state.name_rus!==''&&state.description_rus!==''&&state.name_eng!==''&&state.description_eng!==''&&state.cost_rub!==''&&state.area_km!==''&&state.max_depth!==''&&state.mean_depth!==''&&state.max_speed!==''&&state.mean_speed!==''&&state.event_start_date!==null&&state.event_end_date!==null&&state.observation_stations!==[]){\r\n        setState({...state, waitingDialogOpen: true})\r\n        if (props.mode=='new'){\r\n          postNewEventData(eventJson, props.login, props.password).then(data=>{console.log(data); setState({...state, eventPushResponse:data,\r\n                                                                   waitingDialogOpen: true})})\r\n        }\r\n        if (props.mode=='old'){\r\n          rewriteEventData(eventJson, props.login, props.password).then(data=>setState({...state, eventPushResponse:data,\r\n                                                                   waitingDialogOpen: true}))\r\n        }\r\n      }\r\n      else{\r\n        setState({...state, fieldsFilled: false})\r\n      }\r\n    }\r\n    const returnFilledFieldsError=()=>{\r\n      if (state.fieldsFilled==false){\r\n        console.log(state)\r\n        return         <Typography color='error' align='center' gutterBottom>\r\n                         Заполните все обязательные поля! (Помечены*)\r\n                       </Typography>\r\n      }\r\n    }\r\n    const returnServerResponse=()=>{\r\n      if (state.eventPushResponse==null){\r\n        return <DialogContent >\r\n                    <div style={{display: 'flex', justifyContent:\"center\"}}>\r\n                    <CircularProgress style={{color: green[500]}}/>\r\n                    </div>\r\n                    <DialogContentText color=\"inherit\" align='center' gutterBottom>\r\n                      Идет отправка, подождите ответа от сервера...\r\n                    </DialogContentText>\r\n                  </DialogContent>\r\n      }\r\n      if (state.eventPushResponse!==null){\r\n        if (state.eventPushResponse.status=='ok'){\r\n          return <div>\r\n                      \r\n                      <DialogContent >\r\n                      <div style={{display: 'flex', justifyContent:\"center\"}}>\r\n                      <CloudDoneIcon style={{ color: green[500], fontSize: 40}}/>\r\n                      </div>\r\n                        <DialogContentText color=\"inherit\" align='center' gutterBottom>\r\n                          Данные о событии успешно добавлены!\r\n                        </DialogContentText>\r\n                      </DialogContent>\r\n                      <DialogActions> \r\n                        <Button onClick={()=>setState({...state, waitingDialogOpen:false})}>Закрыть</Button>\r\n                      </DialogActions>\r\n                 </div>\r\n        }\r\n        if (state.eventPushResponse.status!=='ok'){\r\n          return <div>\r\n                      \r\n                      <DialogContent>\r\n                      <div style={{display: 'flex', justifyContent:\"center\"}}>\r\n                      <CancelIcon style={{ color: red[500], fontSize: 40}}/>\r\n                      </div>\r\n                        <DialogContentText color=\"inherit\" align='center' gutterBottom>\r\n                          Ошибка при добавлении данных!\r\n                        </DialogContentText>\r\n                        <DialogContentText color=\"inherit\" align='center' gutterBottom>\r\n                          Log: {state.eventPushResponse.comment}\r\n                        </DialogContentText>\r\n                      </DialogContent>\r\n                      <DialogActions> \r\n                      <Button onClick={()=>setState({...state, waitingDialogOpen:false})}>Закрыть</Button>\r\n                      </DialogActions>\r\n                 </div>\r\n        }\r\n      }\r\n    }\r\n    if (state.firstDataGet==false){\r\n      if (props.mode=='old'){\r\n      console.log(props.eventId)\r\n            const list={}\r\n            const pl_id=props.placeId\r\n            console.log(pl_id)\r\n            TypesListGet().then(data=>list.types_list=data).then(ReasonsListGet().then(data=>list.reasons_list=(data))\r\n                                                      .then(CommonLinksListGet().then(data=>list.common_links_list=(data))\r\n                                                      .then(MediaLinksListGet().then(data=>list.media_links_list=(data))\r\n                                                      .then(StationListGet().then(data=>list.stations_list=(data))\r\n                                                      .then(DamagedZonesListGet().then(data=>list.damaged_zones_list=(data))\r\n                                                      .then(RasterDataListGet().then(data=>list.raster_data_list=(data))\r\n                                                      .then(VectorDataListGet().then(data=>list.vector_data_list=(data))\r\n                                                      .then(RemoteSensingDataListGet().then(data=>list.remote_sensing_data_list=(data))\r\n                                                      .then(MultimediaRecordsDataListGet().then(data=>list.multimedia_records_data_list=(data))\r\n                                                      .then(OldEventDataGet(props.eventId).then(data=>{console.log(data);list.event_info=(data)})\r\n\r\n                                                      .then(data=>{console.log(list);setState({...state, firstDataGet:true,\r\n                                                                                types_list:list.types_list,\r\n                                                                                reasons_list:list.reasons_list,\r\n                                                                                common_links_list:list.common_links_list,\r\n                                                                                media_links_list:list.media_links_list,\r\n                                                                                stations_list:list.stations_list,\r\n                                                                                damaged_zones_list:list.damaged_zones_list,\r\n                                                                                raster_data_list:list.raster_data_list,\r\n                                                                                vector_data_list:list.vector_data_list,\r\n                                                                                remote_sensing_data_list:list.remote_sensing_data_list,\r\n                                                                                multimedia_records_data_list:list.multimedia_records_data_list,\r\n                                                                                event_id:list.event_info.data.events[0].id,\r\n                                                                                name_rus:list.event_info.data.events[0].name_rus,\r\n                                                                                name_eng:list.event_info.data.events[0].name_eng,\r\n                                                                                place_id: pl_id,\r\n                                                                                type_id:list.event_info.data.events[0].type_id,\r\n                                                                                type:list.event_info.data.events[0].type,\r\n                                                                                reason_id:list.event_info.data.events[0].reason_id,\r\n                                                                                reason:list.event_info.data.events[0].reason,\r\n                                                                                cost_rub:list.event_info.data.events[0].cost_rub,\r\n                                                                                area_km:list.event_info.data.events[0].area_km,\r\n                                                                                max_depth:list.event_info.data.events[0].max_depth,\r\n                                                                                mean_depth:list.event_info.data.events[0].mean_depth,\r\n                                                                                max_speed:list.event_info.data.events[0].max_speed,\r\n                                                                                mean_speed:list.event_info.data.events[0].mean_speed,\r\n                                                                                event_start_date:moment(list.event_info.data.events[0].event_start_date, 'DDMMYYYYTHHmmss').format('YYYY/MM/DD HH:mm'),\r\n                                                                                event_end_date:moment(list.event_info.data.events[0].event_end_date, 'DDMMYYYYTHHmmss').format('YYYY/MM/DD HH:mm'),\r\n                                                                                observation_stations:list.event_info.data.events[0].observation_stations,\r\n                                                                                common_links:list.event_info.data.events[0].common_links,\r\n                                                                                media_links:list.event_info.data.events[0].media_links,\r\n                                                                                damaged_zones:list.event_info.data.events[0].damaged_zones,\r\n                                                                                raster_data:list.event_info.data.events[0].misc_raster_data,\r\n                                                                                vector_data:list.event_info.data.events[0].misc_vector_data,\r\n                                                                                remote_sensing_data:list.event_info.data.events[0].remote_sensing_data,\r\n                                                                                multimedia_records_data:list.event_info.data.events[0].multimedia_records,\r\n                                                                                description_eng:list.event_info.data.events[0].description_eng,\r\n                                                                                description_rus:list.event_info.data.events[0].description_rus,\r\n                                                                              })})\r\n                                                      .then(console.log(state)))))))))))) \r\n    }\r\n      if (props.mode=='new'){\r\n     \r\n            const list=[]\r\n            TypesListGet().then(data=>list.push(data)).then(ReasonsListGet().then(data=>list.push(data))\r\n                                                      .then(CommonLinksListGet().then(data=>list.push(data))\r\n                                                      .then(MediaLinksListGet().then(data=>list.push(data))\r\n                                                      .then(StationListGet().then(data=>list.push(data))\r\n                                                      .then(DamagedZonesListGet().then(data=>list.push(data))\r\n                                                      .then(RasterDataListGet().then(data=>list.push(data))\r\n                                                      .then(VectorDataListGet().then(data=>list.push(data))\r\n                                                      .then(RemoteSensingDataListGet().then(data=>list.push(data))\r\n                                                      .then(MultimediaRecordsDataListGet().then(data=>list.push(data))\r\n                                                      .then(data=>setState({...state, firstDataGet:true,\r\n                                                                                types_list:list[0],\r\n                                                                                reasons_list:list[1],\r\n                                                                                common_links_list:list[2],\r\n                                                                                media_links_list:list[3],\r\n                                                                                stations_list:list[4],\r\n                                                                                damaged_zones_list:list[5],\r\n                                                                                raster_data_list:list[6],\r\n                                                                                vector_data_list:list[7],\r\n                                                                                remote_sensing_data_list:list[8],\r\n                                                                                multimedia_records_data_list:list[9]}))\r\n                                                      .then(console.log(state)))))))))))\r\n               \r\n          }\r\n        }\r\n\r\n\r\n  const handleStartDateChange = date => {\r\n    setState({...state, event_start_date: date});\r\n  };\r\n  const handleEndDateChange = date => {\r\n    setState({...state, event_end_date: date});\r\n  };\r\n\r\n    const set_type=(event)=>{\r\n      const id=event.target.value\r\n      state.types_list.data.types.forEach(element=>{\r\n        if (id==element.id){\r\n          const type=element.type\r\n          setState({ ...state, type_id: event.target.value,\r\n                           type: type});\r\n        }}\r\n      )\r\n      \r\n  }\r\n    const set_reason=(event)=>{\r\n      const id=event.target.value\r\n      state.reasons_list.data.reasons.forEach(element=>{\r\n        if (id==element.id){\r\n          const reason=element.reason\r\n          setState({ ...state, reason_id: event.target.value,\r\n                           reason: reason});\r\n        }}\r\n      )\r\n      \r\n  }\r\n    const set_name_rus=(event)=>{\r\n      setState({ ...state, name_rus: event.target.value });\r\n  }\r\n    const set_description_rus=(event)=>{\r\n      setState({ ...state, description_rus: event.target.value });\r\n  }\r\n    const set_cost_rub=(event)=>{\r\n      setState({ ...state, cost_rub: event.target.value });\r\n  }\r\n    const set_area_km=(event)=>{\r\n      setState({ ...state, area_km: event.target.value });\r\n  }\r\n    const set_max_depth=(event)=>{\r\n      setState({ ...state, max_depth: event.target.value });\r\n  }\r\n    const set_mean_depth=(event)=>{\r\n      setState({ ...state, mean_depth: event.target.value });\r\n  }\r\n\r\n    const set_max_speed=(event)=>{\r\n      setState({ ...state, max_speed: event.target.value });\r\n  }\r\n    const set_mean_speed=(event)=>{\r\n      setState({ ...state, mean_speed: event.target.value });\r\n  }\r\n    const set_name_eng=(event)=>{\r\n      setState({ ...state, name_eng: event.target.value });\r\n  }\r\n    const set_description_eng=(event)=>{\r\n      setState({ ...state, description_eng: event.target.value });\r\n  }\r\n  \r\n    const returnDialogContent=()=>{\r\n      if (state.dialog_box_value=='common_links'){\r\n        return <AdminCommonLinksBlock login={props.login} password={props.password} closeDialog={(dataType)=>closeDialog(dataType)}/>\r\n      }\r\n      if (state.dialog_box_value=='media_links'){\r\n        return <AdminMediaLinksBlock login={props.login} password={props.password} closeDialog={(dataType)=>closeDialog(dataType)}/>\r\n      }\r\n      if (state.dialog_box_value=='damaged_zones'){\r\n        return <AdminDamagedZonesBlock login={props.login} password={props.password} closeDialog={(dataType)=>closeDialog(dataType)}/>\r\n      }\r\n      if (state.dialog_box_value=='raster_data'){\r\n        return <AdminRasterDataBlock login={props.login} password={props.password} closeDialog={(dataType)=>closeDialog(dataType)}/>\r\n      }\r\n      if (state.dialog_box_value=='vector_data'){\r\n        return <AdminVectorDataBlock login={props.login} password={props.password} closeDialog={(dataType)=>closeDialog(dataType)}/>\r\n      }\r\n      if (state.dialog_box_value=='remote_sensing_data'){\r\n        return <AdminRemoteSensingDataBlock login={props.login} password={props.password} closeDialog={(dataType)=>closeDialog(dataType)}/>\r\n      }\r\n      if (state.dialog_box_value=='multimedia_records_data'){\r\n        return <AdminMultimediaRecordsDataBlock login={props.login} password={props.password}closeDialog={(dataType)=>closeDialog(dataType)}/>\r\n      }\r\n    }\r\n    const openCommonLinksDialog=()=>{\r\n      setState({ ...state, openDialog: true,\r\n                           dialog_box_value: 'common_links'});\r\n    }\r\n    const openMediaLinksDialog=()=>{\r\n      setState({ ...state, openDialog: true,\r\n                           dialog_box_value: 'media_links'});\r\n    }\r\n    const openDamageZonesDialog=()=>{\r\n      setState({ ...state, openDialog: true,\r\n                           dialog_box_value: 'damaged_zones'});\r\n    }\r\n    const openRasterDataDialog=()=>{\r\n      setState({ ...state, openDialog: true,\r\n                           dialog_box_value: 'raster_data'});\r\n    }\r\n    const openVectorDataDialog=()=>{\r\n      setState({ ...state, openDialog: true,\r\n                           dialog_box_value: 'vector_data'});\r\n    }\r\n    const openRemoteSensingDataDialog=()=>{\r\n      setState({ ...state, openDialog: true,\r\n                           dialog_box_value: 'remote_sensing_data'});\r\n    }\r\n    const openMultimediaRecordsDataDialog=()=>{\r\n      setState({ ...state, openDialog: true,\r\n                           dialog_box_value: 'multimedia_records_data'});\r\n    }\r\n    const closeDialog=(dataType)=>{\r\n      if (dataType=='common_links_list'){\r\n\r\n        CommonLinksListGet().then(data=>setState({...state, common_links_list:data,\r\n                                                            openDialog: false}))\r\n      }\r\n      if (dataType=='media_links_list'){\r\n\r\n        MediaLinksListGet().then(data=>setState({...state, media_links_list:data,\r\n                                                            openDialog: false}))\r\n      }\r\n      if (dataType=='damaged_zones_list'){\r\n\r\n        DamagedZonesListGet().then(data=>setState({...state, damaged_zones_list:data,\r\n                                                            openDialog: false}))\r\n      }\r\n      if (dataType=='raster_data_list'){\r\n\r\n        RasterDataListGet().then(data=>setState({...state, raster_data_list:data,\r\n                                                            openDialog: false}))\r\n      }\r\n      if (dataType=='vector_data_list'){\r\n\r\n        VectorDataListGet().then(data=>setState({...state, vector_data_list:data,\r\n                                                            openDialog: false}))\r\n      }\r\n      if (dataType=='remote_sensing_data_list'){\r\n\r\n        RemoteSensingDataListGet().then(data=>setState({...state, remote_sensing_data_list:data,\r\n                                                            openDialog: false}))\r\n      }\r\n      if (dataType=='multimedia_records_data_list'){\r\n\r\n        MultimediaRecordsDataListGet().then(data=>setState({...state, multimedia_records_data_list:data,\r\n                                                            openDialog: false}))\r\n      }\r\n      else{\r\n        setState({ ...state, openDialog: false})\r\n      }\r\n    }\r\n\r\n    const setCommonLinks=(event,value)=>{\r\n        setState({ ...state, common_links:value})\r\n        console.log(state)\r\n    }\r\n    const setMediaLinks=(event,value)=>{\r\n        setState({ ...state, media_links:value})\r\n        console.log(state)\r\n    }\r\n    const setStationsList=(event,value)=>{\r\n        setState({ ...state, observation_stations:value})\r\n        console.log(state)\r\n    }\r\n    const setDamagedZones=(event,value)=>{\r\n        setState({ ...state, damaged_zones:value})\r\n        console.log(state)\r\n    }\r\n    const setRasterData=(event,value)=>{\r\n        setState({ ...state, raster_data:value})\r\n        console.log(state)\r\n    }\r\n    const setVectorData=(event,value)=>{\r\n        setState({ ...state, vector_data:value})\r\n        console.log(state)\r\n    }\r\n    const setRemoteSensingData=(event,value)=>{\r\n        setState({ ...state, remote_sensing_data:value})\r\n        console.log(state)\r\n    }\r\n    const setMultimediaRecordsData=(event,value)=>{\r\n        setState({ ...state, multimedia_records_data:value})\r\n        console.log(state)\r\n    }\r\nconst returnMenuItemsReason = () =>{\r\n    const list = []\r\n    if (state.reasons_list!=null&&state.reasons_list!==undefined){\r\n      const reasons_list= state.reasons_list.data.reasons      \r\n      for (let i=0; i<reasons_list.length; i++){\r\n              list.push(<MenuItem key={i} value={reasons_list[i].id}>{reasons_list[i].alias_rus}</MenuItem>)\r\n      \r\n      }\r\n  }\r\n    return list\r\n  }\r\n  const returnMenuItemsTypes = () =>{\r\n    const list = []\r\n    if (state.types_list!=null&&state.types_list!==undefined){\r\n      const types_list= state.types_list.data.types      \r\n      for (let i=0; i<types_list.length; i++){\r\n              list.push(<MenuItem key={i} value={types_list[i].id}>{types_list[i].alias_rus}</MenuItem>)\r\n      \r\n      }\r\n  }\r\n    return list\r\n  }\r\n  \r\n  const returnCommonLinksAutoc=()=>{\r\n    if (state.common_links_list!==null&&state.common_links_list!==undefined){\r\n        return (\r\n        <div className={classes.textfield3}>\r\n        <Typography align='center' gutterBottom>\r\n            Вспомогательные ссылки:\r\n         </Typography>\r\n          <Autocomplete            \r\n            defaultValue={state.common_links}\r\n            noOptionsText='Нет совпадений'\r\n            options={state.common_links_list.data.common_links}\r\n            getOptionLabel={option => option.name_rus}            \r\n            multiple\r\n            autoHighlight={true}\r\n            onChange={(event,value)=>setCommonLinks(event,value)}\r\n            renderInput={params => (\r\n              <TextField {...params} variant=\"standard\" fullWidth />\r\n            )}\r\n          />\r\n          <Typography align='center' style={{color: '#999999', fontSize:'small'}} gutterBottom>\r\n            Если необходимой ссылки нет в списке добавьте ее, заполнив форму, и после выберите из списка\r\n         </Typography>\r\n         <Button variant=\"contained\" color=\"primary\" size=\"small\" startIcon={<AddIcon />}\r\n                        onClick={()=>openCommonLinksDialog()} \r\n              >Добавить</Button> \r\n          </div>)\r\n    }\r\n    \r\n  }\r\n  const returnMediaLinksAutoc=()=>{\r\n    if (state.media_links_list!==null&&state.media_links_list!==undefined){\r\n        return (\r\n        <div className={classes.textfield3}>\r\n        <Typography align='center' gutterBottom>\r\n            Ссылки на новости:\r\n         </Typography>\r\n          <Autocomplete                       \r\n            defaultValue={state.media_links}\r\n            noOptionsText='Нет совпадений'\r\n            options={state.media_links_list.data.media_links}\r\n            getOptionLabel={option => option.name_rus}            \r\n            multiple\r\n            autoHighlight={true}\r\n            onChange={(event,value)=>setMediaLinks(event,value)}\r\n            renderInput={params => (\r\n              <TextField {...params} variant=\"standard\" fullWidth />\r\n            )}\r\n          />\r\n          <Typography align='center' style={{color: '#999999', fontSize:'small'}} gutterBottom>\r\n            Если необходимой ссылки нет в списке добавьте ее, заполнив форму, и после выберите из списка\r\n         </Typography>\r\n         <Button variant=\"contained\" color=\"primary\" size=\"small\" startIcon={<AddIcon />}\r\n                        onClick={()=>openMediaLinksDialog()} \r\n              >Добавить</Button> \r\n          </div>)\r\n    }\r\n    \r\n  }\r\n  const returnStationsAutoc=()=>{\r\n    if (state.stations_list!==null&&state.stations_list!==undefined){\r\n        return (\r\n        <div className={classes.textfield3}>\r\n        <Typography align='center' gutterBottom>\r\n            Станции наблюдения вблизи местa*\r\n         </Typography>\r\n     <Autocomplete  \r\n            defaultValue={state.observation_stations}                  \r\n            multiple\r\n            noOptionsText='Нет совпадений'\r\n            options={state.stations_list.data.stations}\r\n            getOptionLabel={option => option.id.toString()}\r\n            onChange={(event,value)=>setStationsList(event,value)}\r\n            renderInput={params => (\r\n              <TextField {...params} label='Id станции' variant=\"standard\" fullWidth />\r\n          )}\r\n          />\r\n          <Typography align='center' style={{color: '#999999', fontSize:'small'}} gutterBottom>\r\n            Список станций наблюдения доступен во вкладке \"Станции наблюдения\" основной страницы\r\n         </Typography> \r\n          </div>)\r\n    }\r\n    \r\n  }\r\n  const returnDamagedZonesAutoc=()=>{\r\n    if (state.damaged_zones_list!==null&&state.damaged_zones_list!==undefined){\r\n        return (\r\n        <div className={classes.textfield3}>\r\n        <Typography align='center' gutterBottom>\r\n            Поврежденные территории:\r\n         </Typography>\r\n          <Autocomplete                       \r\n            defaultValue={state.damaged_zones} \r\n            noOptionsText='Нет совпадений'\r\n            options={state.damaged_zones_list.data.damaged_zones}\r\n            getOptionLabel={option => option.description_rus}            \r\n            multiple\r\n            autoHighlight={true}\r\n            onChange={(event,value)=>setDamagedZones(event,value)}\r\n            renderInput={params => (\r\n              <TextField {...params} label='Описание зоны' variant=\"standard\" fullWidth />\r\n            )}\r\n          />\r\n          <Typography align='center' style={{color: '#999999', fontSize:'small'}} gutterBottom>\r\n            Если необходимой зоны нет в списке добавьте ее, заполнив форму, и после выберите из списка\r\n         </Typography>\r\n         <Button variant=\"contained\" color=\"primary\" size=\"small\" startIcon={<AddIcon />}\r\n                        onClick={()=>openDamageZonesDialog()} \r\n              >Добавить</Button> \r\n          </div>)\r\n    }\r\n    \r\n  }\r\n  const returnRasterDataAutoc=()=>{\r\n    if (state.raster_data_list!==null&&state.raster_data_list!==undefined){\r\n        return (\r\n        <div className={classes.textfield3}>\r\n        <Typography align='center' gutterBottom>\r\n            Растровые данные:\r\n         </Typography>\r\n          <Autocomplete                       \r\n            defaultValue={state.raster_data} \r\n            noOptionsText='Нет совпадений'\r\n            options={state.raster_data_list.data.misc_raster_data}\r\n            getOptionLabel={option => option.name_rus}            \r\n            multiple\r\n            autoHighlight={true}\r\n            onChange={(event,value)=>setRasterData(event,value)}\r\n            renderInput={params => (\r\n              <TextField {...params} label='Название изображения' variant=\"standard\" fullWidth />\r\n            )}\r\n          />\r\n          <Typography align='center' style={{color: '#999999', fontSize:'small'}} gutterBottom>\r\n            Если необходимого изображения нет в списке добавьте его, заполнив форму, и после выберите из списка\r\n         </Typography>\r\n         <Button variant=\"contained\" color=\"primary\" size=\"small\" startIcon={<AddIcon />}\r\n                        onClick={()=>openRasterDataDialog()} \r\n              >Добавить</Button> \r\n          </div>)\r\n    }\r\n    \r\n  }\r\n\r\n  const returnVectorDataAutoc=()=>{\r\n    if (state.vector_data_list!==null&&state.vector_data_list!==undefined){\r\n        return (\r\n        <div className={classes.textfield3}>\r\n        <Typography align='center' gutterBottom>\r\n            Векторные данные:\r\n         </Typography>\r\n          <Autocomplete                       \r\n            defaultValue={state.vector_data} \r\n            noOptionsText='Нет совпадений'\r\n            options={state.vector_data_list.data.misc_vector_data}\r\n            getOptionLabel={option => option.name_rus}            \r\n            multiple\r\n            autoHighlight={true}\r\n            onChange={(event,value)=>setVectorData(event,value)}\r\n            renderInput={params => (\r\n              <TextField {...params} label='Название векторного слоя' variant=\"standard\" fullWidth />\r\n            )}\r\n          />\r\n          <Typography align='center' style={{color: '#999999', fontSize:'small'}} gutterBottom>\r\n            Если необходимого векторного слоя нет в списке добавьте его, заполнив форму, и после выберите из списка\r\n         </Typography>\r\n         <Button variant=\"contained\" color=\"primary\" size=\"small\" startIcon={<AddIcon />}\r\n                        onClick={()=>openVectorDataDialog()} \r\n              >Добавить</Button> \r\n          </div>)\r\n    }\r\n    \r\n  }\r\n\r\n  const returnRemoteSensingDataAutoc=()=>{\r\n    if (state.remote_sensing_data_list!==null&&state.remote_sensing_data_list!==undefined){\r\n        return (\r\n        <div className={classes.textfield3}>\r\n        <Typography align='center' gutterBottom>\r\n            Данные дистанционного зондирования:\r\n         </Typography>\r\n          <Autocomplete                       \r\n            defaultValue={state.remote_sensing_data} \r\n            noOptionsText='Нет совпадений'\r\n            options={state.remote_sensing_data_list.data.remote_sensing_data}\r\n            getOptionLabel={option => option.description_rus}            \r\n            multiple\r\n            autoHighlight={true}\r\n            onChange={(event,value)=>setRemoteSensingData(event,value)}\r\n            renderInput={params => (\r\n              <TextField {...params} label='Описание снимка' variant=\"standard\" fullWidth />\r\n            )}\r\n          />\r\n          <Typography align='center' style={{color: '#999999', fontSize:'small'}} gutterBottom>\r\n            Если необходимого снимка нет в списке добавьте его, заполнив форму, и после выберите из списка\r\n         </Typography>\r\n         <Button variant=\"contained\" color=\"primary\" size=\"small\" startIcon={<AddIcon />}\r\n                        onClick={()=>openRemoteSensingDataDialog()} \r\n              >Добавить</Button> \r\n          </div>)\r\n    }\r\n    \r\n  }\r\n\r\n  const returnMultimediaRecordsDataAutoc=()=>{\r\n    if (state.multimedia_records_data_list!==null&&state.multimedia_records_data_list!==undefined){\r\n        return (\r\n        <div className={classes.textfield3}>\r\n        <Typography align='center' gutterBottom>\r\n            Мультимедийные элементы:\r\n         </Typography>\r\n          <Autocomplete                       \r\n            defaultValue={state.multimedia_records_data} \r\n            noOptionsText='Нет совпадений'\r\n            options={state.multimedia_records_data_list.data.multimedia_records}\r\n            getOptionLabel={option => option.name_rus}            \r\n            multiple\r\n            autoHighlight={true}\r\n            onChange={(event,value)=>setMultimediaRecordsData(event,value)}\r\n            renderInput={params => (\r\n              <TextField {...params} label='Название файла' variant=\"standard\" fullWidth />\r\n            )}\r\n          />\r\n          <Typography align='center' style={{color: '#999999', fontSize:'small'}} gutterBottom>\r\n            Если необходимого элемента нет в списке добавьте его, заполнив форму, и после выберите из списка\r\n         </Typography>\r\n         <Button variant=\"contained\" color=\"primary\" size=\"small\" startIcon={<AddIcon />}\r\n                        onClick={()=>openMultimediaRecordsDataDialog()} \r\n              >Добавить</Button> \r\n          </div>)\r\n    }\r\n    \r\n  }\r\n  return (\r\n    <Paper className={classes.root} >\r\n    \r\n    \r\n    <Typography style={{width:\"70%\", float: 'left'}} align='center' gutterBottom>\r\n            Чтобы добавить информацию о новом собылии, в пункте {props.placeName} заполните все обязательные (*) поля\r\n     </Typography>\r\n     <Button variant=\"outlined\"  size=\"small\"  onClick={()=>props.setNullChoise()}  style={{width:\"20%\", float: 'right'}}                 \r\n     >Вернуться </Button>\r\n     <div className={classes.empStr}></div> \r\n    <form className=\"uploader\" encType=\"multipart/form-data\">\r\n          <TextField className={classes.textfield} id=\"name_rus\" onChange={(event)=>set_name_rus(event)} value={state.name_rus} label=\"Название события (рус.)*\" />\r\n          <TextField className={classes.textfieldLg} id=\"description_rus\" onChange={(event)=>set_description_rus(event)} value={state.description_rus} label=\"Описание события (рус.)*\" />          \r\n          <TextField className={classes.textfield} id=\"name_eng\" onChange={(event)=>set_name_eng(event)} value={state.name_eng} label=\"Название события (англ.)*\" />\r\n          <TextField className={classes.textfieldLg} id=\"description_eng\" onChange={(event)=>set_description_eng(event)} value={state.description_eng} label=\"Описание события (англ.)*\" />\r\n          <div className={classes.empStr}></div> \r\n          <Divider /> \r\n\r\n          <div className={classes.textfield2}>\r\n          <InputLabel>Тип события*</InputLabel>\r\n            <Select \r\n              style={{width:'100%'}}\r\n              value={state.type_id}\r\n              onChange={(event)=>set_type(event)}>\r\n              {returnMenuItemsTypes()}\r\n            </Select> \r\n          <Typography align='center' style={{color: '#999999', fontSize:'small'}} gutterBottom>\r\n            Если необходимого типа нет в списке, добавить его можно во вкладке \"Типы/причины событий\" основной страницы\r\n         </Typography>  \r\n          </div>\r\n\r\n          <div className={classes.textfield2}> \r\n          <InputLabel>Причина события*</InputLabel>\r\n            <Select \r\n              style={{width:'100%'}}            \r\n              value={state.reason_id}\r\n              onChange={(event)=>set_reason(event)}>\r\n              {returnMenuItemsReason()}\r\n            </Select>\r\n          <Typography align='center' style={{color: '#999999', fontSize:'small'}} gutterBottom>\r\n            Если необходимой причины нет в списке, добавить ее можно во вкладке \"Типы/причины событий\" основной страницы\r\n         </Typography>\r\n          </div>\r\n          <div className={classes.textfield}></div>\r\n          <Divider />\r\n          <TextField className={classes.textfield} id=\"cost_rub\" onChange={(event)=>set_cost_rub(event)} value={state.cost_rub} label=\"Ущерб (руб.)*\" type=\"number\"/>\r\n          <TextField className={classes.textfield} id=\"area_km\" onChange={(event)=>set_area_km(event)} value={state.area_km} label=\"Затронутая территория (км)*\" type=\"number\"/>\r\n          <TextField className={classes.textfield} id=\"max_speed\" onChange={(event)=>set_max_speed(event)} value={state.max_speed} label=\"Максимальная скорость*\" type=\"number\" />\r\n          <TextField className={classes.textfield} id=\"mean_speed\" onChange={(event)=>set_mean_speed(event)} value={state.mean_speed} label=\"Средняя скорость*\" type=\"number\" />\r\n          <TextField className={classes.textfield} id=\"max_depth\" onChange={(event)=>set_max_depth(event)} value={state.max_depth} label=\"Максимальная глубина*\" type=\"number\"/>\r\n          <TextField className={classes.textfield} id=\"mean_depth\" onChange={(event)=>set_mean_depth(event)} value={state.mean_depth} label=\"Средняя глубина*\" type=\"number\"/>\r\n          <div className={classes.textfield}></div>\r\n          <div className={classes.empStr}></div>\r\n          <Divider />\r\n          \r\n          <MuiPickersUtilsProvider utils={DateFnsUtils} >\r\n              <div className={classes.textfield2}>\r\n                    <KeyboardDateTimePicker\r\n                  autoOk\r\n                  ampm={false}\r\n                  disableFuture\r\n                  value={state.event_start_date}\r\n                  onChange={handleStartDateChange}\r\n                  label=\"Дата и время начала события*\"\r\n                  format=\"yyyy/MM/dd HH:mm\"\r\n                />\r\n                 </div>\r\n\r\n          </MuiPickersUtilsProvider>          \r\n          <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n                \r\n              <div className={classes.textfield2}>\r\n                    <KeyboardDateTimePicker\r\n                  autoOk\r\n                  ampm={false}\r\n                  disableFuture\r\n                  value={state.event_end_date}\r\n                  onChange={handleEndDateChange}\r\n                  label=\"Дата и время окончания события*\"\r\n                  format=\"yyyy/MM/dd HH:mm\"\r\n                />\r\n                 </div>             \r\n          </MuiPickersUtilsProvider>\r\n\r\n          <div className={classes.empStr}></div>\r\n          <Divider />\r\n\r\n          {returnStationsAutoc()}\r\n\r\n          <div className={classes.empStr}></div>\r\n          <Divider />\r\n          \r\n          {returnCommonLinksAutoc ()}\r\n          {returnMediaLinksAutoc ()}\r\n          \r\n          <Dialog\r\n                  open={state.openDialog}\r\n                  onClose={()=>closeDialog('empty')}>\r\n                  <DialogContent>\r\n                    <DialogContentText color=\"inherit\" align='center' gutterBottom>\r\n                      Заполните данные\r\n                    </DialogContentText>\r\n                  </DialogContent>\r\n                  <DialogActions>\r\n\r\n                    {returnDialogContent()}\r\n                    \r\n                  </DialogActions>\r\n             </Dialog>\r\n\r\n          <div className={classes.empStr}></div>\r\n          <Divider />\r\n          \r\n          {returnDamagedZonesAutoc()}\r\n          {returnRasterDataAutoc()}\r\n\r\n          <div className={classes.empStr}></div>\r\n          <Divider />\r\n\r\n          {returnVectorDataAutoc()}\r\n          {returnRemoteSensingDataAutoc()}\r\n\r\n          <div className={classes.empStr}></div>\r\n          <Divider />\r\n\r\n          {returnMultimediaRecordsDataAutoc()}\r\n\r\n          <div className={classes.empStr}></div>\r\n          \r\n          {returnFilledFieldsError()}\r\n          <div className={classes.fullwidth}>\r\n\r\n          <Button variant=\"contained\" color=\"secondary\" size=\"large\" endIcon={<CloudUploadIcon />} onClick={()=>sendEventData()} \r\n          >Отправить форму</Button> \r\n              <Dialog open={state.waitingDialogOpen}>\r\n                  {returnServerResponse()}\r\n              </Dialog>\r\n          </div>\r\n    </form>\r\n    </Paper>\r\n  );\r\n}\r\n\r\n\r\n","import React, {Component} from 'react';\nimport Button from '@material-ui/core/Button';\nimport Paper from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport MUIDataTable from \"mui-datatables\";\nimport { createMuiTheme, MuiThemeProvider } from '@material-ui/core/styles';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport { green } from '@material-ui/core/colors';\n\nimport {placesListGet} from './request_functions.js'\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    margin: '3vh 2%',\n    padding: '1%',\n    height: '90vh',\n    maxHeight: '90vh',\n    overflow: 'auto',\n    width: '94%',\n  },\n  table1:{\n  \twidth: '100%', \n  \t\n  \toverflow: 'auto', \n  },\n\n}\n));\n\n\nconst columns = [\n  {\n  name: \"id\",\n  label: \"ID\",\n  options: {\n   filter: false,\n\n  }\n },\n {\n  name: \"name_rus\",\n  label: \"Название\",\n  options: {\n   filter: true,\n\n  }\n },\n {\n  name: \"description_rus\",\n  label: \"Описание\",\n  options: {\n   filter: false,\n\n  }\n },\n {\n  name: \"point_geom\",\n  label: \"Координаты\",\n  options: {\n   filter: false,\n\n  }\n },\n \n];\n\n\nexport default function AdminPlacesTable(props){\n\tconst classes = useStyles();\n\tconst [state, setState] = React.useState({\n      \n      placesData: null,\n      firstDataGet: false, \n      condition: 'waiting'\n      \n      });\nconst data = ()=>{\n\tif (state.placesData!==null){\n\t\tvar list = []\n\t\tstate.placesData.data.places.map((places) =>{\n       \tlist.push(places)            \n    })\n  console.log(list)\n  return list\n\t}\n}\nconst setPlace=(event)=>{\n\tvar placeName=event[1]\n\tvar placeId=event[0]\n  \n  if (props.mode=='old'){\n    console.log('++++++++++=++++++++++')\n    props.setPlaceForOldEvent(placeName, placeId)\n  }\n  else{\n    props.setPlaceForEvent(placeName, placeId)\n  }\n\t\n\n}\nconst options = {\n  filterType: 'dropdown',\n  download: false,\n  print: false,\n  search: true,\n  responsive: 'scrollMaxHeight',\n  selectableRowsHeader: false,\n  selectableRows: 'none',\n  pagination:false,\n  onRowClick: (event)=>setPlace(event),  \n  textLabels: {\n    body: {\n      noMatch: \"Совпадения не найдены\",\n    }},\n  fixedHeader: true\n};\t\t\n\tif (state.firstDataGet==false){\n\t\t\t\tif (state.placesData == null){\n        setState({ ...state, condition: 'waiting'});\n\t\t\t\tplacesListGet().then(data=>setState({ ...state, placesData: data,\n                                                        condition: 'table'}))\t\t\n\t\t\t}\n\t\t\t\n\n\t\t\tsetState({ ...state, firstDataGet: true})\n\t\t}\n\t\n\t\t\n\t  if (state.condition=='table'){\n\t\t  return (\t\t\t\t  \n\t\t\t\t    <MuiThemeProvider >\n\t\t\t\t        <MUIDataTable \n\t\t\t\t          title= 'Доступные для выбора места'\n\t\t\t\t          data={data()}\n\t\t\t\t          columns={columns}\n\t\t\t\t          options={options}\n\n\t\t\t\t        />\n\t\t\t\t    </MuiThemeProvider>\n        \t\t  \t\t    \n      );\n    }\n    if (state.condition=='waiting'){\n      return (\n            <div>\n            <div style={{display: 'flex', justifyContent:\"center\", margin: '30% 0 0'}}>\n              <CircularProgress style={{color: green[500]}}/>\n            </div>\n            <Typography color=\"inherit\" align='center' gutterBottom>\n                      Загрузка данных...\n            </Typography>\n            </div>\n        )\n    }\n}\n\t\t\n\t\n\n\n","import React, {Component} from 'react';\nimport Button from '@material-ui/core/Button';\nimport Paper from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Icon from '@material-ui/core/Icon';\nimport SendIcon from '@material-ui/icons/Send';\nimport TextField from '@material-ui/core/TextField';\n\nimport {postNewPlace} from './request_functions.js'\n\nconst useStyles = makeStyles(theme => ({\n  box: {\n\n    width: '100%',\n    \n  },\n  margin: {\n    margin: '0 0 0 0',\n    fontSize: 11,\n    \n  },\n  textfield: {\n    width: '100%'\n    \n  },\n  textfield2: {\n    width: '100%', \n    height: '5vh',\n  },\n\n}));\n\n\n\nexport default function AdminPlacesBlock(props){\n\tconst classes = useStyles();\n\tconst [state, setState] = React.useState({\n      name_rus:'',\n      name_eng:'',\n      description_rus:'',\n      description_eng:'',\n      point_geom:'',\n      polygon_geom:'',      \n\n      FileName:' ',\n      point_geom_str:'',  \n      });\n\n\n  const placeDataJson=()=>{\n    const formData = new FormData();\n    formData.append('name_rus', state.name_rus);\n    formData.append('name_eng', state.name_eng);\n    formData.append('description_rus', state.description_rus);\n    formData.append('description_eng', state.description_eng);\n    formData.append('point_geom', state.point_geom);\n    formData.append('polygon_geom', state.polygon_geom);\n\n    return formData\n  }\n  \n  const set_name_rus=(event)=>{\n      setState({ ...state, name_rus: event.target.value});\n\n}\n  const set_name_eng=(event)=>{\n      setState({ ...state, name_eng: event.target.value});\n\n}\n  const set_description_rus=(event)=>{\n      setState({ ...state, description_rus: event.target.value});\n\n}\n  const set_description_eng=(event)=>{\n      setState({ ...state, description_eng: event.target.value});\n\n}\n\n\nconst set_point_geom=(event)=>{\n      const string=event.target.value;      \n      setState({ ...state, point_geom_str: string});\n      const coordList=string.split(',')\n      console.log(coordList)\n      if (coordList[0]!==undefined &&coordList[1]!==undefined&&coordList[0]!=='' &&coordList[1]!==''){      \n      const pointWKT='POINT('+coordList[1]+' '+coordList[0]+')'\n      console.log(pointWKT)\n      setState({ ...state, point_geom: pointWKT,\n                           point_geom_str: string })\n      }\n      if (coordList[0]==undefined||coordList[1]==undefined||coordList[0]==''||coordList[1]==''){\n        setState({ ...state, point_geom: '',\n                             point_geom_str: string })\n      }                     \n\n}\n  const set_polygon_geom=(file)=>{\n    setState({...state, polygon_geom: file,\n                        FileName:file.name});\n  }\n\n\nconst pushNewPlaceData=()=>{\n  \n  const form=placeDataJson()\n  console.log(form)\n  if(state.name_rus!==''&&state.name_eng!==''&&state.description_rus!==''&&state.description_eng!==''&&state.point_geom!==''&&state.polygon_geom!==''){\n    postNewPlace(form, props.login, props.password).then(data=>{console.log(data);props.closeAddPlaceDialog()})\n  }\n}\n\n  return (\n    <div className={classes.box}>\n      <TextField className={classes.textfield} value={state.name_rus} onChange={(event)=>set_name_rus(event)}  id=\"name_rus\" label=\"Название (рус)\"/>\n      <TextField className={classes.textfield} value={state.name_eng} onChange={(event)=>set_name_eng(event)}  id=\"name_eng\" label=\"Название (англ)\"/>\n      <TextField className={classes.textfield} value={state.description_rus} onChange={(event)=>set_description_rus(event)}  id=\"description_rus\" label=\"Описание (рус)\"/>\n      <TextField className={classes.textfield} value={state.description_eng} onChange={(event)=>set_description_eng(event)}  id=\"description_eng\" label=\"Описание (англ)\"/>\n      <TextField className={classes.textfield} value={state.point_geom_str} onChange={(event)=>set_point_geom(event)}  id=\"point_geom\" label=\"Координаты (широта, долгота - разделитель - ,)\"/>              \n\n              <Button\n                      variant=\"outlined\"\n                      component=\"label\"\n                      size=\"small\"\n                      style={{ width: \"30%\", margin:'1% 0 0 0'  }}\n                    >\n                    Выберите файл\n                    <input type=\"file\" style={{ display: \"none\" }} onChange={(e)=>set_polygon_geom(e.target.files[0])}/>\n                   </Button> \n                   <TextField style={{ width: \"68%\", margin: '0 0 0 2%'}} value={state.FileName} label=\"Полигон места .geojson\"/> \n\n              <Button variant=\"contained\" color=\"primary\" size=\"small\" startIcon={<SendIcon />} style={{float: 'right'}}\n                                    onClick={()=>pushNewPlaceData()}>Добавить</Button>\n\n\n    \n    </div>\n  )\n}","import React, {Component} from 'react';\nimport Button from '@material-ui/core/Button';\nimport Paper from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport MUIDataTable from \"mui-datatables\";\nimport { createMuiTheme, MuiThemeProvider } from '@material-ui/core/styles';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport { green } from '@material-ui/core/colors';\n\nimport {EventsForPlaceGet} from './request_functions.js'\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    margin: '3vh 2%',\n    padding: '1%',\n    height: '90vh',\n    maxHeight: '90vh',\n    overflow: 'auto',\n    width: '94%',\n  },\n  table1:{\n  \twidth: '100%', \n  \t\n  \toverflow: 'auto', \n  },\n\n}\n));\n\nconst columns = [\n  {\n  name: \"id\",\n  label: \"ID\",\n  options: {\n   filter: false,\n\n  }\n },\n {\n  name: \"name_rus\",\n  label: \"Название\",\n  options: {\n   filter: false,\n\n  }\n },\n {\n  name: \"description_rus\",\n  label: \"Описание\",\n  options: {\n   filter: false,\n\n  }\n },\n {\n  name: \"reason\",\n  label: \"Причина\",\n  options: {\n   filter: true,\n\n  }},\n  {\n  name: \"type\",\n  label: \"Тип\",\n  options: {\n   filter: false,\n\n  }},\n  {\n  name: \"cost_rub\",\n  label: \"Ущерб(руб.)\",\n  options: {\n   filter: false,\n\n  }},\n  {\n  name: \"area_km\",\n  label: \"Поврежденная территория, км\",\n  options: {\n   filter: false,\n\n  },\n },\n \n];\n\nexport default function AdminEventsTableForPlace(props){\n\tconst classes = useStyles();\n\tconst [state, setState] = React.useState({\n      \n      eventsData: null,\n      firstDataGet: false, \n      condition: 'waiting'\n      \n      });\n\nconst data = ()=>{\n\tif (state.eventsData!==null&&state.eventsData!==undefined){\n\t\tvar list = []\n\t\tstate.eventsData.data.events.map((events) =>{\n       \tlist.push(events)            \n    })\n  return list\n\t}\n}\n\nconst setEventId=(event)=>{\n\tvar eventName=event[1]\n\tvar eventId=event[0]\n  props.setIdForOldEvent(eventName, eventId)\n}\n\nconst options = {\n  filterType: 'dropdown',\n  download: false,\n  print: false,\n  search: true,\n  responsive: 'scrollMaxHeight',\n  selectableRowsHeader: false,\n  selectableRows: 'none',\n  pagination:false,\n  onRowClick: (event)=>setEventId(event),  \n  textLabels: {\n    body: {\n      noMatch: \"Совпадения не найдены\",\n    }},\n  fixedHeader: true\n};\t\n\n\n\tif (state.firstDataGet==false){\n\t\t\t\tif (state.eventsData == null){\n        console.log(props.placeId)\n        setState({ ...state, condition: 'waiting'});\n\t\t\t\tEventsForPlaceGet(props.placeId).then(data=>setState({ ...state, eventsData: data,\n                                                                         condition: 'table'}))\t\t\n\t\t\t}\t\t\t\n\n\t\t\tsetState({ ...state, firstDataGet: true})\n\t\t}\n\t\n\t\t\n\tif (state.condition=='table'){\n\t\t  return (\t\t\t\t  \n\t\t\t\t    <MuiThemeProvider >\n\t\t\t\t        <MUIDataTable \n\t\t\t\t          title= 'Доступные для выбора события'\n\t\t\t\t          data={data()}\n\t\t\t\t          columns={columns}\n\t\t\t\t          options={options}\n\n\t\t\t\t        />\n\t\t\t\t    </MuiThemeProvider>\t\t\t\t    \n              );\n  }\n  if (state.condition=='waiting'){\n      return (\n            <div>\n            <div style={{display: 'flex', justifyContent:\"center\", margin: '30% 0 0'}}>\n              <CircularProgress style={{color: green[500]}}/>\n            </div>\n            <Typography color=\"inherit\" align='center' gutterBottom>\n                      Загрузка данных...\n            </Typography>\n            </div>\n        )\n    }\n}\n\t\t\n\t\n\n\n","import React, {Component} from 'react';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport AdminPlacesTable from './AdminPlacesTable.js'\nimport AdminPlacesBlock from './AdminPlacesBlock.js'\nimport AdminEventsTableForPlace from './AdminEventsTableForPlace.js'\n\nexport default function AdminEventDialog(props) {\n    const [state, setState] = React.useState({\n      open: false,\n      placeDialog: false,\n      placeName: null,\n\n      mode: 'new',\n\n      eventDialog:false,\n\n      addPlaceDialog:false,\n\n      });\n\n\n\n  const handleClickOpen = () => {\n    setState({ ...state, open: true });\n  };\n\n  const handleClose = () => {\n    setState({ ...state, open: false });\n  };\n\n  const dialogOpen = () => {\n    setState({ ...state,  mode: 'new',\n                          placeDialog: true });\n  };\n\n  const dialogClose = () => {\n    setState({ ...state, placeDialog: false });\n  };\n\n  const closeAddPlaceDialog = () => {\n    setState({ ...state, addPlaceDialog: false,\n                         placeDialog: false});\n  };\n  const setPlaceForOldEvent=(placeName, placeId)=>{\n    console.log(placeId)\n    props.setPlaceForOldEvent(placeName,placeId);\n    setState({...state, eventDialog:true})\n  }\n  const eventDialogClose=()=>{\n    setState({ ...state, eventDialog: false });\n  }\n  const setOldMode=()=>{\n    setState({...state, mode:'old',\n                        placeDialog: true});\n\n    console.log(state)\n  }\n  return (\n    <div>\n      <Button color=\"secondary\" variant=\"outlined\" size=\"small\" onClick={handleClickOpen}>События</Button>\n      <Dialog\n        open={state.open}\n        onClose={handleClose}>\n        <DialogContent>\n          <DialogContentText color=\"inherit\" align='center' gutterBottom>\n            Выберите действие:\n          </DialogContentText>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={dialogOpen} color=\"primary\" autoFocus>\n            Создать новое событие\n          </Button>\n\n        <Dialog\n                  open={state.placeDialog}\n                  onClose={()=>dialogClose()}>\n            <DialogContent>\n                    <DialogContentText color=\"inherit\" align='center' gutterBottom>\n                      Выберите место события из таблицы\n                    </DialogContentText>\n                    <AdminPlacesTable setPlaceForEvent={(placeName, placeId)=>props.setPlaceForEvent(placeName, placeId)}                                      \n                                      setPlaceForOldEvent= {(placeName, placeId)=>setPlaceForOldEvent(placeName, placeId)} mode={state.mode}/>\n            </DialogContent>\n            <DialogActions>\n                    <Button onClick={()=>setState({...state, addPlaceDialog:true })} color=\"primary\" autoFocus>\n                      Места нет в списке - создать новую запись\n                    </Button>\n            </DialogActions>\n        </Dialog>\n        <Dialog\n                  open={state.addPlaceDialog}\n                  onClose={()=>closeAddPlaceDialog()}>\n            <DialogContent>\n                    <DialogContentText color=\"inherit\" align='center' gutterBottom>\n                      Добавьте данные о месте\n                    </DialogContentText>\n                    <AdminPlacesBlock login={props.login} password={props.password} closeAddPlaceDialog={()=>closeAddPlaceDialog()}/>\n            </DialogContent>\n\n        </Dialog>\n\n        <Dialog\n                  open={state.eventDialog}\n                  fullWidth={true}\n                  maxWidth='lg'\n                  onClose={()=>eventDialogClose()}>\n            <DialogContent>\n                    <DialogContentText color=\"inherit\" align='center' gutterBottom>\n                      Выберите событие из таблицы\n                    </DialogContentText>\n                    <AdminEventsTableForPlace setIdForOldEvent={(eventName, eventId)=>props.setIdForOldEvent(eventName, eventId)} placeId={props.placeId}/>\n            </DialogContent>\n        </Dialog>\n\n\n\n\n          <Button onClick={()=>setOldMode()} color=\"primary\" >\n            Редактировать событие\n          </Button>\n\n\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n}","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport SendIcon from '@material-ui/icons/Send';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  box: {\r\n\r\n\r\n  },\r\n  margin: {\r\n    margin: '0 0 0 0',\r\n    fontSize: 11,\r\n    \r\n  },\r\n  textfield: {\r\n    width: '100%'\r\n    \r\n  },\r\n  textfield2: {\r\n    width: '100%', \r\n    height: '5vh',\r\n  },\r\n\r\n}));\r\n\r\nexport default function AdminReasonBlock(props) {\r\n  const classes = useStyles();\r\n  \r\n  const [state, setState] = React.useState({\r\n      \r\n      descEng: null,\r\n      descRus: null,\r\n      nameEng: null,\r\n      nameRus: null,\r\n      reason:null\r\n      });\r\n\r\n  const setDescEng=(event)=>{\r\n      setState({ ...state, descEng: event.target.value });\r\n  }\r\n  const setDescRus=(event)=>{\r\n      setState({ ...state, descRus: event.target.value });\r\n  }\r\n  const setNameEng=(event)=>{\r\n      setState({ ...state, nameEng: event.target.value });\r\n  }\r\n  const setNameRus=(event)=>{\r\n      setState({ ...state, nameRus: event.target.value });\r\n      \r\n  }\r\n  const setReason=(event)=>{\r\n      setState({ ...state, reason: event.target.value });\r\n      \r\n  }\r\n  const reasonJson=[{\r\n                     \"description_eng\": state.descEng,\r\n                     \"description_rus\": state.descRus,\r\n                     \"alias_eng\": state.nameEng, \r\n                     \"alias_rus\": state.nameRus,\r\n                     \"reason\":state.reason\r\n  }]\r\n\r\n  return (\r\n    <div className={classes.box}>\r\n      <TextField className={classes.textfield} value={state.nameRus} id=\"nameRus\" label=\"Название на русском\" onChange={(event)=>setNameRus(event)}/>\r\n      <TextField className={classes.textfield} value={state.nameEng} id=\"nameEng\" label=\"Название на английском\" onChange={(event)=>setNameEng(event)}/>\r\n      <TextField className={classes.textfield} value={state.descRus} id=\"descRus\" label=\"Описание на русском\" onChange={(event)=>setDescRus(event)}/>\r\n      <TextField className={classes.textfield} value={state.descEng} id=\"descEng\" label=\"Описание на английском\" onChange={(event)=>setDescEng(event)}/>\r\n      \r\n      \r\n      \r\n      <TextField className={classes.textfield} value={state.reason} id=\"reason\" label=\"Причина\" onChange={(event)=>setReason(event)}/>\r\n      <div style={{height: \"5vh\"}}></div>\r\n      <Button variant=\"contained\" color=\"primary\" size=\"small\" startIcon={<SendIcon />} style={{float: 'right'}}\r\n              onClick={()=>props.addNewReason(reasonJson)} \r\n      >Добавить</Button>     \r\n    </div>\r\n      )\r\n    }","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport SendIcon from '@material-ui/icons/Send';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  box: {\r\n    \r\n\r\n    \r\n  },\r\n  margin: {\r\n    margin: '0 0 0 0',\r\n    fontSize: 11,\r\n    \r\n  },\r\n  textfield: {\r\n    width: '100%'\r\n    \r\n  },\r\n  textfield2: {\r\n    width: '100%', \r\n    height: '5vh',\r\n  },\r\n\r\n}));\r\n\r\nexport default function AdminReasonBlock(props) {\r\n  const classes = useStyles();\r\n  \r\n  const [state, setState] = React.useState({\r\n      \r\n      descEng: null,\r\n      descRus: null,\r\n      nameEng: null,\r\n      nameRus: null,\r\n      type:null,\r\n      leafletSt: '{\"color\": \"#ff7800\", \"opacity\": 0.65}',\r\n      });\r\n\r\n  const setDescEng=(event)=>{\r\n      setState({ ...state, descEng: event.target.value });\r\n  }\r\n  const setDescRus=(event)=>{\r\n      setState({ ...state, descRus: event.target.value });\r\n  }\r\n  const setNameEng=(event)=>{\r\n      setState({ ...state, nameEng: event.target.value });\r\n  }\r\n  const setNameRus=(event)=>{\r\n      setState({ ...state, nameRus: event.target.value });\r\n      \r\n  }\r\n  const setType=(event)=>{\r\n      setState({ ...state, type: event.target.value });\r\n      \r\n  }\r\n  const setLeafletSt=(event)=>{\r\n      setState({ ...state, leafletSt: event.target.value });\r\n      \r\n  }\r\n  const typeJson=[{\r\n                     \"description_eng\": state.descEng,\r\n                     \"description_rus\": state.descRus,\r\n                     \"alias_eng\": state.nameEng, \r\n                     \"alias_rus\": state.nameRus,\r\n                     \"type\":state.type,\r\n                     \"leaflet_style\": JSON.stringify(JSON.parse(state.leafletSt))\r\n  }]\r\n\r\n  return (\r\n    <div className={classes.box}>\r\n      <TextField className={classes.textfield} value={state.nameRus} id=\"nameRus\" label=\"Название на русском\" onChange={(event)=>setNameRus(event)}/>\r\n      <TextField className={classes.textfield} value={state.nameEng} id=\"nameEng\" label=\"Название на английском\" onChange={(event)=>setNameEng(event)}/>\r\n      <TextField className={classes.textfield} value={state.descRus} id=\"descRus\" label=\"Описание на русском\" onChange={(event)=>setDescRus(event)}/>\r\n      <TextField className={classes.textfield} value={state.descEng} id=\"descEng\" label=\"Описание на английском\" onChange={(event)=>setDescEng(event)}/>\r\n           \r\n      \r\n      <TextField className={classes.textfield} value={state.type} id=\"type\" label=\"Тип\" onChange={(event)=>setType(event)}/>\r\n      <TextField className={classes.textfield} value={state.leafletSt} id=\"nameRus\" label=\"Leaflet-style\" onChange={(event)=>setLeafletSt(event)}/>\r\n      <div style={{height: \"5vh\"}}></div>\r\n      <Button variant=\"contained\" color=\"primary\" size=\"small\" startIcon={<SendIcon />} style={{float: 'right'}}\r\n              onClick={()=>props.addNewType(typeJson)} \r\n      >Добавить</Button>     \r\n    </div>\r\n      )\r\n    }","import React, {Component} from 'react';\nimport Button from '@material-ui/core/Button';\nimport Paper from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Icon from '@material-ui/core/Icon';\nimport AddIcon from '@material-ui/icons/Add';\nimport AdminReasonBlock from \"./AdminReasonBlock.js\"\nimport AdminTypeBlock from \"./AdminTypeBlock.js\"\n\nimport {postNewReason, postNewType, TypesListGet, ReasonsListGet} from './request_functions.js'\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    margin: '3vh 2%',\n    padding: '1%',\n    height: '90vh',\n    maxHeight: '90vh',\n    overflow: 'auto',\n    width: '94%',\n  },\n  table1:{\n  \twidth: '45%', \n  \tfloat:'left',\n  \toverflow: 'auto', \n  },\n  table2:{\n  \twidth: '50%', \n  \tmaxWidth: '50%',\n  \tfloat: 'right',\n  \toverflow: 'auto',\n\n  }\n}\n));\n\nexport default function AdminTypeReason(props){\n\tconst classes = useStyles();\n\tconst [state, setState] = React.useState({\n      typesData: null,\n      reasonsData: null,\n      firstDataGet: false, \n      reasonState: false,\n      typeState: false,\n      });\n\t\t\nconst setAddReason = () =>{\n    setState({...state, reasonState: true});\n    \n\n  }\nconst closeReasonDialog=()=>{\n\tsetState({...state, reasonState:false})\n}\nconst closeTypeDialog=()=>{\n\tsetState({...state, typeState:false})\n}\nconst addNewReason=(reasonJson)=>{\n\tif ( reasonJson[0].description_eng != null && reasonJson[0].description_rus != null && reasonJson[0].alias_eng != null && reasonJson[0].alias_rus != null&& reasonJson[0].reason != null){\n\tconst form = new FormData()\n\tform.append('events_reasons', JSON.stringify(reasonJson))\n    postNewReason(form, props.login, props.password).then(data=>{console.log(data);ReasonsListGet().then(data=>{console.log(data);setState({ ...state, reasonState: false,\n    \t\t\t\t\t\t\t\t\t\t\t\t\t\t        \t\t\t\t\t\t\t\t\t\t\t \t\t\t\t\t\t\t\t\t   reasonsData: data})})})\n }\n}\nconst returnAddReason = () =>{\n\tif (state.reasonState==true){\n\treturn <AdminReasonBlock addNewReason={(reasonJson)=>addNewReason(reasonJson)}/>\n\t}\n}\n\nconst setAddType = () =>{\n    setState({...state, typeState: true});\n   }\n\nconst addNewType=(typeJson)=>{\n\tif ( typeJson[0].description_eng != null && typeJson[0].description_rus != null && typeJson[0].alias_eng != null && typeJson[0].alias_rus != null && typeJson[0].leaflet_style != null&& typeJson[0].type != null){\n\tconst form = new FormData()\n\tform.append('events_types', JSON.stringify(typeJson))\n    postNewType(form, props.login, props.password).then(data=>{console.log(data);TypesListGet().then(data=>setState({ ...state, typeState: false,\n    \t\t\t\t\t\t\t\t\t\t\t\t\t\t  \t\t\t  \t\t\t\t\t\t\t\t\t\t typesData: data}))})\n  }\n}\t\nconst returnAddType = () =>{\n\tif (state.typeState==true){\n\t\tconsole.log('ok')\n\treturn <AdminTypeBlock addNewType={(typeJson)=>addNewType(typeJson)}/>\n\t}\n}\n\n\tif (state.firstDataGet==false){\n\t\tconst list=[]\n\t\t\t\tReasonsListGet().then(data=>list.push(data))\n\t\t\t\t\t\t\t.then(TypesListGet().then(data=>list.push(data))\n\t\t\t\t\t\t\t.then(data=>setState({ ...state, typesData: list[1],\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t reasonsData:list[0],\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t firstDataGet: true})))\n\t\t\t\t\n\t\t\t\t\n\t\t\t}\n\n\tconst returnReasonsTable=()=>{\n\t\tif (state.reasonsData!=null){\n\t\t\treturn (<div >\n\t\t\t\t\t<Typography  align='center' color='primary' gutterBottom>\n\t\t\t\t\t            Причины событий\n\t\t\t\t\t    </Typography>\n\n\t\t\t\t\t<Table >\n\t\t\t\t        <TableHead>\n\t\t\t\t          <TableRow>\n\t\t\t\t            <TableCell>Id</TableCell>\n\t\t\t\t            <TableCell align=\"center\">Описание на английском</TableCell>\n\t\t\t\t            <TableCell align=\"center\">Описание на русском</TableCell>\n\t\t\t\t            <TableCell align=\"center\">Название на английском</TableCell>\n\t\t\t\t            <TableCell align=\"center\">Название на русском</TableCell>\n\t\t\t\t            <TableCell align=\"center\">Причина</TableCell>\n\t\t\t\t            \n\t\t\t\t          </TableRow>\n\t\t\t\t        </TableHead>\n\t\t\t\t        <TableBody>\n\t\t\t\t          {state.reasonsData.data.reasons.map(event_reasons => (\n\t\t\t\t            <TableRow key={event_reasons.id}>\n\t\t\t\t              <TableCell>{event_reasons.id}</TableCell>\n\t\t\t\t              <TableCell align=\"center\">{event_reasons.description_eng}</TableCell>\n\t\t\t\t              <TableCell align=\"center\">{event_reasons.description_rus}</TableCell>\n\t\t\t\t              <TableCell align=\"center\">{event_reasons.alias_eng}</TableCell>\n\t\t\t\t              <TableCell align=\"center\">{event_reasons.alias_rus}</TableCell>\n\t\t\t\t              <TableCell align=\"center\">{event_reasons.reason}</TableCell>\n\t\t\t\t            </TableRow>\n\t\t\t\t          ))}\n\t\t\t\t        </TableBody>\n\t\t\t\t      </Table>\n\t\t\t\t      <br/>\n\t\t\t\t          <Button\n\t\t\t\t\t        variant=\"contained\"\n\t\t\t\t\t        color=\"primary\"\t\n\t\t\t\t\t        size=\"small\"\t\t\t\t        \n\t\t\t\t\t        startIcon={<AddIcon />}\n\t\t\t\t\t        onClick={()=>setAddReason()}\n\t\t\t\t\t      >\n\t\t\t\t\t      Добавить причину\n     \t\t\t\t\t </Button>\n\t\t\t\t    </div>\n\t\t\t\t)\n\t\t}\n\t}\n\t\tconst returnTypesTable=()=>{\n\t\tif (state.typesData!=null){\n\t\t\treturn (<div >\n\t\t\t\t\t<Typography   align='center' color='primary' gutterBottom>\n\t\t\t\t\t            Типы событий\n\t\t\t\t\t    </Typography>\n\t\t\t\t\t<Table>\n\t\t\t\t        <TableHead>\n\t\t\t\t          <TableRow>\n\t\t\t\t            <TableCell>Id</TableCell>\n\t\t\t\t            <TableCell align=\"center\">Описание на английском</TableCell>\n\t\t\t\t            <TableCell align=\"center\">Описание на русском</TableCell>\n\t\t\t\t            <TableCell align=\"center\">Название на английском</TableCell>\n\t\t\t\t            <TableCell align=\"center\">Название на русском</TableCell>\n\t\t\t\t            <TableCell align=\"center\">Тип</TableCell>\n\t\t\t\t            <TableCell align=\"center\">Leaflet style</TableCell>\n\t\t\t\t          </TableRow>\n\t\t\t\t        </TableHead>\n\t\t\t\t        <TableBody>\n\t\t\t\t          {state.typesData.data.types.map(event_types => (\n\t\t\t\t            <TableRow key={event_types.id}>\n\t\t\t\t              <TableCell>{event_types.id}</TableCell>\n\t\t\t\t              <TableCell align=\"center\">{event_types.description_eng}</TableCell>\n\t\t\t\t              <TableCell align=\"center\">{event_types.description_rus}</TableCell>\n\t\t\t\t              <TableCell align=\"center\">{event_types.alias_eng}</TableCell>\n\t\t\t\t              <TableCell align=\"center\">{event_types.alias_rus}</TableCell>\n\t\t\t\t              <TableCell align=\"center\">{event_types.type}</TableCell>\n\t\t\t\t              <TableCell align=\"center\">{event_types.leaflet_style}</TableCell>\n\t\t\t\t            </TableRow>\n\t\t\t\t          ))}\n\t\t\t\t        </TableBody>\n\t\t\t\t      </Table>\n\t\t\t\t     <br/>\n\t\t\t\t          <Button\n\t\t\t\t\t        variant=\"contained\"\n\t\t\t\t\t        color=\"primary\"\t\n\t\t\t\t\t        size=\"small\"\t\t\t\t        \n\t\t\t\t\t        startIcon={<AddIcon />}\n\t\t\t\t\t        onClick={()=>setAddType()}\n\t\t\t\t\t      >\n\t\t\t\t\t      Добавить тип\n     \t\t\t\t\t </Button>\n\t\t\t\t     </div>\n\t\t\t\t)\n\t\t}\n\t}\n\t\t  return (\n\n\t\t\t\t  \n\t\t\t\t    <Paper className={classes.root} >\n\t\t\t\t\t    <Typography style={{margin:\"0 0 0 40%\", float: 'left'}} align='center' gutterBottom>\n\t\t\t\t\t            Добавьте новый тип или причину события\n\t\t\t\t\t    </Typography>\n\t\t\t\t\t   <Button variant=\"outlined\"  size=\"small\"  onClick={()=>props.setNullChoise()}\tstyle={{width:\"20%\", float: 'right'}}\t\t              \n\t\t\t\t\t    >Вернуться </Button>\n\t\t\t\t\t<div className={classes.table1}>\n\t\t\t\t   {returnReasonsTable()}\n\t\t\t\t   <Dialog\n\t\t\t\t\t        open={state.reasonState}\n\t\t\t\t\t        onClose={()=>closeReasonDialog()}>\n\t\t\t\t\t        <DialogContent>\n\t\t\t\t\t          <DialogContentText color=\"inherit\" align='center' gutterBottom>\n\t\t\t\t\t            Заполните данные о причине события\n\t\t\t\t\t          </DialogContentText>\n\t\t\t\t\t        </DialogContent>\n\t\t\t\t\t        <DialogActions>\n\t\t\t\t\t          {returnAddReason()}\n\t\t\t\t\t        </DialogActions>\n\t\t\t\t\t   </Dialog> \n\t\t\t\t   \n\t\t\t\t   </div> \n\t\t\t\t   <div className={classes.table2}>\n\t\t\t\t   {returnTypesTable()}\n\t\t\t\t   <Dialog\n\t\t\t\t\t        open={state.typeState}\n\t\t\t\t\t        onClose={()=>closeTypeDialog()}>\n\t\t\t\t\t        <DialogContent>\n\t\t\t\t\t          <DialogContentText color=\"inherit\" align='center' gutterBottom>\n\t\t\t\t\t            Заполните данные о типе события\n\t\t\t\t\t          </DialogContentText>\n\t\t\t\t\t        </DialogContent>\n\t\t\t\t\t        <DialogActions>\n\t\t\t\t\t          {returnAddType()}\n\t\t\t\t\t        </DialogActions>\n\t\t\t\t\t   </Dialog> \n\t\t\t\t   \t\t\t\t   \n\t\t\t\t   </div>\n\t\t\t\t   \n\t\t\t\t   \n\n\n\n\t\t\t\t\t</Paper>\n\t\t\t\t    \n  );\n}\n\t\t\n\t\n\n\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport SendIcon from '@material-ui/icons/Send';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Select from '@material-ui/core/Select';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport FormControl from '@material-ui/core/FormControl';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  box: {\r\n\r\n\r\n  },\r\n  margin: {\r\n    margin: '0 0 0 0',\r\n    fontSize: 11,\r\n    \r\n  },\r\n  textfield: {\r\n    width: '100%'\r\n    \r\n  },\r\n  textfield2: {\r\n    width: '100%', \r\n    height: '5vh',\r\n  },\r\n\r\n}));\r\n\r\nexport default function AdminStationBlock(props) {\r\n  const classes = useStyles();\r\n  \r\n  const [state, setState] = React.useState({\r\n      id:null,\r\n      typeId: null,\r\n      type: null,\r\n      descEng: null,\r\n      descRus: null,\r\n      nameEng: null,\r\n      nameRus: null,\r\n      host:null,\r\n      lat:null,\r\n      lon:null,\r\n      elevation:null,\r\n      dangerValues:'[{\"description\":\"Описание\", \"value\": \"0\"}]',\r\n      });\r\n  \r\n  const returnMenuItemsTypes = () =>{\r\n    const list = []\r\n    const typesList= props.stationTypesList\r\n\r\n    for (let i=0; i<typesList.length; i++){\r\n            list.push(<MenuItem key={i} value={typesList[i].id}>{typesList[i].alias_rus}</MenuItem>)\r\n      \r\n    }\r\n    return list\r\n  }\r\n\r\n  const setId=(event)=>{\r\n      setState({ ...state, id: event.target.value });\r\n  }\r\n  const setTypeId=(event)=>{\r\n      setState({ ...state, typeId: event.target.value });\r\n  }\r\n  const setHost=(event)=>{\r\n      setState({ ...state, host: event.target.value });\r\n  }\r\n  const setLat=(event)=>{\r\n      setState({ ...state, lat: event.target.value });\r\n  }\r\n  const setLon=(event)=>{\r\n      setState({ ...state, lon: event.target.value });\r\n  }\r\n  const setElevation=(event)=>{\r\n      setState({ ...state, elevation: event.target.value });\r\n  }\r\n\r\n  const setDescEng=(event)=>{\r\n      setState({ ...state, descEng: event.target.value });\r\n  }\r\n  const setDescRus=(event)=>{\r\n      setState({ ...state, descRus: event.target.value });\r\n  }\r\n  const setNameEng=(event)=>{\r\n      setState({ ...state, nameEng: event.target.value });\r\n  }\r\n  const setNameRus=(event)=>{\r\n      setState({ ...state, nameRus: event.target.value });\r\n      \r\n  }\r\n  const geometryWKT=(lat, lon)=>{\r\n    return 'POINT('+lat+' '+lon+')'\r\n  }\r\n  const setDangerValues=(event)=>{\r\n      setState({ ...state, dangerValues: event.target.value });\r\n      \r\n  }\r\n  \r\n  const stationsJson=[{\r\n                'id':state.id,\r\n                'type_id':state.typeId,\r\n                'name_rus':state.nameRus,\r\n                'name_eng':state.nameEng,\r\n                'description_rus': state.descRus,\r\n                'description_eng': state.descEng, \r\n                'host':state.host, \r\n                'lat': state.lat, \r\n                'lon': state.lon, \r\n                'geom': geometryWKT(state.lat, state.lon),\r\n                'elevation': state.elevation, \r\n                'danger_values':state.dangerValues\r\n\r\n  }]\r\n\r\n  return (\r\n    <div className={classes.box}>\r\n      <TextField className={classes.textfield} value={state.id} id=\"id\" label=\"ID\" onChange={(event)=>setId(event)}/>\r\n      <TextField className={classes.textfield} value={state.nameRus} id=\"nameRus\" label=\"Название на русском\" onChange={(event)=>setNameRus(event)}/>\r\n      <TextField className={classes.textfield} value={state.nameEng} id=\"nameEng\" label=\"Название на английском\" onChange={(event)=>setNameEng(event)}/>\r\n      <TextField className={classes.textfield} value={state.descRus} id=\"descRus\" label=\"Описание на русском\" onChange={(event)=>setDescRus(event)}/>\r\n      <TextField className={classes.textfield} value={state.descEng} id=\"descEng\" label=\"Описание на английском\" onChange={(event)=>setDescEng(event)}/>\r\n      \r\n      \r\n      \r\n      <TextField className={classes.textfield} value={state.dangerValues} id=\"dangerValues\" label=\"Опасные уровни\" onChange={(event)=>setDangerValues(event)}/>\r\n      <FormControl className={classes.textfield}>\r\n        <InputLabel >Тип станции</InputLabel>\r\n            <Select\r\n                value={state.typeId}\r\n                onChange={(event)=>setTypeId(event)}\r\n              >\r\n              {returnMenuItemsTypes()}\r\n              </Select>\r\n      </FormControl >\r\n      <TextField className={classes.textfield} value={state.host} id=\"host\" label=\"Host\"  onChange={(event)=>setHost(event)}/>\r\n      <TextField className={classes.textfield} value={state.lat} type=\"number\" id=\"lat\" label=\"Широта\"  onChange={(event)=>setLat(event)}/>\r\n      <TextField className={classes.textfield} value={state.lon} type=\"number\" id=\"lon\" label=\"Долгота\"  onChange={(event)=>setLon(event)}/>\r\n      <TextField className={classes.textfield} value={state.elevation} type=\"number\" id=\"elevation\" label=\"Высота над уровнем моря (м)\"  onChange={(event)=>setElevation(event)}/>\r\n      \r\n      <div style={{height: \"5vh\"}}></div>\r\n      <Button variant=\"contained\" color=\"primary\" size=\"small\" startIcon={<SendIcon />} style={{float: 'right'}}\r\n              onClick={()=>props.addNewStation(stationsJson)} \r\n      >Добавить</Button>     \r\n    </div>\r\n      )\r\n    }","import React, {Component} from 'react';\nimport Button from '@material-ui/core/Button';\nimport Paper from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Icon from '@material-ui/core/Icon';\nimport AddIcon from '@material-ui/icons/Add';\nimport AdminStationBlock from \"./AdminStationBlock.js\"\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\n\nimport {ObservationStationsTypesListGet, postNewStation, StationListGet} from './request_functions.js'\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    margin: '3vh 2%',\n    padding: '1%',\n    height: '90vh',\n    maxHeight: '90vh',\n    overflow: 'auto',\n    width: '94%',\n  },\n  table1:{\n  \twidth: '100%', \n  \t\n  \toverflow: 'auto', \n  },\n\n}\n));\n\n\nexport default function AdminStatons(props){\n\tconst classes = useStyles();\n\tconst [state, setState] = React.useState({\n      \n      stationData: null,\n      stationTypesData: null,\n      firstDataGet: false, \n      stationStateDialog: false,\n      \n      });\n\t\t\nconst setAddStation = () =>{\n    setState({...state, stationStateDialog: true});\n\n  }\n\nconst addNewStation=(stationJson)=>{\n\tif (\n\t stationJson[0].description_eng != null &&\n\t  stationJson[0].description_rus != null &&\n\t   stationJson[0].name_eng != null &&\n\t    stationJson[0].name_rus != null &&\n\t     stationJson[0].type_id != null &&\n\t     stationJson[0].host != null &&\n\t     stationJson[0].lat != null &&\n\t     stationJson[0].lon != null &&\n\t     stationJson[0].elevation != null&&\n\t     stationJson[0].danger_values != '[{\"description\":\"Описание\", \"value\": \"0\"}]'\n\t     ){\n\tconst form = new FormData()\n\tform.append('stations', JSON.stringify(stationJson))\n    postNewStation(form, props.login, props.password).then(data=>{console.log(data);setState({ ...state, stationStateDialog: false,\n    \t\t\t\t\t\t\t\t\t\t\t\t\t\t  firstDataGet:false,\n    \t\t\t\t\t\t\t\t\t\t\t\t\t\t  stationData: null,})})\n  }\n}\nconst returnAddStation = () =>{\n\tif (state.stationStateDialog==true){\n\t\t\n\treturn <AdminStationBlock addNewStation={(stationJson)=>addNewStation(stationJson)} stationTypesList={state.stationTypesData.data.types}/>\n\t}\n}\n\n\n\n\tif (state.firstDataGet==false){\n\t\t\t\tif (state.stationData == null){\n\t\t\t\tStationListGet().then(data=>setState({ ...state, stationData: data}))\t\t\n\t\t\t}\n\t\t\t\tif (state.stationTypesData == null){\n\t\t\t\tObservationStationsTypesListGet().then(data=>setState({ ...state, stationTypesData: data}))\t\t\n\t\t\t}\n\n\t\t\tsetState({ ...state, firstDataGet: true})\n\t\t}\n\tconst closeStationStateDialog=()=>{\n\t\tsetState({...state, stationStateDialog: false})\n\t}\n\tconst returnStringDV=(s)=>{\n\t\tconst finalList=[]\n\t\tconst obj=JSON.parse(s)\n\t\tfor (var key in obj){\n\t\t\tconst r = obj[key]\n\t\t\tr.forEach((el)=>{\n\t\t\t\tconst str=el.description+': '+el.value+';\\n '\n\t\t\t\tfinalList.push(str)\n\t\t\t})\n\t\t\tconst a=finalList.join('')\n\t\t\treturn a\n\t}\n}\n\tconst returnStationTable=()=>{\n\t\tif (state.stationData!=null){\n\t\t\tconsole.log(state.stationData)\n\n\t\t\treturn (<div >\n\t\t\t\t\t\n\t      \t\t\t\t<Button variant=\"outlined\"  size=\"small\"  onClick={()=>props.setNullChoise()}\tstyle={{width:\"20%\", float: 'right'}}\t\t              \n\t\t\t\t\t    >Вернуться </Button>\n\t\t\t\t\t<Table >\n\t\t\t\t        <TableHead>\n\t\t\t\t          <TableRow>\n\t\t\t\t            <TableCell>Id</TableCell>\n\t\t\t\t            <TableCell align=\"center\">Название на русском</TableCell>\n\t\t\t\t            <TableCell align=\"center\">Название на английском</TableCell>\n\t\t\t\t            <TableCell align=\"center\">Описание на русском</TableCell>\n\t\t\t\t            <TableCell align=\"center\">Описание на английском</TableCell>\n\t\t\t\t            <TableCell align=\"center\">Опасные уровни</TableCell>\n\t\t\t\t            \n\t\t\t\t            \n\t\t\t\t            <TableCell>Host</TableCell>\n\t\t\t\t            <TableCell>Широта</TableCell>\n\t\t\t\t            <TableCell>Долгота</TableCell>\n\t\t\t\t            <TableCell>Высота над уровнем моря(м)</TableCell>\n\t\t\t\t            \n\t\t\t\t          </TableRow>\n\t\t\t\t        </TableHead>\n\t\t\t\t        <TableBody>\n\t\t\t\t          {state.stationData.data.stations.map(stations => (\n\t\t\t\t            <TableRow key={stations.id}>\n\t\t\t\t              <TableCell>{stations.id}</TableCell>\n\t\t\t\t              <TableCell align=\"center\">{stations.name_rus}</TableCell>\n\t\t\t\t              <TableCell align=\"center\">{stations.name_eng}</TableCell>\n\t\t\t\t              <TableCell align=\"center\">{stations.description_rus}</TableCell>\n\t\t\t\t              <TableCell align=\"center\">{stations.description_eng}</TableCell>\n\t\t\t\t              <TableCell align=\"center\">{returnStringDV(stations.danger_values)}</TableCell>\n\t\t\t\t              \n\t\t\t\t              \n\t\t\t\t              <TableCell align=\"center\">{stations.host}</TableCell>\n\t\t\t\t              <TableCell align=\"center\">{stations.lat}</TableCell>\n\t\t\t\t              <TableCell align=\"center\">{stations.lon}</TableCell>\n\t\t\t\t              <TableCell align=\"center\">{stations.elevation}</TableCell>\n\t\t\t\t              \n\n\t\t\t\t            </TableRow>\n\t\t\t\t          ))}\n\t\t\t\t        </TableBody>\n\t\t\t\t      </Table>\n\t\t\t\t      <br/>\n\t\t\t\t          <Button\n\t\t\t\t\t        variant=\"contained\"\n\t\t\t\t\t        color=\"primary\"\t\n\t\t\t\t\t        size=\"small\"\t\t\t\t        \n\t\t\t\t\t        startIcon={<AddIcon />}\n\t\t\t\t\t        onClick={()=>setAddStation()}\n\t\t\t\t\t      >\n\t\t\t\t\t      Добавить станцию\n     \t\t\t\t\t </Button>\n\t\t\t\t    </div>\n\t\t\t\t)\n\t\t}\n\t}\n\t\t\n\t\n\t\t  return (\n\n\t\t\t\t  \n\t\t\t\t    <Paper className={classes.root} >\n\t\t\t\t\t<div >\n\t\t\t\t\t   {returnStationTable()} \n\t\t\t\t\t   \t<Dialog\n\t\t\t\t\t        open={state.stationStateDialog}\n\t\t\t\t\t        onClose={()=>closeStationStateDialog()}>\n\t\t\t\t\t        <DialogContent>\n\t\t\t\t\t          <DialogContentText color=\"inherit\" align='center' gutterBottom>\n\t\t\t\t\t            Заполните данные о станции наблюдения\n\t\t\t\t\t          </DialogContentText>\n\t\t\t\t\t        </DialogContent>\n\t\t\t\t\t        <DialogActions>\n\t\t\t\t\t          {returnAddStation()}\n\t\t\t\t\t        </DialogActions>\n\t\t\t\t\t   </Dialog>\n\t\t\t\t\t   \n\t\t\t\t   </div>\n\t\t\t\t   </Paper>\n\t\t\t\t    \n  );\n}\n\t\t\n\t\n\n\n","var station_types_id={'meteostation': 1,\n\t\t\t\t\t  'hydrogauge': 9\n\t\t\t\t\t }\nexport {station_types_id}","import React, {Component} from 'react';\nimport Button from '@material-ui/core/Button';\nimport Paper from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\nimport Icon from '@material-ui/core/Icon';\nimport AddIcon from '@material-ui/icons/Add';\nimport Select from '@material-ui/core/Select';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport MomentUtils from '@date-io/moment';\nimport DateFnsUtils from '@date-io/date-fns';\nimport LuxonUtils from '@date-io/luxon';\nimport {\n  MuiPickersUtilsProvider,\n  KeyboardTimePicker,\n  KeyboardDatePicker,\n} from '@material-ui/pickers';\nimport SendIcon from '@material-ui/icons/Send';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport Fab from '@material-ui/core/Fab';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\n\nimport { KeyboardDateTimePicker } from \"@material-ui/pickers\";\n\nimport {postNewHydroObservation, StationListGet} from './request_functions.js'\nimport {station_types_id} from './db_constants.js'\n\nvar moment = require('moment');\nmoment().format();\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    margin: '0 2%',\n    padding: '1%',\n    height: '30vh',\n    maxHeight: '30vh',\n    overflow: 'auto',\n    width: '100%',\n  },\n  textfield: {\n    width: '100%'\n    \n  },\n\n\n}\n));\nexport default function AdminHydroObs(props){\n\tconst classes = useStyles();\n\tconst [state, setState] = React.useState({\n      id:'',\n      observation_date:null,\n      hydro_gauge_id:'',\n      water_discharge:'',\n      water_level:'',\n      firstDataGet:false,\n      stationsList:null,\n      serverPushResponse:null,\n      setOpenDialog:false,\n      });\n\nif (state.firstDataGet==false){\n\tif (state.stationsList==null){\t\t\t\n\t\t\t\t\tStationListGet(station_types_id.hydrogauge).then(data=>setState({ ...state, stationsList: data}))\t\t\n\t\t\t\t}\n\tsetState({ ...state, firstDataGet: true})\n}\n\nconst resposneText=()=>{\n\tif (state.serverPushResponse!==null){\n\t\tif (state.serverPushResponse.status=='ok'){\n\t\t\treturn 'Данные успешно загружены'\n\t\t}\n\t\tif (state.serverPushResponse.status!=='ok'){\n\t\t\treturn 'Произошла ошибка '+state.serverPushResponse.comment\n\t\t}\n\t}\n}\n const dialogClose = () => {\n    setState({ ...state, setOpenDialog: false });\n  };\n\nconst setHydroHaugeId=(event,value)=>{\n\tif (value!==null){\n      setState({ ...state, hydro_gauge_id: value.id });\n\t}\n  }\n\nconst setWaterDischarge=(event)=>{\n      setState({ ...state, water_discharge: event.target.value });\n  }\nconst setWaterLevel=(event)=>{\n      setState({ ...state, water_level: event.target.value });\n  }\nconst setObsDate = date => {\n    setState({...state, observation_date: date});\n  };\nconst addNewHyroObs=(hydroObsJson)=>{\n\tif (\n\t hydroObsJson.observation_date != null &&\n\t  hydroObsJson.hydro_gauge_id != '' &&\n\t   hydroObsJson.water_discharge != '' &&\n\t    hydroObsJson.water_level != '' \n){\n\tvar form = new FormData();\n\tform.append('observation_date', moment(hydroObsJson.observation_date).format(\"DDMMYYYYTHHmmss\"))\n\tform.append('hydro_gauge_id', hydroObsJson.hydro_gauge_id)\n\tform.append('water_discharge', hydroObsJson.water_discharge)\n\tform.append('water_level', hydroObsJson.water_level)\n    postNewHydroObservation(form, props.login, props.password).then(data=>{console.log(data);setState({ ...state, serverPushResponse: data,  \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t          \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t      \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t  \t  setOpenDialog:true,})})\t\t\t\t\t\t\t\n    \t\t\t\t\t\t\t\t\t\t\t\t\t\t  \n  }\n}\nconst hydroObsJson = {\n                'observation_date':state.observation_date,\n                'hydro_gauge_id':state.hydro_gauge_id,\n                'water_discharge':state.water_discharge,\n                'water_level': state.water_level,\n\n}\nconst returnStationAutoc=()=>{\n\tif (state.stationsList!=null){\n\t\treturn <Autocomplete                    \n            \n            noOptionsText='Нет совпадений'\n            options={state.stationsList.data.stations}\n            getOptionLabel={option => option.id.toString()}\n            onChange={(event,value)=>setHydroHaugeId(event,value)}\n            renderInput={params => (\n              <TextField {...params} label='Id гидропоста' variant=\"standard\" fullWidth />\n            )}\n          />\n\t}\n}\n\n\t\n\t\t  return (\n\n\t\t\t\t  \n\t\t\t\t    <div className={classes.root} >\n\n\t\t\t\t\t<div >\n\n\t\t\t\t   \t\t<MuiPickersUtilsProvider utils={DateFnsUtils} >\n\t\t\t              \t\t               \n\t\t\t              <div className={classes.textfield}>\n\t\t\t              <KeyboardDateTimePicker\n\t\t\t\t\t        autoOk\n\t\t\t\t\t        ampm={false}\n\t\t\t\t\t        disableFuture\n\t\t\t\t\t        value={state.observation_date}\n\t\t\t\t\t        onChange={setObsDate}\n\t\t\t\t\t        label=\"Дата и время наблюдения\"\n\t\t\t\t\t        format=\"yyyy/MM/dd HH:mm\"\n\t\t\t\t\t      />\n\t\t\t\t\t       </div>\n          \t\t\t\t</MuiPickersUtilsProvider> \n\n\n          \t\t\t\t\n\n\t\t\t\t\t\t{returnStationAutoc()}\n\n\t\t\t\t\t    <TextField className={classes.textfield} value={state.water_discharge} id=\"water_discharge\" label=\"Сток воды\" type=\"number\" onChange={(event)=>setWaterDischarge(event)}/> \n\t\t\t\t\t    <TextField className={classes.textfield} value={state.water_level} id=\"water_level\" label=\"Уровень воды\" type=\"number\" onChange={(event)=>setWaterLevel(event)}/> \n\t\t\t\t  \t\t<div style={{height:\"4vh\"}}></div>\n\t\t\t\t  \t\t<Button variant=\"contained\" color=\"primary\" size=\"small\" startIcon={<SendIcon />} style={{float: 'right'}}\n\t\t\t\t\t              onClick={()=>addNewHyroObs(hydroObsJson)} \n\t\t\t\t\t    >Добавить</Button> \n\t\t\t\t\t    <Dialog\n\t\t\t\t\t        open={state.setOpenDialog}\n\t\t\t\t\t        onClose={()=>dialogClose()}>\n\t\t\t\t\t        <DialogContent>\n\t\t\t\t\t          <DialogContentText color=\"inherit\" align='center' gutterBottom>\n\t\t\t\t\t            {resposneText()}\n\t\t\t\t\t          </DialogContentText>\n\t\t\t\t\t        </DialogContent>\n\t\t\t\t\t        <DialogActions>\n\t\t\t\t\t          <Button onClick={()=>dialogClose()} color=\"primary\" autoFocus>\n\t\t\t\t\t            Закрыть\n\t\t\t\t\t          </Button>\n\t\t\t\t\t        </DialogActions>\n\t\t\t\t\t        </Dialog>\n\t\t\t\t   </div>\n\t\t\t\t    \n\t\t\t\t   \n\t\t\t\t   </div>\n\t\t\t\t    \n  );\n}\n\t\t\n\t\n\n\n","import React, {Component} from 'react';\nimport Button from '@material-ui/core/Button';\nimport Paper from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\nimport Icon from '@material-ui/core/Icon';\nimport AddIcon from '@material-ui/icons/Add';\nimport Select from '@material-ui/core/Select';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport MomentUtils from '@date-io/moment';\nimport DateFnsUtils from '@date-io/date-fns';\nimport LuxonUtils from '@date-io/luxon';\nimport {\n  MuiPickersUtilsProvider,\n  KeyboardTimePicker,\n  KeyboardDatePicker,\n} from '@material-ui/pickers';\nimport SendIcon from '@material-ui/icons/Send';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\n\nimport { KeyboardDateTimePicker } from \"@material-ui/pickers\";\n\nimport {postNewMeteoObservation, StationListGet} from './request_functions.js'\nimport {station_types_id} from './db_constants.js'\n\nvar moment = require('moment');\nmoment().format();\n\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    margin: '0 2%',\n    padding: '1%',\n    height: '30vh',\n    maxHeight: '30vh',\n    overflow: 'auto',\n    width: '100%',\n  },\n  textfield: {\n    width: '100%'\n    \n  },\n\n\n}\n));\n\n\nexport default function AdminMeteooObs(props){\n\tconst classes = useStyles();\n\tconst [state, setState] = React.useState({\n      observation_date:null,\n      meteo_station_id:'',\n      air_temperature:'',\n      precipitations:'',\n      firstDataGet:false,\n      stationsList:null,\n      serverPushResponse:null,\n      setOpenDialog:false,\n      });\n\nif (state.firstDataGet==false){\n\tif (state.stationsList==null){\t\t\t\t\n\t\t\t\t\tStationListGet(station_types_id.meteostation).then(data=>setState({ ...state, stationsList: data}))\t\t\n\t\t\t\t}\n\tsetState({ ...state, firstDataGet: true})\n}\n\nconst resposneText=()=>{\n\tif (state.serverPushResponse!==null){\n\t\tif (state.serverPushResponse.status=='ok'){\n\t\t\treturn 'Данные успешно загружены'\n\t\t}\n\t\tif (state.serverPushResponse.status!=='ok'){\n\t\t\treturn 'Произошла ошибка '+state.serverPushResponse.comment\n\t\t}\n\t}\n}\n\nconst returnStationAutoc=()=>{\n\tif (state.stationsList!=null){\n\t\treturn <Autocomplete              \n            \n            noOptionsText='Нет совпадений'\n            options={state.stationsList.data.stations}\n            getOptionLabel={option => option.id.toString()}\n            onChange={(event,value)=>setMeteoStationId(event,value)}\n            renderInput={params => (\n              <TextField {...params} label='Id станции' variant=\"standard\" fullWidth />\n            )}\n          />\n\t}\n}\n\t\n const dialogClose = () => {\n    setState({ ...state, setOpenDialog: false });\n  };\n\n\n\n\nconst setMeteoStationId=(event,value)=>{\n\tif (value!==null){\n      setState({ ...state, meteo_station_id: value.id });\n\t}\n  }\n\nconst setAirTemperature=(event)=>{\n      setState({ ...state, air_temperature: event.target.value });\n  }\nconst setPrecipitations=(event)=>{\n      setState({ ...state, precipitations: event.target.value });\n  }\nconst setObsDate = date => {\n    setState({...state, observation_date: date});\n  };\nconst addNewMeteoObs=(meteoObsJson)=>{\n\tif (\n\t meteoObsJson.observation_date != null &&\n\t  meteoObsJson.meteo_station_id != '' &&\n\t   meteoObsJson.air_temperature != '' &&\n\t    meteoObsJson.precipitations != '' \n){\n\tconst form =new FormData();\n\tform.append('observation_date', moment(meteoObsJson.observation_date).format(\"DDMMYYYYTHHmmss\"))\n\tform.append('meteo_station_id', meteoObsJson.meteo_station_id)\n\tform.append('air_temperature', meteoObsJson.air_temperature)\n\tform.append('precipitations', meteoObsJson.precipitations)\n    postNewMeteoObservation(form, props.login, props.password).then(data=>{console.log(data);setState({ ...state, serverPushResponse: data,\t\t\t\t\t\t\t\t\t\t\t  \t\t\n    \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t          \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t  \t  setOpenDialog:true,})})\t\t\t\t\t\t\t\n    \t\t\t\t\t\t\t\t\t\t\t\t\t\t  \n  }\n}\n\nconst meteoObsJson = {\n                'observation_date':state.observation_date,\n                'meteo_station_id':state.meteo_station_id,\n                'air_temperature':state.air_temperature,\n                'precipitations': state.precipitations,\n\n}\n\n\t\n\t\t  return (\n\n\t\t\t\t  \n\t\t\t\t    <div className={classes.root} >\t\t\t\t\t    \n\t\t\t\t\t    \t\n\t\t\t\t   \t\t<MuiPickersUtilsProvider utils={DateFnsUtils} >\n\t\t\t              <div className={classes.textfield}>\n\t\t\t              <KeyboardDateTimePicker\n\t\t\t\t\t        autoOk\n\t\t\t\t\t        ampm={false}\n\t\t\t\t\t        disableFuture\n\t\t\t\t\t        value={state.observation_date}\n\t\t\t\t\t        onChange={setObsDate}\n\t\t\t\t\t        label=\"Дата и время наблюдения\"\n\t\t\t\t\t        format=\"yyyy/MM/dd HH:mm\"\n\t\t\t\t\t      />\n\t\t\t\t\t       </div>          \n          \t\t\t\t</MuiPickersUtilsProvider>\n\n\t\t\t\t\t    {returnStationAutoc()}\n\n\t\t\t\t\t    <TextField className={classes.textfield} value={state.air_temperature} id=\"air_temperature\" label=\"Температура воздуха\" type=\"number\" onChange={(event)=>setAirTemperature(event)}/> \n\t\t\t\t\t    <TextField className={classes.textfield} value={state.precipitations} id=\"precipitations\" label=\"Осадки\" type=\"number\" onChange={(event)=>setPrecipitations(event)}/> \n\t\t\t\t  \t\t<div style={{height:\"4vh\"}}></div>\n\t\t\t\t  \t\t<Button variant=\"contained\" color=\"primary\" size=\"small\" startIcon={<SendIcon />} style={{float: 'right'}}\n\t\t\t\t\t              onClick={()=>addNewMeteoObs(meteoObsJson)} \n\t\t\t\t\t    >Добавить</Button> \n\t\t\t\t\t    <Dialog\n\t\t\t\t\t        open={state.setOpenDialog}\n\t\t\t\t\t        onClose={()=>dialogClose()}>\n\t\t\t\t\t        <DialogContent>\n\t\t\t\t\t          <DialogContentText color=\"inherit\" align='center' gutterBottom>\n\t\t\t\t\t            {resposneText()}\n\t\t\t\t\t          </DialogContentText>\n\t\t\t\t\t        </DialogContent>\n\t\t\t\t\t        <DialogActions>\n\t\t\t\t\t          <Button onClick={()=>dialogClose()} color=\"primary\" autoFocus>\n\t\t\t\t\t            Закрыть\n\t\t\t\t\t          </Button>\n\t\t\t\t\t        </DialogActions>\n\t\t\t\t\t        </Dialog>\n\t\t\t\t   \n\t\t\t\t   </div>\n\t\t\t\t    \n  );\n}\n\t\t\n\t\n\n\n","import React, {Component} from 'react';\nimport Button from '@material-ui/core/Button';\nimport Paper from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\nimport Icon from '@material-ui/core/Icon';\nimport AddIcon from '@material-ui/icons/Add';\nimport Select from '@material-ui/core/Select';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport SendIcon from '@material-ui/icons/Send';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport AdminHydroObs from './AdminHydroObs.js'\nimport AdminMeteoObs from './AdminMeteoObs.js'\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport { green,red } from '@material-ui/core/colors';\n\nimport {postNewHydroObservation, postNewMeteoObservation, StationListGet} from './request_functions.js'\n\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    margin: '3vh 2%',\n    padding: '1%',\n    height: '90vh',\n    maxHeight: '90vh',\n    overflow: 'auto',\n    width: '94%',\n  },\n\n  textfield: {\n    width: '47%',\n    margin: '3vh 1% 0',\n    height: '80vh',\n    float:'left',\n  },\n    textfield2: {\n    width: '47%',\n    margin: '3vh 1% 0',\n    height: '80vh',\n    float:'right',\n  },\n  helpingText:{\n  \tmargin: '1vh 1%',\n\n  }\n\n\n}\n));\n\nexport default function AdminObservationsChoise(props){\n\tconst classes = useStyles();\n\tconst [state, setState] = React.useState({\n\t\topenDialog:false,\n\t\topenDialogFileToServer: false,\n\t\topenMeteoDialog:false,\n\t\tCSVFile: null,\n\t\tCSVFileName: ' ',\n\t\tMeteoCSVFile: null,\n\t\tMeteoCSVFileName: ' ',\n\t\tresponseLog:null,\n      });\n\n\tconst openAddObsDialog =()=>{\n\t\tsetState({ ...state, openDialog: true });\n\t}\n\tconst openAddMeteoObsDialog =()=>{\n\t\tsetState({ ...state, openMeteoDialog: true });\n\t}\n\tconst closeAddObsDialog =()=>{\n\t\tsetState({ ...state, openDialog: false });\n\n\t}\n\tconst closeAddMeteoObsDialog =()=>{\n\t\tsetState({ ...state, openMeteoDialog: false });\n\n\t}\n\tconst openDialogServer=()=>{\n\t\tsetState({...state, openDialogFileToServer: true,\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t})\n\t}\n\tconst setLogInfo=(data)=>{\n\t\t\tsetState({...state, responseLog: data,\n\t\t\t\t\t\t\t\topenDialogFileToServer: true,\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t})\n\t}\n\tconst pushHydroCSVFileAndLog=(form)=>{\n\t\tpostNewHydroObservation(form, props.login, props.password).then(data=>{console.log(data);setLogInfo(data)})\n\t}\n\n\tconst pushMeteoCSVFileAndLog=(form)=>{\n\t\tpostNewMeteoObservation(form, props.login, props.password).then(data=>{console.log(data);setLogInfo(data)})\n\t}\t\n\t\n\tconst closeFileToServerDialog=()=>{\n\t\tsetState({ ...state, openDialogFileToServer: false,\n\t\t\t\t\t\t\t responseLog: null,\n\t\t\t\t\t\t\t CSVFile: null,\n\t\t\t\t\t\t\t CSVFileName: ' ',\n\t\t\t\t\t\t\t MeteoCSVFile: null,\n\t\t\t\t\t\t\t MeteoCSVFileName: ' ',});\n\t}\n\n\tconst setCSVFile=(file)=>{\n\t\tif (file!==undefined){\n\t\t\tif (state.CSVFileName!==undefined){\n\t\t\tsetState({ ...state, CSVFileName: file.name,\n\t\t\t\t\t\t\t\t CSVFile: file});\n\t\t\t}\n\t\t}\n\t}\n\tconst setMeteoCSVFile=(file)=>{\n\t\tif (file!==undefined){\n\t\t\tif (state.MeteoCSVFileName!==undefined){\n\t\t\tsetState({ ...state, MeteoCSVFileName: file.name,\n\t\t\t\t\t\t\t\t MeteoCSVFile: file});\n\t\t\t}\n\t\t}\n\t}\n\tconst returnDialogContent=()=>{\n\t\tif (state.responseLog!==null){\n\t\t\tif (state.responseLog.status=='ok'){\n\t\t\treturn \t\t\t<div ><DialogContent>\n\t\t\t\t\t\t\t<DialogContentText color=\"inherit\" align='center' gutterBottom>\n\t\t\t\t\t            Данные успешно загружены\n\t\t\t\t\t          </DialogContentText>\n\n\t\t\t\t\t        </DialogContent>\n\t\t\t\t\t        <DialogActions>\n\t\t\t\t\t          <Button onClick={()=>closeFileToServerDialog()}>Закрыть</Button>\n\t\t\t\t\t        </DialogActions></div>\n\t\t\t}\n\t\t\tif (state.responseLog.status!=='ok'){\n\t\t\t\t\t\treturn <div ><DialogContent>\n\t\t\t\t\t\t\t<DialogContentText color=\"inherit\" align='center' gutterBottom>\n\t\t\t\t\t            Данные не были загружены! Ошибка: {state.responseLog.comment}\n\t\t\t\t\t          </DialogContentText>\n\n\t\t\t\t\t        </DialogContent>\n\t\t\t\t\t        <DialogActions>\n\t\t\t\t\t          <Button onClick={()=>closeFileToServerDialog()}>Закрыть</Button>\n\t\t\t\t\t        </DialogActions></div>\n\t\t\t}\n\t\t}\n\t\tif (state.responseLog==null){\n\t\t\t \n\t\t\t\t\treturn<Card>\n\t\t\t\t\t<CardContent >\n\t\t\t\t\t<div style={{display: 'flex', justifyContent:\"center\"}}>\n\t\t\t\t\t<CircularProgress style={{color: green[500]}}/> \n\t\t\t\t\t</div>                   \n                    <Typography color=\"inherit\" align='center' gutterBottom>\n                      Ожидание ответа сервера...\n                    </Typography>\n                    </CardContent>\n                    </Card>\n\t\t}\n\t}\n\tconst returnAddCSVButton=()=>{\n\t\tif (state.CSVFileName!==' '){\n\t\t\tvar file=state.CSVFile\n\t\t\tvar form=new FormData();\n\t\t\tform.append('hydro_observations', file)\n\t\t\treturn <Button variant=\"contained\" color=\"primary\" size=\"small\" startIcon={<SendIcon />} style={{margin:'2vh 2%' }}\n\t\t\t\t\tonClick={()=>pushHydroCSVFileAndLog(form)}\n\t\t\t\t\t>Добавить</Button> \n\t\t}\n\t}\n\tconst returnAddMeteoCSVButton=()=>{\n\t\tif (state.MeteoCSVFileName!==' '){\n\t\t\tvar file=state.MeteoCSVFile\n\t\t\tvar form=new FormData();\n\t\t\tform.append('meteo_observations', file)\n\t\t\treturn <Button variant=\"contained\" color=\"primary\" size=\"small\" startIcon={<SendIcon />} style={{margin:'2vh 2%' }}\n\t\t\t\t\tonClick={()=>{openDialogServer();pushMeteoCSVFileAndLog(form)}}\n\t\t\t\t\t>Добавить</Button> \n\t\t}\n\t}\n\t\n\t\n\t\t  return (\n\n\t\t\t\t  \n\t\t\t\t    <Paper className={classes.root} >\n\t      \t\t\t<Button variant=\"outlined\"  size=\"small\"  onClick={()=>props.setNullChoise()}  style={{width:\"20%\", float: 'right'}}>Вернуться </Button>\n\t      \t\t\t<div style={{margin: '4vh 0 0 0'}}>\n\t      \t\t\t<Card className={classes.textfield} >\n\t      \t\t\t<div>\n\t\t\t      \t\t\t<CardContent>\n\t\t\t      \t\t\t\t<Typography   align='center' color='primary' variant=\"h5\" gutterBottom>\n\t\t\t\t                      Наблюдения гидропостов\n\t\t\t\t      \t\t\t</Typography>\n\t\t\t\t      \t\t\t<Typography   align='center' color='inherit' gutterBottom>\n\t\t\t\t                      Добавить вручную\n\t\t\t\t      \t\t\t</Typography>\n\t\t\t\t      \t\t</CardContent>\n\t\t\t\t      \t<CardActions style={{justifyContent: 'center'}}>\n\t\t\t\t      \t\t\t<Button\n\t                    \tvariant=\"outlined\"\n\t                    \tcomponent=\"label\"\n\t                    \tsize=\"medium\"\n\t                    \tcolor=\"primary\"\n\t                    \tonClick= {()=>openAddObsDialog()}\n\t                    >\n\t                    Добавить                    \n\t                   </Button>     \t\t\t\t\t\n                   \n\t                   <Dialog\n\t\t\t\t\t        open={state.openDialog}\n\t\t\t\t\t        onClose={()=>closeAddObsDialog()}>\n\t\t\t\t\t        <DialogContent>\n\t\t\t\t\t          <DialogContentText color=\"inherit\" align='center' gutterBottom>\n\t\t\t\t\t            Заполните данные о наблюдении гидропоста\n\t\t\t\t\t          </DialogContentText>\n\t\t\t\t\t        </DialogContent>\n\t\t\t\t\t        <DialogActions>\n\t\t\t\t\t          <AdminHydroObs login={props.login} password={props.password}/>\n\t\t\t\t\t        </DialogActions>\n\t\t\t\t\t   </Dialog> \n\t\t\t\t   </CardActions> \n\t\t\t\t   </div>\n\t\t\t\t   <div>\n\t\t\t\t   \t\t\t<CardContent>\n\t\t      \t\t\t<Typography   align='center' color='inherit' gutterBottom>\n\t\t                      Загрузить .csv\n\t\t      \t\t\t</Typography>\n\t\t      \t\t\t</CardContent>\n\t\t      \t\t\t<CardActions>\n\t\t\t\t\t\t<Button\n\t                    \tvariant=\"outlined\"\n\t                    \tcomponent=\"label\"\n\t                    \tsize=\"small\"\n\t                    \tstyle={{ width: \"35%\" }}\n\t                    >\n\t                    Выберите файл\n\t                    <input type=\"file\" style={{ display: \"none\" }} onChange={(e)=>setCSVFile(e.target.files[0])}/>\n\t                   </Button> \n\t                   <TextField style={{ width: \"60%\", margin: '0 0 0 2%'}} value={state.CSVFileName} label=\"Имя файла\"/>                                    \n\t                   </CardActions>                   \n\t                   {returnAddCSVButton()}\n\t                   <CardContent>\n\t                    <Typography  className={classes.helpingText} align='justify' color='secondary' gutterBottom>\n\t\t                      Для корректной загрузки файл должен иметь следующую структуру: \n\t\t                </Typography>\n\t\t                <Typography color='secondary'>\n\t\t                      1) Разделители - запятые (,); \n\t\t                </Typography>\n\t\t                <Typography color='secondary'>\n\t\t                      2) Первая строка - названия столбцов (water_discharge, water_level, hydro_gauge_id, observation_date) в произвольном порядке;\n\t\t                </Typography> \n\t\t                <Typography color='secondary'>     \n\t\t                      3) Формат даты/времени: %d%m%YT%H%M%S (Пример:12052012T000000).\n\t\t      \t\t\t</Typography>\n\t\t      \t\t\t</CardContent>\n\t\t      \t\t\t\n\t\t\t\t   </div>\t\t\t\t   \n\t\t\t\t   </Card>\n\n\n\n\n\n\t      \t\t\t<Card className={classes.textfield2} >\n\t      \t\t\t<div>\n\t\t\t      \t\t\t<CardContent>\n\t\t\t      \t\t\t\t<Typography   align='center' color='primary' variant=\"h5\" gutterBottom>\n\t\t\t\t                      Наблюдения метеостанций\n\t\t\t\t      \t\t\t</Typography>\n\t\t\t\t      \t\t\t<Typography   align='center' color='inherit' gutterBottom>\n\t\t\t\t                      Добавить вручную\n\t\t\t\t      \t\t\t</Typography>\n\t\t\t\t      \t\t</CardContent>\n\t\t\t\t      \t<CardActions style={{justifyContent: 'center'}}>\n\t\t\t\t      \t\t\t<Button\n\t                    \tvariant=\"outlined\"\n\t                    \tcomponent=\"label\"\n\t                    \tsize=\"medium\"\n\t                    \tcolor=\"primary\"\n\t                    \tonClick= {()=>openAddMeteoObsDialog()}\n\t                    >\n\t                    Добавить                    \n\t                   </Button>     \t\t\t\t\t\n                   \n\t                   <Dialog\n\t\t\t\t\t        open={state.openMeteoDialog}\n\t\t\t\t\t        onClose={()=>closeAddMeteoObsDialog()}>\n\t\t\t\t\t        <DialogContent>\n\t\t\t\t\t          <DialogContentText color=\"inherit\" align='center' gutterBottom>\n\t\t\t\t\t            Заполните данные о наблюдении метеостанции\n\t\t\t\t\t          </DialogContentText>\n\t\t\t\t\t        </DialogContent>\n\t\t\t\t\t        <DialogActions>\n\t\t\t\t\t          <AdminMeteoObs login={props.login} password={props.password}/>\n\t\t\t\t\t        </DialogActions>\n\t\t\t\t\t   </Dialog> \n\t\t\t\t   </CardActions> \n\t\t\t\t   </div>\n\t\t\t\t   <div>\n\t\t\t\t   \t\t\t<CardContent>\n\t\t      \t\t\t<Typography   align='center' color='inherit' gutterBottom>\n\t\t                      Загрузить .csv\n\t\t      \t\t\t</Typography>\n\t\t      \t\t\t</CardContent>\n\t\t      \t\t\t<CardActions>\n\t\t\t\t\t\t<Button\n\t                    \tvariant=\"outlined\"\n\t                    \tcomponent=\"label\"\n\t                    \tsize=\"small\"\n\t                    \tstyle={{ width: \"35%\" }}\n\t                    >\n\t                    Выберите файл\n\t                    <input type=\"file\" style={{ display: \"none\" }} onChange={(e)=>setMeteoCSVFile(e.target.files[0])}/>\n\t                   </Button> \n\t                   <TextField style={{ width: \"60%\", margin: '0 0 0 2%'}} value={state.MeteoCSVFileName} label=\"Имя файла\"/>                                    \n\t                   </CardActions>                   \n\t                   {returnAddMeteoCSVButton()}\n\t                   <CardContent>\n\t                    <Typography  className={classes.helpingText} align='justify' color='secondary' gutterBottom>\n\t\t                      Для корректной загрузки файл должен иметь следующую структуру: \n\t\t                </Typography>\n\t\t                <Typography color='secondary'>\n\t\t                      1) Разделители - запятые (,); \n\t\t                </Typography>\n\t\t                <Typography color='secondary'>\n\t\t                      2) Первая строка - названия столбцов (air_temperature, precipitations, meteo_station_id, observation_date) в произвольном порядке;\n\t\t                </Typography> \n\t\t                <Typography color='secondary'>     \n\t\t                      3) Формат даты/времени: %d%m%YT%H%M%S (Пример:12052012T000000).\n\t\t      \t\t\t</Typography>\n\t\t      \t\t\t</CardContent>\n\t\t      \t\t\t<Dialog\n\t\t\t\t\t        open={state.openDialogFileToServer}\n\t\t\t\t\t        >\n\t\t\t\t\t        {returnDialogContent()}\n\t\t\t\t\t         \n\t\t\t\t\t          \n\t\t\t\t\t   </Dialog>\n\t\t\t\t   </div>\t\t\t\t   \n\t\t\t\t   </Card>\n\n\n\t\t\t\t   </div>\n\t\t\t\t   </Paper>\n\t\t\t\t    \n  );\n}","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport NewEditMode from './NewEditMode.js'\r\nimport AdminEventDialog from './AdminEventDialog.js'\r\nimport AdminTypeReason from './AdminTypeReason.js'\r\n\r\nimport AdminStations from './AdminStations.js'\r\nimport AdminObservationsChoise from './AdminObservationsChoise.js'\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  textfield:{\r\n    width: '80%', \r\n    margin: '0 10%',\r\n\r\n  },\r\n\r\n  card: {\r\n    width: '40%',\r\n    margin: '40vh 30%'\r\n  },\r\n\r\n}\r\n));\r\n\r\nexport default function EditMode(props) {\r\n\r\n  const classes = useStyles();\r\n  const [state, setState] = React.useState({\r\n      'choise': null,\r\n      });\r\n  const setNewEventChoise=()=>{\r\n    setState({ ...state, choise: 'newEvent' });\r\n  }\r\n  const setOldEventChoise=()=>{\r\n    setState({ ...state, choise: 'oldEvent' });\r\n  }\r\n  const setEventTypeReasonChoise=()=>{\r\n    setState({ ...state, choise: 'eventTypeReason' });\r\n  }\r\n  const setObservationsChoise =()=>{\r\n    setState({ ...state, choise: 'observation' });\r\n  }\r\n  const setStationsChoise=()=>{\r\n    setState({ ...state, choise: 'station' });\r\n  }\r\n  const setHydroObsChoise=()=>{\r\n    setState({ ...state, choise: 'hydroObs' });\r\n  }\r\n  const setMeteoObsChoise=()=>{\r\n    setState({ ...state, choise: 'meteoObs' });\r\n  }\r\n  const setAddPlaceChoise=()=>{\r\n    setState({ ...state, choise: 'addPlace' });\r\n  }\r\n  const setNullChoise=()=>{\r\n    setState({ ...state, choise: null });\r\n  }\r\n  const setPlaceForEvent=(placeName, placeId)=>{\r\n    setState({ ...state, placeName: placeName,\r\n                         placeId: placeId,\r\n                         choise: 'newEvent'});    \r\n  }\r\n  const setPlaceForOldEvent=(placeName, placeId)=>{\r\n    console.log(placeId)\r\n    setState({ ...state, placeName: placeName,\r\n                         placeId: placeId,\r\n                         });    \r\n  }\r\n  const setIdForOldEvent=(eventName, eventId)=>{\r\n    setState({ ...state,  eventName:eventName,\r\n                          eventId:eventId,\r\n                          choise: 'oldEvent'});\r\n  }\r\n  const returnChoiseCard=()=>{\r\n    if (state.choise==null){\r\n    return <Card className={classes.card}>\r\n      <CardContent>\r\n          <Typography  color=\"inherit\" align='center' gutterBottom>\r\n            \r\n            <br/>Выберите редактируемую таблицу\r\n          </Typography>\r\n        </CardContent>\r\n    <CardActions style={{justifyContent: 'center'}}>\r\n        <AdminEventDialog login={props.login} password={props.password}\r\n                          placeId={state.placeId}\r\n                          setNewEventChoise={()=>setNewEventChoise()} setOldEventChoise={()=>setOldEventChoise()}\r\n                          setPlaceForEvent={(placeName, placeId)=>setPlaceForEvent(placeName, placeId)} setPlaceForOldEvent={(placeName, placeId)=>setPlaceForOldEvent(placeName, placeId)}\r\n                          setIdForOldEvent={(eventName, eventId)=>setIdForOldEvent(eventName, eventId)}/>\r\n        <Button size=\"small\" color=\"secondary\" variant=\"outlined\" onClick={()=>setEventTypeReasonChoise()}>Типы/причины событий</Button>\r\n        <Button size=\"small\" color=\"secondary\" variant=\"outlined\" onClick={()=>setStationsChoise()}>Станции наблюдения</Button>\r\n        <Button size=\"small\" color=\"secondary\" variant=\"outlined\" onClick={()=>setObservationsChoise()}>Наблюдения</Button>        \r\n      </CardActions>\r\n    <CardActions style={{justifyContent: 'center'}}>\r\n    <Button size=\"small\" color=\"primary\" variant=\"outlined\" href=\"https://github.com/eduard-kazakov/RDE\">Руководство администратора</Button>\r\n    </CardActions>\r\n    \r\n    </Card>\r\n  }\r\n  if (state.choise=='newEvent'){\r\n    return <NewEditMode login={props.login} password={props.password} placeName={state.placeName} placeId={state.placeId} setNullChoise={()=>setNullChoise()} mode='new'/>\r\n  }\r\n  if (state.choise=='oldEvent'){\r\n    return <NewEditMode login={props.login} password={props.password} placeName={state.placeName} placeId={state.placeId} eventName={state.eventName} eventId={state.eventId} setNullChoise={()=>setNullChoise()} mode='old'/>\r\n  }\r\n  if (state.choise=='eventTypeReason'){\r\n    return <AdminTypeReason login={props.login} password={props.password} setNullChoise={()=>setNullChoise()}/>\r\n  }\r\n\r\n  if (state.choise=='station'){\r\n\r\n    return <AdminStations login={props.login} password={props.password} setNullChoise={()=>setNullChoise()}/>\r\n  }\r\n\r\n  if (state.choise=='observation'){\r\n    return <AdminObservationsChoise login={props.login} password={props.password} setNullChoise={()=>setNullChoise()}/>\r\n  }\r\n\r\n}\r\n  \r\n  return (\r\n    <div>\r\n    {returnChoiseCard()}\r\n\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\n","import React, {Component} from 'react';\r\nimport Authorization from './Authorization.js'\r\nimport EditMode from './EditMode.js'\r\n\r\nimport {getAccess} from './request_functions.js'\r\n\r\n\t\t\r\nexport default class AdminApp extends Component{\r\n\tconstructor(props){\r\n\t\tsuper(props)\r\n\t\tthis.state = {\r\n\t\t\taccsessDataGetState: false,\r\n\t\t\tuserData: null,\r\n\t\t\tlogin:null,\r\n\t\t\tpassword:null,\r\n\t\t}\r\n\t}\r\n\tgetAccessData=(login, password)=>{\t\r\n\t\tthis.setState((prevState) => {\r\n\t\t\t\t\treturn {login: login,\r\n\t\t\t\t\t\t\tpassword:password}});\r\n\t\tgetAccess(login, password).then(data=>\r\n\r\n\t\t\t\t\tthis.setState((prevState) => {\r\n\t\t\t\t\treturn {userData: data,\r\n\t\t\t\t\t\t\taccsessDataGetState: data.status\r\n\t\t\t\t\t\t    }\r\n\t\t\t\r\n\t\t\t\t}))\r\n\t}\t\r\n\treturnAuthorization=(access, userData)=>{\r\n\t\tif (access!=='ok' && userData!== null){\t\t\t\r\n\t\t\t\treturn <Authorization getAccessData={(login, password)=>this.getAccessData(login, password)} accessDenied={true}/>\r\n\t\t\t}\r\n\t\t\r\n\t\tif (access!=='ok'){\t\t\t\r\n\t\t\t\treturn <Authorization getAccessData={(login, password)=>this.getAccessData(login, password)} accessDenied={false}/>\r\n\t\t\t}\r\n\t}\r\n\treturnEditMode=(access)=>{\r\n\t\tif (access=='ok'){\r\n\t\t\t\treturn <EditMode login={this.state.login} password={this.state.password}/>\r\n\t\t\t}\r\n\t}\r\n\t\trender(){\t\t\r\n\t\t\treturn(\r\n\t\t\t\t<div>\r\n\t\t\t\t{this.returnAuthorization(this.state.accsessDataGetState, this.state.userData)}\r\n\t\t\t\t{this.returnEditMode(this.state.accsessDataGetState)}\r\n\t\t\t\t</div>\r\n\t\t\t\t)\r\n\t\t}\r\n}","import MUIDataTable from \"mui-datatables\";\nimport React, {Component} from 'react'\nimport { createMuiTheme, MuiThemeProvider } from '@material-ui/core/styles';\n\nexport default class StationsTableDownload extends Component{\n  constructor(props){\n    super(props)\n    this.state = {\n      propsData: null\n    }\n  }\n\n  getMuiTheme = () => createMuiTheme({\n    overrides: {\n\n        MUIDataTableHeadCell: {\n          root: {\n            color: \"#a6a6a6\",\n          }\n        },\n\n    }\n  })\n\n  render(){\n\n  const columns = [\n   {\n  name: \"id\",\n  label: \"ID\",\n  options: {\n   filter: true,\n\n  }\n },\n {\n  name: \"name_rus\",\n  label: \"Название\",\n  options: {\n   filter: false,\n\n  }\n },\n  {\n  name: \"description_rus\",\n  label: \"Описание\",\n  options: {\n   filter: false,\n\n  }\n },\n {\n  name: \"type\",\n  label: \"Тип\",\n  options: {\n   filter: true,\n\n  }\n },\n\n {\n  name: \"elevation\",\n  label: \"Высота (м)\",\n  options: {\n   filter: false,\n  \n  }\n },\n {\n  name: \"host\",\n  label: \"Принадлежность\",\n  options: {\n   filter: true,  \n  }\n }, \n  {\n  name: \"lat\",\n  label: \"Широта\",\n  options: {\n   filter: false,  \n  }\n },\n  {\n  name: \"lon\",\n  label: \"Долгота\",\n  options: {\n   filter: false,  \n  }\n },\n];\n\nconst data = this.props.stations\n\nconst placeNameHeader='Станции наблюдения'\nconst options = {\n  filterType: 'dropdown',\n  download: true,\n  print: false,\n  search: true,\n  responsive: 'stacked',\n  selectableRowsHeader: false,\n  selectableRows: 'none',\n  pagination:true,\n  rowsPerPage:5,\n  rowsPerPageOptions:[],\n  textLabels: {\n    body: {\n      noMatch: \"Совпадения не найдены\",\n    }},\n  fixedHeader: true\n};\n  return(\n    <MuiThemeProvider theme={this.getMuiTheme()}>\n        <MUIDataTable \n          title={placeNameHeader}\n          data={data}\n          columns={columns}\n          options={options}\n        />\n    </MuiThemeProvider>)\n}}","import MUIDataTable from \"mui-datatables\";\nimport React, {Component} from 'react'\nimport { createMuiTheme, MuiThemeProvider } from '@material-ui/core/styles';\nvar moment = require('moment');\nmoment().format();\n\n\nexport default class HydroObsTableDownload extends Component{\n  constructor(props){\n    super(props)\n    this.state = {\n      propsData: null\n    }\n  }\n\n  getMuiTheme = () => createMuiTheme({\n    overrides: {\n\n        MUIDataTableHeadCell: {\n          root: {\n            color: \"#a6a6a6\",\n          }\n        },\n\n    }\n  })\n\n  getData=(data)=>{\n      const new_data=data.map((el)=>{\n        el.observation_date=moment(el.observation_date, 'DDMMYYYYTHHmmss').format('YYYY/MM/DD HH:mm')\n        return el\n      })\n      return new_data\n    }\n\n  render(){\n\n  \n\n  const columns = [\n   {\n  name: \"hydro_gauge_id\",\n  label: \"ID метеостанции\",\n  options: {\n   filter: true,\n\n  }\n },\n {\n  name: \"observation_date\",\n  label: \"Дата\",\n  options: {\n   filter: false,\n\n  }\n },\n {\n  name: \"water_discharge\",\n  label: \"Расход воды (м)\",\n  options: {\n   filter: false,\n\n  }\n },\n  {\n  name: \"water_level\",\n  label: \"Уровень воды (м)\",\n  options: {\n   filter: false,\n\n  }\n },\n \n];\n\nconst data = this.getData(this.props.observations)\n\nconst placeNameHeader='Наблюдения гидропостов'\nconst options = {\n  filterType: 'dropdown',\n  download: true,\n  print: false,\n  search: true,\n  responsive: 'stacked',\n  selectableRowsHeader: false,\n  selectableRows: 'none',\n  pagination:true,\n  rowsPerPage:5,\n  rowsPerPageOptions:[],\n  textLabels: {\n    body: {\n      noMatch: \"Совпадения не найдены\",\n    }},\n  fixedHeader: true\n};\n  return(\n    <MuiThemeProvider theme={this.getMuiTheme()}>\n        <MUIDataTable \n          title={placeNameHeader}\n          data={data}\n          columns={columns}\n          options={options}\n        />\n    </MuiThemeProvider>)\n}}","import MUIDataTable from \"mui-datatables\";\nimport React, {Component} from 'react'\nimport { createMuiTheme, MuiThemeProvider } from '@material-ui/core/styles';\nvar moment = require('moment');\nmoment().format();\n\n\nexport default class MeteoObsTableDownload extends Component{\n  constructor(props){\n    super(props)\n    this.state = {\n      propsData: null\n    }\n  }\n\n  getMuiTheme = () => createMuiTheme({\n    overrides: {\n\n        MUIDataTableHeadCell: {\n          root: {\n            color: \"#a6a6a6\",\n          }\n        },\n\n    }\n  })\n\n  getData=(data)=>{\n    console.log(data)\n    const new_data=data.map((el)=>{\n      el.observation_date=moment(el.observation_date, 'DDMMYYYYTHHmmss').format('YYYY/MM/DD HH:mm')\n      return el\n    })\n    return new_data\n  }\n\n  render(){\n\n\n\n  const columns = [\n   {\n  name: \"meteo_station_id\",\n  label: \"ID метеостанции\",\n  options: {\n   filter: true,\n\n  }\n },\n {\n  name: \"observation_date\",\n  label: \"Дата\",\n  options: {\n   filter: false,\n\n  }\n },\n {\n  name: \"air_temperature\",\n  label: \"Температура воздуха, C\",\n  options: {\n   filter: false,\n\n  }\n },\n  {\n  name: \"precipitations\",\n  label: \"Количество осадков, мм\",\n  options: {\n   filter: false,\n\n  }\n },\n \n];\n\nconst data = this.getData(this.props.observations)\n\nconst placeNameHeader='Наблюдения метеостанций'\nconst options = {\n  filterType: 'dropdown',\n  download: true,\n  print: false,\n  search: true,\n  responsive: 'stacked',\n  selectableRowsHeader: false,\n  selectableRows: 'none',\n  pagination:true,\n  rowsPerPage:5,\n  rowsPerPageOptions:[],\n  textLabels: {\n    body: {\n      noMatch: \"Совпадения не найдены\",\n    }},\n  fixedHeader: true\n};\n  return(\n    <MuiThemeProvider theme={this.getMuiTheme()}>\n        <MUIDataTable \n          title={placeNameHeader}\n          data={data}\n          columns={columns}\n          options={options}\n        />\n    </MuiThemeProvider>)\n}}","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport Paper from '@material-ui/core/Paper';\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport Typography from '@material-ui/core/Typography';\nimport CardContent from '@material-ui/core/CardContent';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport { green,red } from '@material-ui/core/colors';\nimport Link from '@material-ui/core/Link';\n\nimport StationsTableDownload from './StationsTableDownload.js'\nimport HydroObsTableDownload from './HydroObsTableDownload.js'\nimport MeteoObsTableDownload from './MeteoObsTableDownload.js'\n\nimport {OldEventDataGet} from './request_functions.js'\n\nexport default function DownloadFilesComponent(props) {\n  const [state, setState] = React.useState({\n      firstDataGetState: false,\n      \n      });\n  \n\t\nconst event_name=()=>{\n\t\tconsole.log(state.eventData)\n\t\tif (state.eventData!==undefined){\n\t\t\treturn state.eventData.name_rus\n\t\t}\n\t\telse {\n\t\t\treturn ' '\n\t\t}\n\t\t\n\t}\n\nconst returnCards=()=>{\n\tif (state.eventData==undefined){\n\t\t\treturn <div>\n                    <div style={{display: 'flex', justifyContent:\"center\", margin: '30vh 0 0'}}>\n                    <CircularProgress style={{color: green[500]}}/>\n                    </div>\n                    <Typography color=\"inherit\" align='center' gutterBottom>\n                      Загрузка данных...\n                    </Typography>\n                  </div>\n\t\t}\n\t\telse {\n\t\t\treturn <div style={{width: '100%'}}>\n\t\t\t\t\t\t{returnMultimediaList()}\n\t\t\t\t\t\t{returnMiscRasterDataList()}\n\t\t\t\t\t\t{returnMiscVectorDataList()}\n\t\t\t\t\t\t{returnRemoteSensingDataList()}\n\t\t\t\t\t\t<div style={{margin:'1vh 4%', width: '92%', }}>\n\t\t\t\t\t\t\t<StationsTableDownload stations={state.eventData.observation_stations}/>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t{returnHydroTable()}\n\t\t\t\t\t\t{returnMeteoTable()}\n\t\t\t\t   </div>\n\t\t}\n}\n\nconst returnHydroTable=()=>{\n\tif (state.eventData.hydro_observations.length!==0){\n\t\treturn <div style={{margin:'1vh 4%', width: '92%', }}>\n\t\t\t\t\t<HydroObsTableDownload observations={state.eventData.hydro_observations}/>\n\t\t\t\t</div>\n\t}\n}\nconst returnMeteoTable=()=>{\n\tif (state.eventData.meteo_observations.length!==0){\n\t\treturn <div style={{margin:'1vh 4%', width: '92%', }}>\n\t\t\t\t\t<MeteoObsTableDownload observations={state.eventData.meteo_observations}/>\n\t\t\t\t</div>\n\t}\n}\n\nconst returnMultimediaList=()=>{\n\t\n\t\t\tif (state.eventData.multimedia_records.length!==0){\n\t\t\t\tconst multimedia_records_l=state.eventData.multimedia_records.map((info)=>{\n\t\t\t\t\treturn {name_rus: info.name_rus,\n\t\t\t\t\t\t\tlink: info.file}\n\t\t\t\t})\n\n\t\t\t\t const al=multimedia_records_l.map((el)=>{\n\t\t\t\t \tconst link='http://'+el.link\n\t\t\t\t \treturn <div style={{margin: '1vh 0 0 0'}}>\n\t\t\t\t \t\t\t<Typography ><b>Название:</b></Typography>\n\t\t\t\t \t\t\t<Typography >{el.name_rus}</Typography>\n\t\t\t\t \t\t\t <Link href={link} target='_blank' variant=\"body2\">{'Скачать'}</Link>\n\t\t\t\t \t\t\t</div>\n\t\t\t\t })\n\t\t\t\t return <div style={{margin:'1vh 5%', width: '90%', padding:'1%'}}>\n\t\t\t\t \t\t\t<Typography align='center'>Мультимедийные объекты</Typography>\n\t\t\t\t \t\t\t{al}\n\t\t\t\t \t\t</div>\n\t\t}\n}\n\nconst returnMiscVectorDataList=()=>{\n\t\n\t\t\tif (state.eventData.misc_vector_data.length!==0){\n\t\t\t\tconst misc_vector_data_l=state.eventData.misc_vector_data.map((info)=>{\n\t\t\t\t\treturn {name_rus: info.name_rus,\n\t\t\t\t\t\t\tlink: info.file}\n\t\t\t\t})\n\n\t\t\t\t const al=misc_vector_data_l.map((el)=>{\n\t\t\t\t \tconst link='http://'+el.link\n\t\t\t\t \treturn \t<div style={{margin: '1vh 0 0 0'}}>\n\t\t\t\t \t\t\t<Typography ><b>Название:</b></Typography>\n\t\t\t\t \t\t\t<Typography >{el.name_rus}</Typography>\n\t\t\t\t \t\t\t<Link href={link} target='_blank' variant=\"body2\">{'Скачать'}</Link>\n\t\t\t\t \t\t\t</div>\n\t\t\t\t })\n\t\t\t\t return <div style={{margin:'1vh 5%', width: '90%', padding:'1%'}}>\n\t\t\t\t \t\t\t<Typography align='center'>Векторные данные</Typography>\n\t\t\t\t \t\t\t{al}\n\t\t\t\t \t\t</div>\n\t\t}\n}\n\nconst returnMiscRasterDataList=()=>{\n\t\t\t\n\t\t\tif (state.eventData.misc_raster_data.length!==0){\n\t\t\t\tconsole.log(state.eventData)\n\t\t\t\tconst misc_raster_data_l=state.eventData.misc_raster_data.map((info)=>{\n\t\t\t\t\treturn {name_rus: info.name_rus,\n\t\t\t\t\t\t\tlink: info.file}\n\t\t\t\t})\n\n\t\t\t\t const al=misc_raster_data_l.map((el)=>{\n\t\t\t\t \tconst link='http://'+el.link\n\t\t\t\t \treturn \t<div style={{margin: '1vh 0 0 0'}}>\n\t\t\t\t \t\t\t<Typography ><b>Название:</b></Typography>\n\t\t\t\t \t\t\t<Typography >{el.name_rus}</Typography>\n\t\t\t\t \t\t\t<Link href={link} target='_blank' variant=\"body2\">{'Скачать'}</Link>\n\t\t\t\t \t\t\t</div>\n\t\t\t\t })\n\t\t\t\t return <div style={{margin:'1vh 5%', width: '90%', padding:'1%'}}>\n\t\t\t\t \t\t\t<Typography align='center'>Растровые данные</Typography>\n\t\t\t\t \t\t\t{al}\n\t\t\t\t \t\t</div>\n\t\t}\n}\n\nconst returnRemoteSensingDataList=()=>{\n\t\n\t\t\tif (state.eventData.remote_sensing_data.length!==0){\n\t\t\t\tconst remote_sensing_data_l=state.eventData.remote_sensing_data.map((info)=>{\n\t\t\t\t\treturn {description_rus: info.description_rus,\n\t\t\t\t\t\t\tlink: info.file}\n\t\t\t\t})\n\n\t\t\t\t const al=remote_sensing_data_l.map((el)=>{\n\t\t\t\t \tconst link='http://'+el.link\n\t\t\t\t \treturn \t<div style={{margin: '1vh 0 0 0'}}>\n\t\t\t\t \t\t\t<Typography ><b>Название:</b></Typography>\n\t\t\t\t \t\t\t<Typography >{el.description_rus}</Typography>\n\t\t\t\t \t\t\t<Link href={link} target='_blank' variant=\"body2\">{'Скачать'}</Link>\n\t\t\t\t \t\t\t</div>\n\t\t\t\t })\n\t\t\t\t return <div style={{margin:'1vh 5%', width: '90%', padding:'1%'}}>\n\t\t\t\t \t\t\t<Typography align='center'>Данные дистанционного зондирования</Typography>\n\t\t\t\t \t\t\t{al}\n\t\t\t\t \t\t</div>\n\t\t}\n}\n\nif (state.firstDataGetState==false){\n\t\t\tvar path= window.location.href\n\t\t\tvar event_id=path.split('#')[1]\n\t\t\tOldEventDataGet(event_id).then(data=>\n\t\t\t\t\t\tsetState({...state, eventData: data.data.events[0],\n\t\t\t\t\t\t\t    \t\t\t\t\t   firstDataGetState: true}))\t\n\t\t\t\n}\ndocument.title = 'Скачать данные|Опасные гидрологические явления';\n  return (\n    <div>\n    <Paper elevation={5} style={{margin: '3vh 15vw', height: '94vh', width: '70vw', overflow:'auto', maxHeight:'94vh'}}>\n    <Typography  variant='h5' align='center'>\n    \tФайлы для события: {event_name()}\n    </Typography>\n    \n    {returnCards()}\n    </Paper>\n\n    </div>\n  );\n}","import React, {Component} from 'react';\r\nimport {BrowserRouter as Router, Route} from 'react-router-dom'\r\nimport App from './App.js'\r\nimport Header from './Header.js'\r\nimport EventApp from './EventApp.js'\r\nimport AdminApp from './AdminApp.js'\r\nimport DownloadFilesComponent from './DownloadFilesComponent.js'\r\n\r\n\r\nexport default class FullApp extends Component{\r\n\tconstructor(props){\r\n\t\tsuper(props)\r\n\t\tthis.state = {\r\n\t\t\t\r\n\t\t}\r\n\t}\r\nsetEventData=(event_id)=>{\r\n\tthis.setState((prevState) => {\r\n\t\treturn {eventId: event_id}\r\n})}\r\n\r\n\r\n\trender(){\r\n\t\t\r\n\t\tconst eventPath=\"/eventid/\"+this.state.eventId\r\n\t\t\r\n\r\n\t\treturn(\r\n\t\t\t<div className='App'>\r\n\t\t\t<Router>\r\n\t\t\t<div>\r\n\t\t\t\t<Route exact path=\"/\"  render={() => <App setEventData={(event_id)=>this.setEventData(event_id)}/>}/>\r\n\t\t\t\t<Route path=\"/eventid/\" component={EventApp}/>\r\n\t\t\t\t<Route path=\"/admin/\" component={AdminApp}/>\r\n\t\t\t\t<Route path=\"/download/\" component={DownloadFilesComponent}/>\r\n\r\n\t\t\t</div>\r\n\t\t\t</Router>\r\n\t\t\t</div>\r\n\t\t\t)\r\n\t}\r\n}","import React from 'react';\nimport {render} from 'react-dom';\nimport FullApp from './FullApp';\nimport 'leaflet/dist/leaflet.css'\n\n\nrender (<FullApp/>, document.getElementById(\"root\"))"],"sourceRoot":""}